{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst PROTOCOL_REGEX = /^[a-z]+:/;\nconst ORIGIN_REGEX = /^(?:[a-z]+:?:)?(?:\\/\\/)?([^\\/\\?]+)/;\nlet useSafeHref = false;\nlet globalOrigin = typeof window !== 'undefined' ? window.location.origin : false;\n\nfunction configureSafeHref(configObject) {\n  if (typeof configObject.enabled !== 'undefined') {\n    useSafeHref = configObject.enabled;\n  }\n\n  if (configObject.origin) {\n    globalOrigin = configObject.origin;\n  }\n}\n\nexports.configureSafeHref = configureSafeHref;\n\nfunction getUseSafeHref() {\n  return useSafeHref;\n}\n\nexports.getUseSafeHref = getUseSafeHref;\n\nfunction getURLInfo(url) {\n  /**\n   * An array of the safely allowed url protocols\n   */\n  const safeProtocols = ['http:', 'https:', 'mailto:', 'tel:', 'data:'];\n  /**\n   * - Find protocol of URL or set to 'relative'\n   * - Find origin of URL\n   * - Determine if sameOrigin\n   * - Determine if protocol of URL is safe\n   */\n\n  const protocolResult = url.match(PROTOCOL_REGEX);\n  const originResult = url.match(ORIGIN_REGEX);\n  const urlProtocol = protocolResult ? protocolResult[0] : 'relative';\n  let sameOrigin = urlProtocol === 'relative';\n\n  if (!sameOrigin && globalOrigin) {\n    sameOrigin = globalOrigin === (originResult && originResult[0]);\n  }\n\n  const isSafeProtocol = sameOrigin ? true : safeProtocols.includes(urlProtocol);\n\n  if (!isSafeProtocol) {\n    /**\n     * If the url is unsafe, put a error in the console, and return the URLInfo object\n     * with the value of url being `undefined`\n     */\n    console.error('ðŸ“¦ `href` passed to anchor tag is unsafe. Because of this, the `href` on the element was not set. Please review the safe href documentation if you have questions.', 'https://www.github.com/segmentio/ui-box');\n    return {\n      url: undefined,\n      sameOrigin\n    };\n  }\n  /**\n   * If the url is safe, return the url and origin\n   */\n\n\n  return {\n    url,\n    sameOrigin\n  };\n}\n\nexports.getURLInfo = getURLInfo;\n\nfunction extractAnchorProps(href, rel) {\n  /**\n  * Get url info and update href\n  */\n  const urlInfo = getURLInfo(href);\n  const safeHref = urlInfo.url;\n  /**\n   * If the url passed is safe, we want to also update the attributes of the element\n   * to be safe\n   */\n\n  let safeRel = rel ? rel : '';\n\n  if (urlInfo.url) {\n    if (!safeRel.includes('noopener')) {\n      safeRel += `${safeRel.length > 0 ? ' ' : ''}noopener`;\n    }\n\n    if (!safeRel.includes('noreferrer') && !urlInfo.sameOrigin) {\n      safeRel += `${safeRel.length > 0 ? ' ' : ''}noreferrer`;\n    }\n  }\n\n  return {\n    safeHref,\n    safeRel\n  };\n}\n\nexports.extractAnchorProps = extractAnchorProps;","map":{"version":3,"sources":["../../src/utils/safeHref.ts"],"names":[],"mappings":";;;;;AAUA,MAAM,cAAc,GAAG,UAAvB;AACA,MAAM,YAAY,GAAG,oCAArB;AACA,IAAI,WAAW,GAAG,KAAlB;AACA,IAAI,YAAY,GAAG,OAAO,MAAP,KAAkB,WAAlB,GAAgC,MAAM,CAAC,QAAP,CAAgB,MAAhD,GAAyD,KAA5E;;AAEA,SAAgB,iBAAhB,CAAkC,YAAlC,EAAiE;AAC7D,MAAI,OAAO,YAAY,CAAC,OAApB,KAAgC,WAApC,EAAiD;AAC7C,IAAA,WAAW,GAAG,YAAY,CAAC,OAA3B;AACH;;AAED,MAAI,YAAY,CAAC,MAAjB,EAAyB;AACrB,IAAA,YAAY,GAAG,YAAY,CAAC,MAA5B;AACH;AACJ;;AARD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAUA,SAAgB,cAAhB,GAA8B;AAC1B,SAAO,WAAP;AACH;;AAFD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAIA,SAAgB,UAAhB,CAA2B,GAA3B,EAAsC;AAClC;;AAEG;AACH,QAAM,aAAa,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,EAA+B,MAA/B,EAAuC,OAAvC,CAAtB;AAEA;;;;;AAKG;;AACH,QAAM,cAAc,GAAG,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAvB;AACA,QAAM,YAAY,GAAG,GAAG,CAAC,KAAJ,CAAU,YAAV,CAArB;AACA,QAAM,WAAW,GAAG,cAAc,GAAG,cAAc,CAAC,CAAD,CAAjB,GAAuB,UAAzD;AACA,MAAI,UAAU,GAAG,WAAW,KAAK,UAAjC;;AACA,MAAI,CAAC,UAAD,IAAe,YAAnB,EAAiC;AAC7B,IAAA,UAAU,GAAG,YAAY,MAAM,YAAY,IAAI,YAAY,CAAC,CAAD,CAAlC,CAAzB;AACH;;AAED,QAAM,cAAc,GAAG,UAAU,GAAG,IAAH,GAAU,aAAa,CAAC,QAAd,CAAuB,WAAvB,CAA3C;;AACA,MAAI,CAAC,cAAL,EAAqB;AACjB;;;AAGG;AACH,IAAA,OAAO,CAAC,KAAR,CACI,oKADJ,EAEI,yCAFJ;AAIA,WAAO;AACH,MAAA,GAAG,EAAE,SADF;AAEH,MAAA;AAFG,KAAP;AAIH;AAED;;AAEG;;;AACH,SAAO;AACH,IAAA,GADG;AAEH,IAAA;AAFG,GAAP;AAIH;;AA3CD,OAAA,CAAA,UAAA,GAAA,UAAA;;AA6CA,SAAgB,kBAAhB,CAAmC,IAAnC,EAAiD,GAAjD,EAA4D;AACvD;;AAEE;AACH,QAAM,OAAO,GAAG,UAAU,CAAC,IAAD,CAA1B;AACA,QAAM,QAAQ,GAAG,OAAO,CAAC,GAAzB;AAEA;;;AAGG;;AAEH,MAAI,OAAO,GAAG,GAAG,GAAG,GAAH,GAAS,EAA1B;;AACA,MAAI,OAAO,CAAC,GAAZ,EAAiB;AACf,QAAI,CAAC,OAAO,CAAC,QAAR,CAAiB,UAAjB,CAAL,EAAmC;AACjC,MAAA,OAAO,IAAI,GAAG,OAAO,CAAC,MAAR,GAAiB,CAAjB,GAAqB,GAArB,GAA2B,EAAE,UAA3C;AACD;;AAED,QAAI,CAAC,OAAO,CAAC,QAAR,CAAiB,YAAjB,CAAD,IAAmC,CAAC,OAAO,CAAC,UAAhD,EAA4D;AAC1D,MAAA,OAAO,IAAI,GAAG,OAAO,CAAC,MAAR,GAAiB,CAAjB,GAAqB,GAArB,GAA2B,EAAE,YAA3C;AACD;AACF;;AAED,SAAO;AACH,IAAA,QADG;AAEH,IAAA;AAFG,GAAP;AAIH;;AA3BD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PROTOCOL_REGEX = /^[a-z]+:/;\nconst ORIGIN_REGEX = /^(?:[a-z]+:?:)?(?:\\/\\/)?([^\\/\\?]+)/;\nlet useSafeHref = false;\nlet globalOrigin = typeof window !== 'undefined' ? window.location.origin : false;\nfunction configureSafeHref(configObject) {\n    if (typeof configObject.enabled !== 'undefined') {\n        useSafeHref = configObject.enabled;\n    }\n    if (configObject.origin) {\n        globalOrigin = configObject.origin;\n    }\n}\nexports.configureSafeHref = configureSafeHref;\nfunction getUseSafeHref() {\n    return useSafeHref;\n}\nexports.getUseSafeHref = getUseSafeHref;\nfunction getURLInfo(url) {\n    /**\n     * An array of the safely allowed url protocols\n     */\n    const safeProtocols = ['http:', 'https:', 'mailto:', 'tel:', 'data:'];\n    /**\n     * - Find protocol of URL or set to 'relative'\n     * - Find origin of URL\n     * - Determine if sameOrigin\n     * - Determine if protocol of URL is safe\n     */\n    const protocolResult = url.match(PROTOCOL_REGEX);\n    const originResult = url.match(ORIGIN_REGEX);\n    const urlProtocol = protocolResult ? protocolResult[0] : 'relative';\n    let sameOrigin = urlProtocol === 'relative';\n    if (!sameOrigin && globalOrigin) {\n        sameOrigin = globalOrigin === (originResult && originResult[0]);\n    }\n    const isSafeProtocol = sameOrigin ? true : safeProtocols.includes(urlProtocol);\n    if (!isSafeProtocol) {\n        /**\n         * If the url is unsafe, put a error in the console, and return the URLInfo object\n         * with the value of url being `undefined`\n         */\n        console.error('ðŸ“¦ `href` passed to anchor tag is unsafe. Because of this, the `href` on the element was not set. Please review the safe href documentation if you have questions.', 'https://www.github.com/segmentio/ui-box');\n        return {\n            url: undefined,\n            sameOrigin\n        };\n    }\n    /**\n     * If the url is safe, return the url and origin\n     */\n    return {\n        url,\n        sameOrigin\n    };\n}\nexports.getURLInfo = getURLInfo;\nfunction extractAnchorProps(href, rel) {\n    /**\n    * Get url info and update href\n    */\n    const urlInfo = getURLInfo(href);\n    const safeHref = urlInfo.url;\n    /**\n     * If the url passed is safe, we want to also update the attributes of the element\n     * to be safe\n     */\n    let safeRel = rel ? rel : '';\n    if (urlInfo.url) {\n        if (!safeRel.includes('noopener')) {\n            safeRel += `${safeRel.length > 0 ? ' ' : ''}noopener`;\n        }\n        if (!safeRel.includes('noreferrer') && !urlInfo.sameOrigin) {\n            safeRel += `${safeRel.length > 0 ? ' ' : ''}noreferrer`;\n        }\n    }\n    return {\n        safeHref,\n        safeRel\n    };\n}\nexports.extractAnchorProps = extractAnchorProps;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FmZUhyZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvc2FmZUhyZWYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFVQSxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUE7QUFDakMsTUFBTSxZQUFZLEdBQUcsb0NBQW9DLENBQUE7QUFDekQsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFBO0FBQ3ZCLElBQUksWUFBWSxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQTtBQUVqRixTQUFnQixpQkFBaUIsQ0FBQyxZQUErQjtJQUM3RCxJQUFJLE9BQU8sWUFBWSxDQUFDLE9BQU8sS0FBSyxXQUFXLEVBQUU7UUFDN0MsV0FBVyxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUE7S0FDckM7SUFFRCxJQUFJLFlBQVksQ0FBQyxNQUFNLEVBQUU7UUFDckIsWUFBWSxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUE7S0FDckM7QUFDTCxDQUFDO0FBUkQsOENBUUM7QUFFRCxTQUFnQixjQUFjO0lBQzFCLE9BQU8sV0FBVyxDQUFBO0FBQ3RCLENBQUM7QUFGRCx3Q0FFQztBQUVELFNBQWdCLFVBQVUsQ0FBQyxHQUFXO0lBQ2xDOztPQUVHO0lBQ0gsTUFBTSxhQUFhLEdBQUcsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUE7SUFFckU7Ozs7O09BS0c7SUFDSCxNQUFNLGNBQWMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFBO0lBQ2hELE1BQU0sWUFBWSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUE7SUFDNUMsTUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQTtJQUNuRSxJQUFJLFVBQVUsR0FBRyxXQUFXLEtBQUssVUFBVSxDQUFBO0lBQzNDLElBQUksQ0FBQyxVQUFVLElBQUksWUFBWSxFQUFFO1FBQzdCLFVBQVUsR0FBRyxZQUFZLEtBQUssQ0FBQyxZQUFZLElBQUksWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7S0FDbEU7SUFFRCxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQTtJQUM5RSxJQUFJLENBQUMsY0FBYyxFQUFFO1FBQ2pCOzs7V0FHRztRQUNILE9BQU8sQ0FBQyxLQUFLLENBQ1Qsb0tBQW9LLEVBQ3BLLHlDQUF5QyxDQUM1QyxDQUFBO1FBQ0QsT0FBTztZQUNILEdBQUcsRUFBRSxTQUFTO1lBQ2QsVUFBVTtTQUNiLENBQUE7S0FDSjtJQUVEOztPQUVHO0lBQ0gsT0FBTztRQUNILEdBQUc7UUFDSCxVQUFVO0tBQ2IsQ0FBQTtBQUNMLENBQUM7QUEzQ0QsZ0NBMkNDO0FBRUQsU0FBZ0Isa0JBQWtCLENBQUMsSUFBWSxFQUFFLEdBQVc7SUFDdkQ7O01BRUU7SUFDSCxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDaEMsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQTtJQUU1Qjs7O09BR0c7SUFFSCxJQUFJLE9BQU8sR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBO0lBQzVCLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtRQUNmLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQ2pDLE9BQU8sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFBO1NBQ3REO1FBRUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFO1lBQzFELE9BQU8sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsWUFBWSxDQUFBO1NBQ3hEO0tBQ0Y7SUFFRCxPQUFPO1FBQ0gsUUFBUTtRQUNSLE9BQU87S0FDVixDQUFBO0FBQ0wsQ0FBQztBQTNCRCxnREEyQkMifQ=="]},"metadata":{},"sourceType":"script"}