{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { Heading } from '../../typography';\nimport { IconButton } from '../../buttons';\nimport { CrossIcon } from '../../icons';\nimport OptionsList from './OptionsList';\nimport OptionShapePropType from './OptionShapePropType';\n\nvar DefaultTitleView = function DefaultTitleView(_ref) {\n  var close = _ref.close,\n      title = _ref.title,\n      headerHeight = _ref.headerHeight;\n  return React.createElement(Pane, {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"default\",\n    padding: 8,\n    height: headerHeight,\n    boxSizing: \"border-box\"\n  }, React.createElement(Pane, {\n    flex: \"1\",\n    display: \"flex\",\n    alignItems: \"center\"\n  }, React.createElement(Heading, {\n    size: 400\n  }, title)), React.createElement(IconButton, {\n    icon: CrossIcon,\n    appearance: \"minimal\",\n    height: 24,\n    onClick: close\n  }));\n};\n\nDefaultTitleView.displayName = \"DefaultTitleView\";\nDefaultTitleView.propTypes = {\n  close: PropTypes.func,\n  title: PropTypes.string,\n  headerHeight: PropTypes.number\n};\n\nvar SelectMenuContent = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SelectMenuContent, _PureComponent);\n\n  function SelectMenuContent() {\n    _classCallCheck(this, SelectMenuContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SelectMenuContent).apply(this, arguments));\n  }\n\n  _createClass(SelectMenuContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          width = _this$props.width,\n          height = _this$props.height,\n          options = _this$props.options,\n          hasTitle = _this$props.hasTitle,\n          hasFilter = _this$props.hasFilter,\n          filterPlaceholder = _this$props.filterPlaceholder,\n          filterIcon = _this$props.filterIcon,\n          close = _this$props.close,\n          listProps = _this$props.listProps,\n          titleView = _this$props.titleView,\n          detailView = _this$props.detailView,\n          emptyView = _this$props.emptyView,\n          isMultiSelect = _this$props.isMultiSelect,\n          closeOnSelect = _this$props.closeOnSelect;\n      var headerHeight = 40;\n      var optionsListHeight = hasTitle ? height - headerHeight : height;\n      var hasDetailView = Boolean(detailView);\n      var hasEmptyView = Boolean(emptyView);\n      return React.createElement(Pane, {\n        display: \"flex\",\n        height: height\n      }, React.createElement(Pane, {\n        width: width,\n        height: height,\n        display: \"flex\",\n        flexDirection: \"column\",\n        borderRight: hasDetailView ? 'muted' : null\n      }, hasTitle && titleView({\n        close: close,\n        title: title,\n        headerHeight: headerHeight\n      }), options.length === 0 && hasEmptyView ? React.createElement(Pane, {\n        height: optionsListHeight\n      }, emptyView) : React.createElement(OptionsList, _extends({\n        height: optionsListHeight,\n        hasFilter: hasFilter,\n        filterPlaceholder: filterPlaceholder,\n        filterIcon: filterIcon,\n        options: options,\n        isMultiSelect: isMultiSelect,\n        close: close,\n        closeOnSelect: closeOnSelect\n      }, listProps))), hasDetailView && detailView);\n    }\n  }]);\n\n  return SelectMenuContent;\n}(PureComponent);\n\nSelectMenuContent.displayName = \"SelectMenuContent\";\n\n_defineProperty(SelectMenuContent, \"propTypes\", {\n  close: PropTypes.func,\n  title: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  headerHeight: PropTypes.number,\n  options: PropTypes.arrayOf(OptionShapePropType),\n  hasTitle: PropTypes.bool,\n  hasFilter: PropTypes.bool,\n  filterPlaceholder: PropTypes.string,\n  filterIcon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element, PropTypes.string]),\n  listProps: PropTypes.shape(OptionsList.propTypes),\n\n  /**\n   * When true, multi select is accounted for.\n   */\n  isMultiSelect: PropTypes.bool,\n\n  /*\n   * When true, menu closes on option selection.\n   */\n  closeOnSelect: PropTypes.bool,\n\n  /**\n   * Node that is placed in the header section, above the options.\n   */\n  titleView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n  /**\n   * Node that is placed right next to the options.\n   */\n  detailView: PropTypes.node,\n\n  /**\n   * Node that is displayed instead of options list when there are no options.\n   */\n  emptyView: PropTypes.node\n});\n\n_defineProperty(SelectMenuContent, \"defaultProps\", {\n  options: [],\n  hasTitle: true,\n  hasFilter: true,\n  titleView: DefaultTitleView\n});\n\nexport { SelectMenuContent as default };","map":{"version":3,"sources":["../../../src/select-menu/src/SelectMenuContent.js"],"names":["DefaultTitleView","close","title","headerHeight","PropTypes","number","SelectMenuContent","PureComponent","width","height","options","hasTitle","hasFilter","filterPlaceholder","filterIcon","listProps","OptionsList","isMultiSelect","closeOnSelect","titleView","detailView","emptyView","node","optionsListHeight","hasDetailView","Boolean","hasEmptyView"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport { Heading } from '../../typography'\nimport { IconButton } from '../../buttons'\nimport { CrossIcon } from '../../icons'\nimport OptionsList from './OptionsList'\nimport OptionShapePropType from './OptionShapePropType'\n\nconst DefaultTitleView = ({ close, title, headerHeight }) => (\n  <Pane\n    display=\"flex\"\n    alignItems=\"center\"\n    borderBottom=\"default\"\n    padding={8}\n    height={headerHeight}\n    boxSizing=\"border-box\"\n  >\n    <Pane flex=\"1\" display=\"flex\" alignItems=\"center\">\n      <Heading size={400}>{title}</Heading>\n    </Pane>\n    <IconButton\n      icon={CrossIcon}\n      appearance=\"minimal\"\n      height={24}\n      onClick={close}\n    />\n  </Pane>\n)\n\nDefaultTitleView.propTypes = {\n  close: PropTypes.func,\n  title: PropTypes.string,\n  headerHeight: PropTypes.number\n}\nexport default class SelectMenuContent extends PureComponent {\n  static propTypes = {\n    close: PropTypes.func,\n    title: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    headerHeight: PropTypes.number,\n    options: PropTypes.arrayOf(OptionShapePropType),\n    hasTitle: PropTypes.bool,\n    hasFilter: PropTypes.bool,\n    filterPlaceholder: PropTypes.string,\n    filterIcon: PropTypes.oneOfType([\n      PropTypes.elementType,\n      PropTypes.element,\n      PropTypes.string\n    ]),\n    listProps: PropTypes.shape(OptionsList.propTypes),\n\n    /**\n     * When true, multi select is accounted for.\n     */\n    isMultiSelect: PropTypes.bool,\n\n    /*\n     * When true, menu closes on option selection.\n     */\n    closeOnSelect: PropTypes.bool,\n\n    /**\n     * Node that is placed in the header section, above the options.\n     */\n    titleView: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n\n    /**\n     * Node that is placed right next to the options.\n     */\n    detailView: PropTypes.node,\n\n    /**\n     * Node that is displayed instead of options list when there are no options.\n     */\n    emptyView: PropTypes.node\n  }\n\n  static defaultProps = {\n    options: [],\n    hasTitle: true,\n    hasFilter: true,\n    titleView: DefaultTitleView\n  }\n\n  render() {\n    const {\n      title,\n      width,\n      height,\n      options,\n      hasTitle,\n      hasFilter,\n      filterPlaceholder,\n      filterIcon,\n      close,\n      listProps,\n      titleView,\n      detailView,\n      emptyView,\n      isMultiSelect,\n      closeOnSelect\n    } = this.props\n\n    const headerHeight = 40\n    const optionsListHeight = hasTitle ? height - headerHeight : height\n\n    const hasDetailView = Boolean(detailView)\n    const hasEmptyView = Boolean(emptyView)\n\n    return (\n      <Pane display=\"flex\" height={height}>\n        <Pane\n          width={width}\n          height={height}\n          display=\"flex\"\n          flexDirection=\"column\"\n          borderRight={hasDetailView ? 'muted' : null}\n        >\n          {hasTitle && titleView({ close, title, headerHeight })}\n          {options.length === 0 && hasEmptyView ? (\n            <Pane height={optionsListHeight}>{emptyView}</Pane>\n          ) : (\n            <OptionsList\n              height={optionsListHeight}\n              hasFilter={hasFilter}\n              filterPlaceholder={filterPlaceholder}\n              filterIcon={filterIcon}\n              options={options}\n              isMultiSelect={isMultiSelect}\n              close={close}\n              closeOnSelect={closeOnSelect}\n              {...listProps}\n            />\n          )}\n        </Pane>\n        {hasDetailView && detailView}\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}