{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { spacing, dimensions, position, layout } from 'ui-box';\nimport { withTheme } from '../../theme';\nimport { Pane } from '../../layers';\nimport { Heading, Paragraph } from '../../typography';\nimport { IconButton } from '../../buttons';\nimport { Icon } from '../../icon';\nimport { CrossIcon } from '../../icons';\n\nvar Alert = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Alert, _PureComponent);\n\n  function Alert() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Alert);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Alert)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getIconForIntent\", function (intent) {\n      var theme = _this.props.theme;\n      return React.createElement(Icon, _extends({\n        size: 14\n      }, theme.getIconForIntent(intent)));\n    });\n\n    return _this;\n  }\n\n  _createClass(Alert, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          title = _this$props.title,\n          intent = _this$props.intent,\n          hasTrim = _this$props.hasTrim,\n          hasIcon = _this$props.hasIcon,\n          children = _this$props.children,\n          appearance = _this$props.appearance,\n          isRemoveable = _this$props.isRemoveable,\n          onRemove = _this$props.onRemove,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"title\", \"intent\", \"hasTrim\", \"hasIcon\", \"children\", \"appearance\", \"isRemoveable\", \"onRemove\"]);\n      /**\n       * Note that Alert return a className and additional properties.\n       */\n\n\n      var _theme$getAlertProps = theme.getAlertProps({\n        appearance: appearance,\n        intent: intent,\n        hasTrim: hasTrim\n      }),\n          className = _theme$getAlertProps.className,\n          themeProps = _objectWithoutProperties(_theme$getAlertProps, [\"className\"]);\n\n      return React.createElement(Pane, _extends({\n        className: className,\n        role: \"alert\",\n        backgroundColor: \"white\",\n        overflow: \"hidden\",\n        position: \"relative\",\n        display: \"flex\",\n        paddingY: 12,\n        paddingX: 16\n      }, themeProps, props), hasIcon && React.createElement(Pane, {\n        marginRight: 10,\n        marginLeft: 2,\n        height: 20,\n        display: \"flex\",\n        alignItems: \"center\"\n      }, this.getIconForIntent(intent)), React.createElement(Pane, {\n        display: \"flex\",\n        width: \"100%\"\n      }, React.createElement(Pane, {\n        flex: 1\n      }, React.createElement(Heading, {\n        is: \"h4\",\n        fontWeight: 600,\n        size: 400,\n        marginTop: 0,\n        marginBottom: 0\n      }, title), typeof children === 'string' ? React.createElement(Paragraph, {\n        size: 400,\n        color: \"muted\"\n      }, children) : children), isRemoveable && React.createElement(Pane, {\n        marginLeft: 24,\n        flexShrink: 0,\n        marginBottom: -2,\n        marginTop: -2,\n        marginRight: -2\n      }, React.createElement(IconButton, {\n        icon: CrossIcon,\n        appearance: \"minimal\",\n        height: 24,\n        onClick: onRemove\n      }))));\n    }\n  }]);\n\n  return Alert;\n}(PureComponent);\n\nAlert.displayName = \"Alert\";\n\n_defineProperty(Alert, \"propTypes\", _objectSpread({}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes, {}, dimensions.propTypes, {\n  /**\n   * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * The intent of the alert.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,\n\n  /**\n   * The title of the alert.\n   */\n  title: PropTypes.node,\n\n  /**\n   * When true, show a border on the left matching the type.\n   */\n  hasTrim: PropTypes.bool,\n\n  /**\n   * When true, show a icon on the left matching the type,\n   */\n  hasIcon: PropTypes.bool,\n\n  /**\n   * When true, show a remove icon button.\n   */\n  isRemoveable: PropTypes.bool,\n\n  /**\n   * Function called when the remove button is clicked.\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * The appearance of the alert.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']),\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Alert, \"defaultProps\", {\n  intent: 'none',\n  hasTrim: true,\n  hasIcon: true,\n  isRemoveable: false,\n  appearance: 'default'\n});\n\nexport default withTheme(Alert);","map":{"version":3,"sources":["../../../src/alert/src/Alert.js"],"names":["Alert","PureComponent","spacing","propTypes","position","layout","dimensions","children","PropTypes","intent","isRequired","title","node","hasTrim","bool","hasIcon","isRemoveable","onRemove","func","appearance","theme","props","className","themeProps","withTheme"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { spacing, dimensions, position, layout } from 'ui-box'\nimport { withTheme } from '../../theme'\nimport { Pane } from '../../layers'\nimport { Heading, Paragraph } from '../../typography'\nimport { IconButton } from '../../buttons'\nimport { Icon } from '../../icon'\nimport { CrossIcon } from '../../icons'\n\nclass Alert extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes some Box APIs.\n     */\n    ...spacing.propTypes,\n    ...position.propTypes,\n    ...layout.propTypes,\n    ...dimensions.propTypes,\n\n    /**\n     * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.\n     */\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n    /**\n     * The intent of the alert.\n     */\n    intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger'])\n      .isRequired,\n\n    /**\n     * The title of the alert.\n     */\n    title: PropTypes.node,\n\n    /**\n     * When true, show a border on the left matching the type.\n     */\n    hasTrim: PropTypes.bool,\n\n    /**\n     * When true, show a icon on the left matching the type,\n     */\n    hasIcon: PropTypes.bool,\n\n    /**\n     * When true, show a remove icon button.\n     */\n    isRemoveable: PropTypes.bool,\n\n    /**\n     * Function called when the remove button is clicked.\n     */\n    onRemove: PropTypes.func,\n\n    /**\n     * The appearance of the alert.\n     */\n    appearance: PropTypes.oneOf(['default', 'card']),\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    intent: 'none',\n    hasTrim: true,\n    hasIcon: true,\n    isRemoveable: false,\n    appearance: 'default'\n  }\n\n  getIconForIntent = intent => {\n    const { theme } = this.props\n\n    return <Icon size={14} {...theme.getIconForIntent(intent)} />\n  }\n\n  render() {\n    const {\n      theme,\n\n      title,\n      intent,\n      hasTrim,\n      hasIcon,\n      children,\n      appearance,\n      isRemoveable,\n      onRemove,\n      ...props\n    } = this.props\n\n    /**\n     * Note that Alert return a className and additional properties.\n     */\n    const { className, ...themeProps } = theme.getAlertProps({\n      appearance,\n      intent,\n      hasTrim\n    })\n\n    return (\n      <Pane\n        className={className}\n        role=\"alert\"\n        backgroundColor=\"white\"\n        overflow=\"hidden\"\n        position=\"relative\"\n        display=\"flex\"\n        paddingY={12}\n        paddingX={16}\n        {...themeProps}\n        {...props}\n      >\n        {hasIcon && (\n          <Pane\n            marginRight={10}\n            marginLeft={2}\n            height={20}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {this.getIconForIntent(intent)}\n          </Pane>\n        )}\n        <Pane display=\"flex\" width=\"100%\">\n          <Pane flex={1}>\n            <Heading\n              is=\"h4\"\n              fontWeight={600}\n              size={400}\n              marginTop={0}\n              marginBottom={0}\n            >\n              {title}\n            </Heading>\n            {typeof children === 'string' ? (\n              <Paragraph size={400} color=\"muted\">\n                {children}\n              </Paragraph>\n            ) : (\n              children\n            )}\n          </Pane>\n          {isRemoveable && (\n            <Pane\n              marginLeft={24}\n              flexShrink={0}\n              marginBottom={-2}\n              marginTop={-2}\n              marginRight={-2}\n            >\n              <IconButton\n                icon={CrossIcon}\n                appearance=\"minimal\"\n                height={24}\n                onClick={onRemove}\n              />\n            </Pane>\n          )}\n        </Pane>\n      </Pane>\n    )\n  }\n}\n\nexport default withTheme(Alert)\n"]},"metadata":{},"sourceType":"module"}