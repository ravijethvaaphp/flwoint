{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport countries from './countries';\n\nvar ReactFlagsSelect = function (_Component) {\n  _inherits(ReactFlagsSelect, _Component);\n\n  function ReactFlagsSelect(props) {\n    _classCallCheck(this, ReactFlagsSelect);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    var defaultCountry = countries[_this.props.defaultCountry] && _this.props.defaultCountry;\n    _this.state = {\n      openOptions: false,\n      defaultCountry: defaultCountry,\n      filteredCountries: []\n    };\n    _this.toggleOptions = _this.toggleOptions.bind(_this);\n    _this.closeOptions = _this.closeOptions.bind(_this);\n    _this.onSelect = _this.onSelect.bind(_this);\n    _this.filterSearch = _this.filterSearch.bind(_this);\n    _this.setCountries = _this.setCountries.bind(_this);\n    return _this;\n  }\n\n  ReactFlagsSelect.prototype.toggleOptions = function toggleOptions() {\n    !this.state.disabled && this.setState({\n      openOptions: !this.state.openOptions\n    });\n  };\n\n  ReactFlagsSelect.prototype.toggleOptionsWithKeyboard = function toggleOptionsWithKeyboard(evt) {\n    evt.preventDefault();\n\n    if (evt.keyCode === 27) {\n      //esc key: hide options\n      !this.state.disabled && this.setState({\n        openOptions: false\n      });\n    }\n  };\n\n  ReactFlagsSelect.prototype.closeOptions = function closeOptions(event) {\n    if (event.target !== this.refs.selectedFlag && event.target !== this.refs.flagOptions && event.target !== this.refs.filterText) {\n      this.setState({\n        openOptions: false\n      });\n    }\n  };\n\n  ReactFlagsSelect.prototype.onSelect = function onSelect(countryCode) {\n    this.setState({\n      selected: countryCode,\n      filter: ''\n    });\n    this.props.onSelect && this.props.onSelect(countryCode);\n  };\n\n  ReactFlagsSelect.prototype.onSelectWithKeyboard = function onSelectWithKeyboard(evt, countryCode) {\n    evt.preventDefault();\n\n    if (evt.keyCode === 13) {\n      //enter key: select\n      this.onSelect(countryCode);\n      this.closeOptions(evt);\n    } else if (evt.keyCode === 27) {\n      //esc key: hide options\n      this.toggleOptions();\n    }\n  };\n\n  ReactFlagsSelect.prototype.updateSelected = function updateSelected(countryCode) {\n    var isValid = countries[countryCode];\n    isValid && this.setState({\n      selected: countryCode\n    });\n  };\n\n  ReactFlagsSelect.prototype.filterSearch = function filterSearch(evt) {\n    var _this2 = this;\n\n    var filterValue = evt.target.value;\n    var filteredCountries = filterValue && this.state.countries.filter(function (key) {\n      var label = _this2.props.customLabels[key] || countries[key];\n      return label && label.match(new RegExp(filterValue, 'i'));\n    });\n    this.setState({\n      filter: filterValue,\n      filteredCountries: filteredCountries\n    });\n  };\n\n  ReactFlagsSelect.prototype.setCountries = function setCountries() {\n    var _this3 = this;\n\n    var fullCountries = Object.keys(countries);\n    var selectCountries = this.props.countries && this.props.countries.filter(function (country) {\n      return countries[country];\n    }); //Filter BlackList\n\n    if (this.props.blackList && selectCountries) {\n      selectCountries = fullCountries.filter(function (countryKey) {\n        return selectCountries.filter(function (country) {\n          return countryKey === country;\n        }).length === 0;\n      });\n    }\n\n    this.setState({\n      countries: selectCountries || fullCountries\n    }, function () {\n      var selected = _this3.state.selected;\n\n      if (selected && !_this3.state.countries.includes(selected)) {\n        _this3.setState({\n          selected: null\n        });\n      }\n    });\n  };\n\n  ReactFlagsSelect.prototype.componentDidMount = function componentDidMount() {\n    this.setCountries();\n    !this.props.disabled && window.addEventListener(\"click\", this.closeOptions);\n  };\n\n  ReactFlagsSelect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.countries !== this.props.countries || prevProps.blackList !== this.props.blackList) {\n      this.setCountries();\n    }\n  };\n\n  ReactFlagsSelect.prototype.componentWillUnmount = function componentWillUnmount() {\n    !this.props.disabled && window.removeEventListener(\"click\", this.closeOptions);\n  };\n\n  ReactFlagsSelect.prototype.render = function render() {\n    var _this4 = this;\n\n    var isSelected = this.state.selected || this.state.defaultCountry;\n    var selectedSize = this.props.selectedSize;\n    var optionsSize = this.props.optionsSize;\n    var alignClass = this.props.alignOptions.toLowerCase() === 'left' ? 'to--left' : '';\n    return React.createElement('div', {\n      className: 'flag-select ' + (this.props.className ? this.props.className : \"\")\n    }, React.createElement('button', {\n      ref: 'selectedFlag',\n      style: {\n        fontSize: selectedSize + 'px'\n      },\n      className: 'flag-select__btn',\n      onClick: this.toggleOptions,\n      onKeyUp: function onKeyUp(evt) {\n        return _this4.toggleOptionsWithKeyboard(evt);\n      },\n      disabled: this.props.disabled,\n      id: 'select_flag_button',\n      type: this.props.buttonType,\n      'aria-haspopup': 'listbox',\n      'aria-expanded': this.state.openOptions,\n      'aria-labelledby': 'select_flag_button'\n    }, isSelected && React.createElement('span', {\n      className: 'flag-select__option flag-select__option--placeholder'\n    }, React.createElement('img', {\n      className: 'flag-select__option__icon',\n      src: require('../flags/' + isSelected.toLowerCase() + '.svg'),\n      alt: isSelected\n    }), this.props.showSelectedLabel && React.createElement('span', {\n      className: 'flag-select__option__label'\n    }, this.props.customLabels[isSelected] || countries[isSelected])), !isSelected && React.createElement('span', {\n      className: 'flag-select__option flag-select__option--placeholder'\n    }, this.props.placeholder)), this.state.openOptions && React.createElement('ul', {\n      tabIndex: '-1',\n      role: 'listbox',\n      ref: 'flagOptions',\n      style: {\n        fontSize: optionsSize + 'px'\n      },\n      className: 'flag-select__options ' + alignClass\n    }, this.props.searchable && React.createElement('div', {\n      className: 'filterBox'\n    }, React.createElement('input', {\n      type: 'text',\n      placeholder: this.props.searchPlaceholder,\n      ref: 'filterText',\n      onChange: this.filterSearch\n    })), (this.state.filter ? this.state.filteredCountries : this.state.countries).map(function (countryCode) {\n      return React.createElement('li', {\n        key: countryCode,\n        role: 'option',\n        tabIndex: '0',\n        id: 'select_flag_' + countryCode,\n        className: 'flag-select__option ' + (_this4.props.showOptionLabel ? 'has-label' : ''),\n        onClick: function onClick() {\n          return _this4.onSelect(countryCode);\n        },\n        onKeyUp: function onKeyUp(evt) {\n          return _this4.onSelectWithKeyboard(evt, countryCode);\n        }\n      }, React.createElement('span', {\n        style: {\n          width: optionsSize + 'px',\n          height: optionsSize + 'px'\n        }\n      }, React.createElement('img', {\n        className: 'flag-select__option__icon',\n        alt: 'flag for ' + countries[countryCode],\n        src: require('../flags/' + countryCode.toLowerCase() + '.svg')\n      }), _this4.props.showOptionLabel && React.createElement('span', {\n        className: 'flag-select__option__label'\n      }, _this4.props.customLabels[countryCode] || countries[countryCode])));\n    })));\n  };\n\n  return ReactFlagsSelect;\n}(Component);\n\nReactFlagsSelect.defaultProps = {\n  selectedSize: 16,\n  optionsSize: 14,\n  placeholder: \"Select a country\",\n  showSelectedLabel: true,\n  showOptionLabel: true,\n  alignOptions: \"right\",\n  customLabels: {},\n  disabled: false,\n  buttonType: \"button\",\n  blackList: false,\n  searchable: false,\n  searchPlaceholder: 'Search'\n};\nReactFlagsSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  countries: PropTypes.array,\n  blackList: PropTypes.bool,\n  customLabels: PropTypes.object,\n  selectedSize: PropTypes.number,\n  optionsSize: PropTypes.number,\n  defaultCountry: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  showSelectedLabel: PropTypes.bool,\n  showOptionLabel: PropTypes.bool,\n  alignOptions: PropTypes.string,\n  onSelect: PropTypes.func,\n  disabled: PropTypes.bool,\n  buttonType: PropTypes.string,\n  searchable: PropTypes.bool,\n  searchPlaceholder: PropTypes.string\n} : {};\nexport default ReactFlagsSelect;","map":{"version":3,"sources":["/Users/ravi/Desktop/tasket_react/node_modules/react-flags-select/es/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","Component","PropTypes","countries","ReactFlagsSelect","_Component","props","_this","defaultCountry","state","openOptions","filteredCountries","toggleOptions","bind","closeOptions","onSelect","filterSearch","setCountries","disabled","setState","toggleOptionsWithKeyboard","evt","preventDefault","keyCode","event","target","refs","selectedFlag","flagOptions","filterText","countryCode","selected","filter","onSelectWithKeyboard","updateSelected","isValid","_this2","filterValue","key","label","customLabels","match","RegExp","_this3","fullCountries","keys","selectCountries","country","blackList","countryKey","length","includes","componentDidMount","window","addEventListener","componentDidUpdate","prevProps","componentWillUnmount","removeEventListener","render","_this4","isSelected","selectedSize","optionsSize","alignClass","alignOptions","toLowerCase","createElement","className","ref","style","fontSize","onClick","onKeyUp","id","type","buttonType","src","require","alt","showSelectedLabel","placeholder","tabIndex","role","searchable","searchPlaceholder","onChange","map","showOptionLabel","width","height","defaultProps","propTypes","process","env","NODE_ENV","array","bool","object","number","string","func"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport countries from './countries';\n\nvar ReactFlagsSelect = function (_Component) {\n\t_inherits(ReactFlagsSelect, _Component);\n\n\tfunction ReactFlagsSelect(props) {\n\t\t_classCallCheck(this, ReactFlagsSelect);\n\n\t\tvar _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n\t\tvar defaultCountry = countries[_this.props.defaultCountry] && _this.props.defaultCountry;\n\n\t\t_this.state = {\n\t\t\topenOptions: false,\n\t\t\tdefaultCountry: defaultCountry,\n\t\t\tfilteredCountries: []\n\t\t};\n\n\t\t_this.toggleOptions = _this.toggleOptions.bind(_this);\n\t\t_this.closeOptions = _this.closeOptions.bind(_this);\n\t\t_this.onSelect = _this.onSelect.bind(_this);\n\t\t_this.filterSearch = _this.filterSearch.bind(_this);\n\t\t_this.setCountries = _this.setCountries.bind(_this);\n\t\treturn _this;\n\t}\n\n\tReactFlagsSelect.prototype.toggleOptions = function toggleOptions() {\n\t\t!this.state.disabled && this.setState({\n\t\t\topenOptions: !this.state.openOptions\n\t\t});\n\t};\n\n\tReactFlagsSelect.prototype.toggleOptionsWithKeyboard = function toggleOptionsWithKeyboard(evt) {\n\t\tevt.preventDefault();\n\t\tif (evt.keyCode === 27) {\n\t\t\t//esc key: hide options\n\t\t\t!this.state.disabled && this.setState({\n\t\t\t\topenOptions: false\n\t\t\t});\n\t\t}\n\t};\n\n\tReactFlagsSelect.prototype.closeOptions = function closeOptions(event) {\n\t\tif (event.target !== this.refs.selectedFlag && event.target !== this.refs.flagOptions && event.target !== this.refs.filterText) {\n\t\t\tthis.setState({\n\t\t\t\topenOptions: false\n\t\t\t});\n\t\t}\n\t};\n\n\tReactFlagsSelect.prototype.onSelect = function onSelect(countryCode) {\n\t\tthis.setState({\n\t\t\tselected: countryCode,\n\t\t\tfilter: ''\n\t\t});\n\t\tthis.props.onSelect && this.props.onSelect(countryCode);\n\t};\n\n\tReactFlagsSelect.prototype.onSelectWithKeyboard = function onSelectWithKeyboard(evt, countryCode) {\n\t\tevt.preventDefault();\n\t\tif (evt.keyCode === 13) {\n\t\t\t//enter key: select\n\t\t\tthis.onSelect(countryCode);\n\t\t\tthis.closeOptions(evt);\n\t\t} else if (evt.keyCode === 27) {\n\t\t\t//esc key: hide options\n\t\t\tthis.toggleOptions();\n\t\t}\n\t};\n\n\tReactFlagsSelect.prototype.updateSelected = function updateSelected(countryCode) {\n\t\tvar isValid = countries[countryCode];\n\n\t\tisValid && this.setState({\n\t\t\tselected: countryCode\n\t\t});\n\t};\n\n\tReactFlagsSelect.prototype.filterSearch = function filterSearch(evt) {\n\t\tvar _this2 = this;\n\n\t\tvar filterValue = evt.target.value;\n\t\tvar filteredCountries = filterValue && this.state.countries.filter(function (key) {\n\t\t\tvar label = _this2.props.customLabels[key] || countries[key];\n\t\t\treturn label && label.match(new RegExp(filterValue, 'i'));\n\t\t});\n\n\t\tthis.setState({ filter: filterValue, filteredCountries: filteredCountries });\n\t};\n\n\tReactFlagsSelect.prototype.setCountries = function setCountries() {\n\t\tvar _this3 = this;\n\n\t\tvar fullCountries = Object.keys(countries);\n\n\t\tvar selectCountries = this.props.countries && this.props.countries.filter(function (country) {\n\t\t\treturn countries[country];\n\t\t});\n\n\t\t//Filter BlackList\n\t\tif (this.props.blackList && selectCountries) {\n\t\t\tselectCountries = fullCountries.filter(function (countryKey) {\n\t\t\t\treturn selectCountries.filter(function (country) {\n\t\t\t\t\treturn countryKey === country;\n\t\t\t\t}).length === 0;\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcountries: selectCountries || fullCountries\n\t\t}, function () {\n\t\t\tvar selected = _this3.state.selected;\n\n\n\t\t\tif (selected && !_this3.state.countries.includes(selected)) {\n\t\t\t\t_this3.setState({ selected: null });\n\t\t\t}\n\t\t});\n\t};\n\n\tReactFlagsSelect.prototype.componentDidMount = function componentDidMount() {\n\t\tthis.setCountries();\n\t\t!this.props.disabled && window.addEventListener(\"click\", this.closeOptions);\n\t};\n\n\tReactFlagsSelect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n\t\tif (prevProps.countries !== this.props.countries || prevProps.blackList !== this.props.blackList) {\n\t\t\tthis.setCountries();\n\t\t}\n\t};\n\n\tReactFlagsSelect.prototype.componentWillUnmount = function componentWillUnmount() {\n\t\t!this.props.disabled && window.removeEventListener(\"click\", this.closeOptions);\n\t};\n\n\tReactFlagsSelect.prototype.render = function render() {\n\t\tvar _this4 = this;\n\n\t\tvar isSelected = this.state.selected || this.state.defaultCountry;\n\t\tvar selectedSize = this.props.selectedSize;\n\t\tvar optionsSize = this.props.optionsSize;\n\t\tvar alignClass = this.props.alignOptions.toLowerCase() === 'left' ? 'to--left' : '';\n\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'flag-select ' + (this.props.className ? this.props.className : \"\") },\n\t\t\tReact.createElement(\n\t\t\t\t'button',\n\t\t\t\t{\n\t\t\t\t\tref: 'selectedFlag',\n\t\t\t\t\tstyle: { fontSize: selectedSize + 'px' },\n\t\t\t\t\tclassName: 'flag-select__btn',\n\t\t\t\t\tonClick: this.toggleOptions,\n\t\t\t\t\tonKeyUp: function onKeyUp(evt) {\n\t\t\t\t\t\treturn _this4.toggleOptionsWithKeyboard(evt);\n\t\t\t\t\t},\n\t\t\t\t\tdisabled: this.props.disabled,\n\t\t\t\t\tid: 'select_flag_button',\n\t\t\t\t\ttype: this.props.buttonType,\n\t\t\t\t\t'aria-haspopup': 'listbox',\n\t\t\t\t\t'aria-expanded': this.state.openOptions,\n\t\t\t\t\t'aria-labelledby': 'select_flag_button' },\n\t\t\t\tisSelected && React.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\t{ className: 'flag-select__option flag-select__option--placeholder' },\n\t\t\t\t\tReact.createElement('img', { className: 'flag-select__option__icon', src: require('../flags/' + isSelected.toLowerCase() + '.svg'), alt: isSelected }),\n\t\t\t\t\tthis.props.showSelectedLabel && React.createElement(\n\t\t\t\t\t\t'span',\n\t\t\t\t\t\t{ className: 'flag-select__option__label' },\n\t\t\t\t\t\tthis.props.customLabels[isSelected] || countries[isSelected]\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t!isSelected && React.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\t{ className: 'flag-select__option flag-select__option--placeholder' },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t)\n\t\t\t),\n\t\t\tthis.state.openOptions && React.createElement(\n\t\t\t\t'ul',\n\t\t\t\t{ tabIndex: '-1', role: 'listbox', ref: 'flagOptions', style: { fontSize: optionsSize + 'px' }, className: 'flag-select__options ' + alignClass },\n\t\t\t\tthis.props.searchable && React.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'filterBox' },\n\t\t\t\t\tReact.createElement('input', { type: 'text', placeholder: this.props.searchPlaceholder, ref: 'filterText', onChange: this.filterSearch })\n\t\t\t\t),\n\t\t\t\t(this.state.filter ? this.state.filteredCountries : this.state.countries).map(function (countryCode) {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\t'li',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: countryCode,\n\t\t\t\t\t\t\trole: 'option',\n\t\t\t\t\t\t\ttabIndex: '0',\n\t\t\t\t\t\t\tid: 'select_flag_' + countryCode,\n\t\t\t\t\t\t\tclassName: 'flag-select__option ' + (_this4.props.showOptionLabel ? 'has-label' : ''),\n\t\t\t\t\t\t\tonClick: function onClick() {\n\t\t\t\t\t\t\t\treturn _this4.onSelect(countryCode);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonKeyUp: function onKeyUp(evt) {\n\t\t\t\t\t\t\t\treturn _this4.onSelectWithKeyboard(evt, countryCode);\n\t\t\t\t\t\t\t} },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'span',\n\t\t\t\t\t\t\t{ style: { width: optionsSize + 'px', height: optionsSize + 'px' } },\n\t\t\t\t\t\t\tReact.createElement('img', {\n\t\t\t\t\t\t\t\tclassName: 'flag-select__option__icon',\n\t\t\t\t\t\t\t\talt: 'flag for ' + countries[countryCode],\n\t\t\t\t\t\t\t\tsrc: require('../flags/' + countryCode.toLowerCase() + '.svg') }),\n\t\t\t\t\t\t\t_this4.props.showOptionLabel && React.createElement(\n\t\t\t\t\t\t\t\t'span',\n\t\t\t\t\t\t\t\t{ className: 'flag-select__option__label' },\n\t\t\t\t\t\t\t\t_this4.props.customLabels[countryCode] || countries[countryCode]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t};\n\n\treturn ReactFlagsSelect;\n}(Component);\n\nReactFlagsSelect.defaultProps = {\n\tselectedSize: 16,\n\toptionsSize: 14,\n\tplaceholder: \"Select a country\",\n\tshowSelectedLabel: true,\n\tshowOptionLabel: true,\n\talignOptions: \"right\",\n\tcustomLabels: {},\n\tdisabled: false,\n\tbuttonType: \"button\",\n\tblackList: false,\n\tsearchable: false,\n\tsearchPlaceholder: 'Search'\n};\n\nReactFlagsSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n\tcountries: PropTypes.array,\n\tblackList: PropTypes.bool,\n\tcustomLabels: PropTypes.object,\n\tselectedSize: PropTypes.number,\n\toptionsSize: PropTypes.number,\n\tdefaultCountry: PropTypes.string,\n\tplaceholder: PropTypes.string,\n\tclassName: PropTypes.string,\n\tshowSelectedLabel: PropTypes.bool,\n\tshowOptionLabel: PropTypes.bool,\n\talignOptions: PropTypes.string,\n\tonSelect: PropTypes.func,\n\tdisabled: PropTypes.bool,\n\tbuttonType: PropTypes.string,\n\tsearchable: PropTypes.bool,\n\tsearchPlaceholder: PropTypes.string\n} : {};\n\nexport default ReactFlagsSelect;"]},"metadata":{},"sourceType":"module"}