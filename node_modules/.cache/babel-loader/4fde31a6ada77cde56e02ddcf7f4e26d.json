{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout, dimensions } from 'ui-box';\nimport { Text } from '../../typography';\nimport { withTheme } from '../../theme';\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 7,\n    viewBox: \"0 0 10 7\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n  }));\n};\n\nCheckIcon.displayName = \"CheckIcon\";\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar MinusIcon = function MinusIcon(_ref2) {\n  var _ref2$fill = _ref2.fill,\n      fill = _ref2$fill === void 0 ? 'currentColor' : _ref2$fill,\n      props = _objectWithoutProperties(_ref2, [\"fill\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\"\n  }, props), React.createElement(\"path\", {\n    fill: fill,\n    fillRule: \"evenodd\",\n    d: \"M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n  }));\n};\n\nMinusIcon.displayName = \"MinusIcon\";\nMinusIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar Checkbox = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Checkbox, _PureComponent);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInnerRef\", function (el) {\n      if (el) {\n        el.indeterminate = _this.props.indeterminate;\n      }\n\n      _this.props.innerRef(el);\n    });\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          id = _this$props.id,\n          name = _this$props.name,\n          label = _this$props.label,\n          appearance = _this$props.appearance,\n          disabled = _this$props.disabled,\n          isInvalid = _this$props.isInvalid,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange,\n          value = _this$props.value,\n          indeterminate = _this$props.indeterminate,\n          innerRef = _this$props.innerRef,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"id\", \"name\", \"label\", \"appearance\", \"disabled\", \"isInvalid\", \"checked\", \"onChange\", \"value\", \"indeterminate\", \"innerRef\"]);\n\n      var themedClassName = theme.getCheckboxClassName(appearance);\n      return React.createElement(Box, _extends({\n        is: \"label\",\n        cursor: disabled ? 'not-allowed' : 'pointer',\n        position: \"relative\",\n        display: \"flex\",\n        marginY: 16\n      }, props), React.createElement(Box, {\n        className: themedClassName,\n        is: \"input\",\n        id: id,\n        type: \"checkbox\",\n        name: name,\n        value: value,\n        checked: checked || indeterminate,\n        onChange: onChange,\n        disabled: disabled,\n        \"aria-invalid\": isInvalid,\n        innerRef: this.handleInnerRef\n      }), React.createElement(Box, {\n        boxSizing: \"border-box\",\n        borderRadius: 3,\n        display: \"flex\",\n        flex: \"none\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: 16,\n        height: 16\n      }, indeterminate ? React.createElement(MinusIcon, null) : React.createElement(CheckIcon, null)), label && React.createElement(Text, {\n        marginLeft: 8,\n        size: 300,\n        color: disabled ? 'muted' : 'default'\n      }, label));\n    }\n  }]);\n\n  return Checkbox;\n}(PureComponent);\n\nCheckbox.displayName = \"Checkbox\";\n\n_defineProperty(Checkbox, \"propTypes\", _objectSpread({}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes, {}, dimensions.propTypes, {\n  /**\n   * The id attribute of the checkbox.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The id attribute of the checkbox.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the checkbox.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the checkbox.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The checked attribute of the checkbox.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * State in addition to \"checked\" and \"unchecked\".\n   * When true, the checkbox displays a \"minus\" icon.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Function that returns the ref of the checkbox.\n   */\n  innerRef: PropTypes.func,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the checkbox is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Checkbox, \"defaultProps\", {\n  checked: false,\n  indeterminate: false,\n  innerRef: function innerRef() {},\n  onChange: function onChange() {},\n  appearance: 'default'\n});\n\nexport default withTheme(Checkbox);","map":{"version":3,"sources":["../../../src/checkbox/src/Checkbox.js"],"names":["CheckIcon","fill","props","PropTypes","string","MinusIcon","Checkbox","PureComponent","spacing","propTypes","position","layout","dimensions","id","name","label","node","value","checked","bool","indeterminate","innerRef","func","onChange","disabled","isInvalid","appearance","theme","isRequired","el","themedClassName","handleInnerRef","withTheme"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { spacing, position, layout, dimensions } from 'ui-box'\nimport { Text } from '../../typography'\nimport { withTheme } from '../../theme'\n\nconst CheckIcon = ({ fill = 'currentColor', ...props }) => (\n  <svg width={10} height={7} viewBox=\"0 0 10 7\" {...props}>\n    <path\n      fill={fill}\n      fillRule=\"evenodd\"\n      d=\"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n    />\n  </svg>\n)\n\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n}\n\nconst MinusIcon = ({ fill = 'currentColor', ...props }) => (\n  <svg width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n    <path\n      fill={fill}\n      fillRule=\"evenodd\"\n      d=\"M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n    />\n  </svg>\n)\n\nMinusIcon.propTypes = {\n  fill: PropTypes.string\n}\n\nclass Checkbox extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes some Box APIs.\n     */\n    ...spacing.propTypes,\n    ...position.propTypes,\n    ...layout.propTypes,\n    ...dimensions.propTypes,\n\n    /**\n     * The id attribute of the checkbox.\n     */\n    id: PropTypes.string,\n\n    /**\n     * The id attribute of the checkbox.\n     */\n    name: PropTypes.string,\n\n    /**\n     * Label of the checkbox.\n     */\n    label: PropTypes.node,\n\n    /**\n     * The value attribute of the checkbox.\n     */\n    value: PropTypes.string,\n\n    /**\n     * The checked attribute of the checkbox.\n     */\n    checked: PropTypes.bool,\n\n    /**\n     * State in addition to \"checked\" and \"unchecked\".\n     * When true, the checkbox displays a \"minus\" icon.\n     */\n    indeterminate: PropTypes.bool,\n\n    /**\n     * Function that returns the ref of the checkbox.\n     */\n    innerRef: PropTypes.func,\n\n    /**\n     * Function called when state changes.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * When true, the checkbox is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * When true, the aria-invalid attribute is true.\n     * Used for accessibility.\n     */\n    isInvalid: PropTypes.bool,\n\n    /**\n     * The appearance of the checkbox.\n     * The default theme only comes with a default style.\n     */\n    appearance: PropTypes.string,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    checked: false,\n    indeterminate: false,\n    innerRef: () => {},\n    onChange: () => {},\n    appearance: 'default'\n  }\n\n  handleInnerRef = el => {\n    if (el) {\n      el.indeterminate = this.props.indeterminate\n    }\n\n    this.props.innerRef(el)\n  }\n\n  render() {\n    const {\n      theme,\n\n      id,\n      name,\n      label,\n      appearance,\n      disabled,\n      isInvalid,\n      checked,\n      onChange,\n      value,\n      indeterminate,\n      innerRef,\n      ...props\n    } = this.props\n\n    const themedClassName = theme.getCheckboxClassName(appearance)\n\n    return (\n      <Box\n        is=\"label\"\n        cursor={disabled ? 'not-allowed' : 'pointer'}\n        position=\"relative\"\n        display=\"flex\"\n        marginY={16}\n        {...props}\n      >\n        <Box\n          className={themedClassName}\n          is=\"input\"\n          id={id}\n          type=\"checkbox\"\n          name={name}\n          value={value}\n          checked={checked || indeterminate}\n          onChange={onChange}\n          disabled={disabled}\n          aria-invalid={isInvalid}\n          innerRef={this.handleInnerRef}\n        />\n        <Box\n          boxSizing=\"border-box\"\n          borderRadius={3}\n          display=\"flex\"\n          flex=\"none\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          width={16}\n          height={16}\n        >\n          {indeterminate ? <MinusIcon /> : <CheckIcon />}\n        </Box>\n        {label && (\n          <Text\n            marginLeft={8}\n            size={300}\n            color={disabled ? 'muted' : 'default'}\n          >\n            {label}\n          </Text>\n        )}\n      </Box>\n    )\n  }\n}\n\nexport default withTheme(Checkbox)\n"]},"metadata":{},"sourceType":"module"}