{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { ThemeConsumer } from './ThemeContext';\n/**\n * HOC that uses ThemeConsumer.\n * @param {React.Component} WrappedComponent - Component that gets theme.\n */\n\nfunction withTheme(WrappedComponent) {\n  var _class, _temp;\n\n  var displayName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  return _temp = _class = /*#__PURE__*/function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        return React.createElement(ThemeConsumer, null, function (theme) {\n          return React.createElement(WrappedComponent, _extends({\n            theme: theme\n          }, _this.props));\n        });\n      }\n    }]);\n\n    return _class;\n  }(React.Component), _defineProperty(_class, \"displayName\", \"withTheme(\".concat(displayName, \")\")), _temp;\n}\n\nexport default withTheme;","map":{"version":3,"sources":["../../../src/theme/src/withTheme.js"],"names":["displayName","WrappedComponent","React","theme"],"mappings":";;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,aAAA,QAAA,gBAAA;AAEA;;;;;AAIA,SAAA,SAAA,CAAA,gBAAA,EAAqC;AAAA,MAAA,MAAA,EAAA,KAAA;;AACnC,MAAMA,WAAW,GACfC,gBAAgB,CAAhBA,WAAAA,IAAgCA,gBAAgB,CAAhDA,IAAAA,IADF,WAAA;AAGA,SAAA,KAAA,GAAA,MAAA,GAAA,aAAA,UAAA,gBAAA,EAAA;AAAA,IAAA,SAAA,CAAA,MAAA,EAAA,gBAAA,CAAA;;AAAA,aAAA,MAAA,GAAA;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAAA,aAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,MAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AAAA;;AAAA,IAAA,YAAA,CAAA,MAAA,EAAA,CAAA;AAAA,MAAA,GAAA,EAAA,QAAA;AAAA,MAAA,KAAA,EAAA,SAAA,MAAA,GAGW;AAAA,YAAA,KAAA,GAAA,IAAA;;AACP,eACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,IAAA,EACG,UAAA,KAAA,EAAK;AAAA,iBAAI,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA;AAAkB,YAAA,KAAK,EAAEE;AAAzB,WAAA,EAAoC,KAAI,CAA5C,KAAI,CAAA,CAAJ;AAFV,SACE,CADF;AAKD;AATH,KAAA,CAAA,CAAA;;AAAA,WAAA,MAAA;AAAA,GAAA,CAAqBD,KAAK,CAA1B,SAAA,CAAA,EAAA,eAAA,CAAA,MAAA,EAAA,aAAA,EAAA,aAAA,MAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA,KAAA;AAWD;;AAED,eAAA,SAAA","sourcesContent":["import React from 'react'\nimport { ThemeConsumer } from './ThemeContext'\n\n/**\n * HOC that uses ThemeConsumer.\n * @param {React.Component} WrappedComponent - Component that gets theme.\n */\nfunction withTheme(WrappedComponent) {\n  const displayName =\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\n\n  return class extends React.Component {\n    static displayName = `withTheme(${displayName})`\n\n    render() {\n      return (\n        <ThemeConsumer>\n          {theme => <WrappedComponent theme={theme} {...this.props} />}\n        </ThemeConsumer>\n      )\n    }\n  }\n}\n\nexport default withTheme\n"]},"metadata":{},"sourceType":"module"}