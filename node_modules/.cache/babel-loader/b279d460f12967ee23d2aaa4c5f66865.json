{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { Paragraph } from '../../typography';\nimport { withTheme } from '../../theme';\n\nvar TooltipStateless = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TooltipStateless, _PureComponent);\n\n  function TooltipStateless() {\n    _classCallCheck(this, TooltipStateless);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TooltipStateless).apply(this, arguments));\n  }\n\n  _createClass(TooltipStateless, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          children = _this$props.children,\n          appearance = _this$props.appearance,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"children\", \"appearance\"]);\n\n      var _theme$getTooltipProp = theme.getTooltipProps(appearance),\n          color = _theme$getTooltipProp.color,\n          themedProps = _objectWithoutProperties(_theme$getTooltipProp, [\"color\"]);\n\n      var child;\n\n      if (typeof children === 'string') {\n        child = React.createElement(Paragraph, {\n          color: color,\n          size: 400\n        }, children);\n      } else {\n        child = children;\n      }\n\n      return React.createElement(Pane, _extends({\n        borderRadius: 3,\n        paddingX: 8,\n        paddingY: 4,\n        maxWidth: 240\n      }, themedProps, props), child);\n    }\n  }]);\n\n  return TooltipStateless;\n}(PureComponent);\n\nTooltipStateless.displayName = \"TooltipStateless\";\n\n_defineProperty(TooltipStateless, \"propTypes\", {\n  children: PropTypes.node,\n\n  /**\n   * The appearance of the tooltip.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']).isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n});\n\nexport default withTheme(TooltipStateless);","map":{"version":3,"sources":["../../../src/tooltip/src/TooltipStateless.js"],"names":["TooltipStateless","PureComponent","children","PropTypes","appearance","theme","isRequired","props","color","themedProps","child","withTheme"],"mappings":";;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,IAAA,QAAA,cAAA;AACA,SAAA,SAAA,QAAA,kBAAA;AACA,SAAA,SAAA,QAAA,aAAA;;IAEMA,gB;;;;;;;;;;;6BAeK;AAAA,UAAA,WAAA,GAC2C,KAD3C,KAAA;AAAA,UACCK,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQH,QADR,GAAA,WAAA,CAAA,QAAA;AAAA,UACkBE,UADlB,GAAA,WAAA,CAAA,UAAA;AAAA,UACiCG,KADjC,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,YAAA,CAAA,CAAA;;AAAA,UAAA,qBAAA,GAE2BF,KAAK,CAALA,eAAAA,CAF3B,UAE2BA,CAF3B;AAAA,UAECG,KAFD,GAAA,qBAAA,CAAA,KAAA;AAAA,UAEWC,WAFX,GAAA,wBAAA,CAAA,qBAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;AAIP,UAAA,KAAA;;AACA,UAAI,OAAA,QAAA,KAAJ,QAAA,EAAkC;AAChCC,QAAAA,KAAK,GACH,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,UAAA,KAAK,EAAhB,KAAA;AAAyB,UAAA,IAAI,EAAE;AAA/B,SAAA,EADFA,QACE,CADFA;AADF,OAAA,MAMO;AACLA,QAAAA,KAAK,GAALA,QAAAA;AACD;;AAED,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,QAAA,YAAY,EADd,CAAA;AAEE,QAAA,QAAQ,EAFV,CAAA;AAGE,QAAA,QAAQ,EAHV,CAAA;AAIE,QAAA,QAAQ,EAAE;AAJZ,OAAA,EAAA,WAAA,EAAA,KAAA,CAAA,EADF,KACE,CADF;AAYD;;;;EA1C4BT,a;;AAAzBD,gB,YAAAA,G,kBAAAA;;gBAAAA,gB,eACe;AACjBE,EAAAA,QAAQ,EAAEC,SAAS,CADF,IAAA;;AAGjB;;;AAGAC,EAAAA,UAAU,EAAED,SAAS,CAATA,KAAAA,CAAgB,CAAA,SAAA,EAAhBA,MAAgB,CAAhBA,EANK,UAAA;;AAQjB;;;AAGAE,EAAAA,KAAK,EAAEF,SAAS,CAATA,MAAAA,CAAiBG;AAXP,C;;AA4CrB,eAAeK,SAAS,CAAxB,gBAAwB,CAAxB","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport { Paragraph } from '../../typography'\nimport { withTheme } from '../../theme'\n\nclass TooltipStateless extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n\n    /**\n     * The appearance of the tooltip.\n     */\n    appearance: PropTypes.oneOf(['default', 'card']).isRequired,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  render() {\n    const { theme, children, appearance, ...props } = this.props\n    const { color, ...themedProps } = theme.getTooltipProps(appearance)\n\n    let child\n    if (typeof children === 'string') {\n      child = (\n        <Paragraph color={color} size={400}>\n          {children}\n        </Paragraph>\n      )\n    } else {\n      child = children\n    }\n\n    return (\n      <Pane\n        borderRadius={3}\n        paddingX={8}\n        paddingY={4}\n        maxWidth={240}\n        {...themedProps}\n        {...props}\n      >\n        {child}\n      </Pane>\n    )\n  }\n}\n\nexport default withTheme(TooltipStateless)\n"]},"metadata":{},"sourceType":"module"}