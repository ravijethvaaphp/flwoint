{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport ScrollbarSize from './ScrollbarSize';\n\nvar TableHead = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TableHead, _PureComponent);\n\n  function TableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollbarWidth: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScrollbarSize\", function (width) {\n      _this.setState({\n        scrollbarWidth: width\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          height = _this$props.height,\n          accountForScrollbar = _this$props.accountForScrollbar,\n          props = _objectWithoutProperties(_this$props, [\"children\", \"height\", \"accountForScrollbar\"]);\n\n      var scrollbarWidth = this.state.scrollbarWidth;\n      return React.createElement(Pane, _extends({\n        display: \"flex\",\n        flexShrink: 0,\n        paddingRight: scrollbarWidth,\n        borderBottom: \"default\",\n        background: \"tint2\",\n        height: height\n      }, props), children, ' ', accountForScrollbar && React.createElement(ScrollbarSize, {\n        handleScrollbarSize: this.handleScrollbarSize\n      }));\n    }\n  }]);\n\n  return TableHead;\n}(PureComponent);\n\nTableHead.displayName = \"TableHead\";\n\n_defineProperty(TableHead, \"propTypes\", _objectSpread({}, Pane.propTypes, {\n  /**\n   * The height of the table head.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * This should always be true if you are using TableHead together with a TableBody.\n   * Because TableBody has `overflowY: scroll` by default.\n   */\n  accountForScrollbar: PropTypes.bool\n}));\n\n_defineProperty(TableHead, \"defaultProps\", {\n  height: 32,\n  accountForScrollbar: true\n});\n\nexport { TableHead as default };","map":{"version":3,"sources":["../../../src/table/src/TableHead.js"],"names":["TableHead","PureComponent","Pane","propTypes","height","PropTypes","isRequired","accountForScrollbar","bool","scrollbarWidth","width","children","props","handleScrollbarSize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,IAAA,QAAA,cAAA;AACA,OAAA,aAAA,MAAA,iBAAA;;IAEqBA,S;;;;;;;;;;;;;;;;4DAmBX;AACNS,MAAAA,cAAc,EAAE;AADV,K;;0EASc,UAAA,KAAA,EAAS;AAC7B,MAAA,KAAA,CAAA,QAAA,CAAc;AACZA,QAAAA,cAAc,EAAEC;AADJ,OAAd;;;;;;;;6BAKO;AAAA,UAAA,WAAA,GACqD,KADrD,KAAA;AAAA,UACCC,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,UACWP,MADX,GAAA,WAAA,CAAA,MAAA;AAAA,UACmBG,mBADnB,GAAA,WAAA,CAAA,mBAAA;AAAA,UAC2CK,KAD3C,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,qBAAA,CAAA,CAAA;;AAAA,UAECH,cAFD,GAEoB,KAFpB,KAEoB,CAFpB,cAAA;AAIP,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,QAAA,OAAO,EADT,MAAA;AAEE,QAAA,UAAU,EAFZ,CAAA;AAGE,QAAA,YAAY,EAHd,cAAA;AAIE,QAAA,YAAY,EAJd,SAAA;AAKE,QAAA,UAAU,EALZ,OAAA;AAME,QAAA,MAAM,EAAEL;AANV,OAAA,EAAA,KAAA,CAAA,EAAA,QAAA,EAAA,GAAA,EAUGG,mBAAmB,IAClB,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,QAAA,mBAAmB,EAAE,KAAKM;AAAzC,OAAA,CAXJ,CADF;AAgBD;;;;EAtDoCZ,a;;AAAlBD,S,YAAAA,G,WAAAA;;gBAAAA,S,iCAKdE,IAAI,CAACC,S;AAER;;;AAGAC,EAAAA,MAAM,EAAEC,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAAhDA,MAAoB,CAApBA,EAA0DC,U;;AAElE;;;;AAIAC,EAAAA,mBAAmB,EAAEF,SAAS,CAACG;;;gBAhBdR,S,kBAuBG;AACpBI,EAAAA,MAAM,EADc,EAAA;AAEpBG,EAAAA,mBAAmB,EAAE;AAFD,C;;SAvBHP,S","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport ScrollbarSize from './ScrollbarSize'\n\nexport default class TableHead extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the Pane component as the base.\n     */\n    ...Pane.propTypes,\n\n    /**\n     * The height of the table head.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n    /**\n     * This should always be true if you are using TableHead together with a TableBody.\n     * Because TableBody has `overflowY: scroll` by default.\n     */\n    accountForScrollbar: PropTypes.bool\n  }\n\n  state = {\n    scrollbarWidth: 0\n  }\n\n  static defaultProps = {\n    height: 32,\n    accountForScrollbar: true\n  }\n\n  handleScrollbarSize = width => {\n    this.setState({\n      scrollbarWidth: width\n    })\n  }\n\n  render() {\n    const { children, height, accountForScrollbar, ...props } = this.props\n    const { scrollbarWidth } = this.state\n\n    return (\n      <Pane\n        display=\"flex\"\n        flexShrink={0}\n        paddingRight={scrollbarWidth}\n        borderBottom=\"default\"\n        background=\"tint2\"\n        height={height}\n        {...props}\n      >\n        {children}{' '}\n        {accountForScrollbar && (\n          <ScrollbarSize handleScrollbarSize={this.handleScrollbarSize} />\n        )}\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}