{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { dimensions, spacing, position, layout } from 'ui-box';\nimport FormFieldLabel from './FormFieldLabel';\nimport FormFieldDescription from './FormFieldDescription';\nimport FormFieldValidationMessage from './FormFieldValidationMessage';\nimport FormFieldHint from './FormFieldHint';\n\nvar FormField = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormField, _PureComponent);\n\n  function FormField() {\n    _classCallCheck(this, FormField);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormField).apply(this, arguments));\n  }\n\n  _createClass(FormField, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          hint = _this$props.hint,\n          label = _this$props.label,\n          labelFor = _this$props.labelFor,\n          children = _this$props.children,\n          isRequired = _this$props.isRequired,\n          labelProps = _this$props.labelProps,\n          description = _this$props.description,\n          validationMessage = _this$props.validationMessage,\n          props = _objectWithoutProperties(_this$props, [\"hint\", \"label\", \"labelFor\", \"children\", \"isRequired\", \"labelProps\", \"description\", \"validationMessage\"]);\n\n      return React.createElement(Box, props, React.createElement(FormFieldLabel, _extends({\n        htmlFor: labelFor,\n        isAstrixShown: isRequired,\n        marginBottom: description ? 0 : 4\n      }, labelProps), label), typeof description === 'string' ? React.createElement(FormFieldDescription, {\n        marginBottom: 4\n      }, description) : description, children, typeof validationMessage === 'string' ? React.createElement(FormFieldValidationMessage, {\n        marginTop: 8\n      }, validationMessage) : validationMessage, typeof hint === 'string' ? React.createElement(FormFieldHint, {\n        marginTop: 6\n      }, hint) : hint);\n    }\n  }]);\n\n  return FormField;\n}(PureComponent);\n\nFormField.displayName = \"FormField\";\n\n_defineProperty(FormField, \"propTypes\", _objectSpread({\n  /**\n   * The label used above the input element.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Passed on the label as a htmlFor prop.\n   */\n  labelFor: PropTypes.string,\n\n  /**\n   * Whether or not show an asterix after the label.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * An optional description of the field under the label, above the input element.\n   */\n  description: PropTypes.node,\n\n  /**\n   * An optional hint under the input element.\n   */\n  hint: PropTypes.node,\n\n  /**\n   * If a validation message is passed it is shown under the input element\n   * and above the hint. This is unaffected by `isInvalid`.\n   */\n  validationMessage: PropTypes.node\n}, dimensions.propTypes, {}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes));\n\n_defineProperty(FormField, \"defaultProps\", {\n  labelProps: {\n    size: 400\n  }\n});\n\nexport { FormField as default };","map":{"version":3,"sources":["../../../src/form-field/src/FormField.js"],"names":["FormField","PureComponent","label","PropTypes","isRequired","labelFor","string","bool","description","node","hint","validationMessage","dimensions","propTypes","spacing","position","layout","labelProps","size","children","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,GAAA,IAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,QAAA,QAAA;AACA,OAAA,cAAA,MAAA,kBAAA;AACA,OAAA,oBAAA,MAAA,wBAAA;AACA,OAAA,0BAAA,MAAA,8BAAA;AACA,OAAA,aAAA,MAAA,iBAAA;;IAEqBA,S;;;;;;;;;;;6BA4DV;AAAA,UAAA,WAAA,GAWH,KAXG,KAAA;AAAA,UAELU,IAFK,GAAA,WAAA,CAAA,IAAA;AAAA,UAGLR,KAHK,GAAA,WAAA,CAAA,KAAA;AAAA,UAILG,QAJK,GAAA,WAAA,CAAA,QAAA;AAAA,UAKLc,QALK,GAAA,WAAA,CAAA,QAAA;AAAA,UAMLf,UANK,GAAA,WAAA,CAAA,UAAA;AAAA,UAOLa,UAPK,GAAA,WAAA,CAAA,UAAA;AAAA,UAQLT,WARK,GAAA,WAAA,CAAA,WAAA;AAAA,UASLG,iBATK,GAAA,WAAA,CAAA,iBAAA;AAAA,UAUFS,KAVE,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,aAAA,EAAA,mBAAA,CAAA,CAAA;;AAaP,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;AACE,QAAA,OAAO,EADT,QAAA;AAEE,QAAA,aAAa,EAFf,UAAA;AAGE,QAAA,YAAY,EAAEZ,WAAW,GAAA,CAAA,GAAO;AAHlC,OAAA,EAAA,UAAA,CAAA,EADF,KACE,CADF,EASG,OAAA,WAAA,KAAA,QAAA,GACC,KAAA,CAAA,aAAA,CAAA,oBAAA,EAAA;AAAsB,QAAA,YAAY,EAAE;AAApC,OAAA,EADD,WACC,CADD,GATH,WAAA,EAAA,QAAA,EAiBG,OAAA,iBAAA,KAAA,QAAA,GACC,KAAA,CAAA,aAAA,CAAA,0BAAA,EAAA;AAA4B,QAAA,SAAS,EAAE;AAAvC,OAAA,EADD,iBACC,CADD,GAjBH,iBAAA,EAwBG,OAAA,IAAA,KAAA,QAAA,GACC,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,QAAA,SAAS,EAAE;AAA1B,OAAA,EADD,IACC,CADD,GAzBL,IACE,CADF;AAgCD;;;;EAzGoCP,a;;AAAlBD,S,YAAAA,G,WAAAA;;gBAAAA,S;AAEjB;;;AAGAE,EAAAA,KAAK,EAAEC,SAAS,CAATA,IAAAA,CAAeC,U;;AAEtB;;;AAGAC,EAAAA,QAAQ,EAAEF,SAAS,CAACG,M;;AAEpB;;;AAGAF,EAAAA,UAAU,EAAED,SAAS,CAACI,I;;AAEtB;;;AAGAC,EAAAA,WAAW,EAAEL,SAAS,CAACM,I;;AAEvB;;;AAGAC,EAAAA,IAAI,EAAEP,SAAS,CAACM,I;;AAEhB;;;;AAIAE,EAAAA,iBAAiB,EAAER,SAAS,CAACM;GAK1BG,UAAU,CAACC,S,MAKXC,OAAO,CAACD,S,MAKRE,QAAQ,CAACF,S,MAKTG,MAAM,CAACH,S;;gBAnDOb,S,kBAsDG;AACpBiB,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE;AADI;AADQ,C;;SAtDHlB,S","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { dimensions, spacing, position, layout } from 'ui-box'\nimport FormFieldLabel from './FormFieldLabel'\nimport FormFieldDescription from './FormFieldDescription'\nimport FormFieldValidationMessage from './FormFieldValidationMessage'\nimport FormFieldHint from './FormFieldHint'\n\nexport default class FormField extends PureComponent {\n  static propTypes = {\n    /**\n     * The label used above the input element.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Passed on the label as a htmlFor prop.\n     */\n    labelFor: PropTypes.string,\n\n    /**\n     * Whether or not show an asterix after the label.\n     */\n    isRequired: PropTypes.bool,\n\n    /**\n     * An optional description of the field under the label, above the input element.\n     */\n    description: PropTypes.node,\n\n    /**\n     * An optional hint under the input element.\n     */\n    hint: PropTypes.node,\n\n    /**\n     * If a validation message is passed it is shown under the input element\n     * and above the hint. This is unaffected by `isInvalid`.\n     */\n    validationMessage: PropTypes.node,\n\n    /**\n     * Composes the dimensions spec from the Box primitive.\n     */\n    ...dimensions.propTypes,\n\n    /**\n     * Composes the spacing spec from the Box primitive.\n     */\n    ...spacing.propTypes,\n\n    /**\n     * Composes the position spec from the Box primitive.\n     */\n    ...position.propTypes,\n\n    /**\n     * Composes the layout spec from the Box primitive.\n     */\n    ...layout.propTypes\n  }\n\n  static defaultProps = {\n    labelProps: {\n      size: 400\n    }\n  }\n\n  render() {\n    const {\n      hint,\n      label,\n      labelFor,\n      children,\n      isRequired,\n      labelProps,\n      description,\n      validationMessage,\n      ...props\n    } = this.props\n\n    return (\n      <Box {...props}>\n        <FormFieldLabel\n          htmlFor={labelFor}\n          isAstrixShown={isRequired}\n          marginBottom={description ? 0 : 4}\n          {...labelProps}\n        >\n          {label}\n        </FormFieldLabel>\n        {typeof description === 'string' ? (\n          <FormFieldDescription marginBottom={4}>\n            {description}\n          </FormFieldDescription>\n        ) : (\n          description\n        )}\n        {children}\n        {typeof validationMessage === 'string' ? (\n          <FormFieldValidationMessage marginTop={8}>\n            {validationMessage}\n          </FormFieldValidationMessage>\n        ) : (\n          validationMessage\n        )}\n        {typeof hint === 'string' ? (\n          <FormFieldHint marginTop={6}>{hint}</FormFieldHint>\n        ) : (\n          hint\n        )}\n      </Box>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}