{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '../../typography';\nimport { withTheme } from '../../theme';\nimport warning from '../../lib/warning';\n\nvar Tab = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Tab, _PureComponent);\n\n  function Tab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      if (typeof _this.props.onClick === 'function') {\n        _this.props.onClick(e);\n      }\n\n      _this.props.onSelect();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyPress\", function (e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        _this.props.onSelect();\n\n        e.preventDefault();\n      }\n\n      _this.props.onKeyPress(e);\n    });\n\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          is = _this$props.is,\n          height = _this$props.height,\n          onSelect = _this$props.onSelect,\n          isSelected = _this$props.isSelected,\n          appearance = _this$props.appearance,\n          disabled = _this$props.disabled,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"is\", \"height\", \"onSelect\", \"isSelected\", \"appearance\", \"disabled\"]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(typeof this.props.onClick === 'function', '<Tab> expects `onSelect` prop, but you passed `onClick`.');\n      }\n\n      var textSize = theme.getTextSizeForControlHeight(height);\n      var elementBasedProps;\n\n      if (disabled) {\n        elementBasedProps = {\n          'aria-disabled': true\n        };\n      }\n\n      if (is === 'a') {\n        // Use aria-current when it's a link\n        // https://tink.uk/using-the-aria-current-attribute/\n        elementBasedProps = isSelected ? _objectSpread({}, elementBasedProps, {\n          'aria-current': 'page'\n        }) : {};\n      } else {\n        // Use a role=\"tablist\" around the tabs\n        // Also pass down a aria-controls=\"panelId\"\n        // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n        elementBasedProps = _objectSpread({}, elementBasedProps, {\n          'aria-selected': isSelected,\n          role: 'tab'\n        });\n      }\n\n      return React.createElement(Text, _extends({\n        className: theme.getTabClassName(appearance),\n        is: is,\n        size: textSize,\n        height: height\n      }, Tab.styles, props, {\n        onClick: this.handleClick,\n        onKeyPress: this.handleKeyPress\n      }, elementBasedProps));\n    }\n  }]);\n\n  return Tab;\n}(PureComponent);\n\nTab.displayName = \"Tab\";\n\n_defineProperty(Tab, \"propTypes\", _objectSpread({}, Text.propTypes, {\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Tab, \"defaultProps\", {\n  onSelect: function onSelect() {},\n  onKeyPress: function onKeyPress() {},\n  is: 'span',\n  height: 28,\n  disabled: false\n});\n\n_defineProperty(Tab, \"styles\", {\n  display: 'inline-flex',\n  fontWeight: 500,\n  paddingX: 8,\n  marginX: 4,\n  borderRadius: 3,\n  lineHeight: '28px',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  tabIndex: 0\n});\n\nexport default withTheme(Tab);","map":{"version":3,"sources":["../../../src/tabs/src/Tab.js"],"names":["Tab","PureComponent","Text","propTypes","onSelect","PropTypes","func","isSelected","bool","appearance","string","theme","isRequired","onKeyPress","is","height","disabled","display","fontWeight","paddingX","marginX","borderRadius","lineHeight","alignItems","justifyContent","textDecoration","tabIndex","e","props","process","warning","textSize","elementBasedProps","role","handleKeyPress","withTheme"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport { withTheme } from '../../theme'\nimport warning from '../../lib/warning'\n\nclass Tab extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the Text component as the base.\n     */\n    ...Text.propTypes,\n\n    /**\n     * Function triggered when tab is selected.\n     */\n    onSelect: PropTypes.func,\n\n    /**\n     * When true, the tab is selected.\n     */\n    isSelected: PropTypes.bool,\n\n    /**\n     * The appearance of the tab.\n     * The default theme only comes with a default style.\n     */\n    appearance: PropTypes.string,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    onSelect: () => {},\n    onKeyPress: () => {},\n    is: 'span',\n    height: 28,\n    disabled: false\n  }\n\n  static styles = {\n    display: 'inline-flex',\n    fontWeight: 500,\n    paddingX: 8,\n    marginX: 4,\n    borderRadius: 3,\n    lineHeight: '28px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textDecoration: 'none',\n    tabIndex: 0\n  }\n\n  handleClick = e => {\n    if (typeof this.props.onClick === 'function') {\n      this.props.onClick(e)\n    }\n\n    this.props.onSelect()\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      this.props.onSelect()\n      e.preventDefault()\n    }\n\n    this.props.onKeyPress(e)\n  }\n\n  render() {\n    const {\n      theme,\n      is,\n      height,\n      onSelect,\n      isSelected,\n      appearance,\n      disabled,\n      ...props\n    } = this.props\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        typeof this.props.onClick === 'function',\n        '<Tab> expects `onSelect` prop, but you passed `onClick`.'\n      )\n    }\n\n    const textSize = theme.getTextSizeForControlHeight(height)\n\n    let elementBasedProps\n    if (disabled) {\n      elementBasedProps = {\n        'aria-disabled': true\n      }\n    }\n\n    if (is === 'a') {\n      // Use aria-current when it's a link\n      // https://tink.uk/using-the-aria-current-attribute/\n      elementBasedProps = isSelected\n        ? {\n            ...elementBasedProps,\n            'aria-current': 'page'\n          }\n        : {}\n    } else {\n      // Use a role=\"tablist\" around the tabs\n      // Also pass down a aria-controls=\"panelId\"\n      // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n      elementBasedProps = {\n        ...elementBasedProps,\n        'aria-selected': isSelected,\n        role: 'tab'\n      }\n    }\n\n    return (\n      <Text\n        className={theme.getTabClassName(appearance)}\n        is={is}\n        size={textSize}\n        height={height}\n        {...Tab.styles}\n        {...props}\n        onClick={this.handleClick}\n        onKeyPress={this.handleKeyPress}\n        {...elementBasedProps}\n      />\n    )\n  }\n}\n\nexport default withTheme(Tab)\n"]},"metadata":{},"sourceType":"module"}