{"ast":null,"code":"import _classCallCheck from\"/Users/ravi/Desktop/tasket_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ravi/Desktop/tasket_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/* eslint-disable */import auth0 from\"auth0-js\";var Auth=/*#__PURE__*/function(){function Auth(history){var _this=this;_classCallCheck(this,Auth);this.login=function(){_this.auth0.authorize();};this.register=function(params){// this.auth0.authorize();\n};this.handleAuthentication=function(){_this.auth0.parseHash(function(err,authResult){if(authResult&&authResult.accessToken&&authResult.idToken){_this.setSession(authResult);{setTimeout(function(){alert(JSON.stringify(localStorage.getItem('data'),null,2));_this.history.push(\"/\");},100);}}else if(err){_this.history.push(\"/\");alert(\"Error: \".concat(err.error,\". Check the console for further details.\"));console.log(err);}});};this.setSession=function(authResult){console.log(authResult);// set the time that the access token will expire\nvar expiresAt=JSON.stringify(authResult.expiresIn*1000+new Date().getTime());localStorage.setItem(\"access_token\",authResult.accessToken);localStorage.setItem(\"id_token\",authResult.idToken);localStorage.setItem(\"expires_at\",expiresAt);};this.history=history;this.auth0=new auth0.WebAuth({domain:'go-everpay.auth0.com',//process.env.REACT_APP_AUTH0_DOMAIN,\nclientID:\"OLKwEH0FnuOs7yT7lcNSHXCrY5H8K6Oh\",redirectUri:window.location.origin+'/callback',responseType:\"token id_token\",scope:\"openid profile email\"});}_createClass(Auth,[{key:\"isAuthenticated\",value:function isAuthenticated(){var expiresAt=JSON.parse(localStorage.getItem('expires_at'));return new Date().getTime()<expiresAt;}}]);return Auth;}();export{Auth as default};","map":{"version":3,"sources":["/Users/ravi/Desktop/tasket_react/src/Auth/Auth.js"],"names":["auth0","Auth","history","login","authorize","register","params","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","setTimeout","alert","JSON","stringify","localStorage","getItem","push","error","console","log","expiresAt","expiresIn","Date","getTime","setItem","WebAuth","domain","clientID","redirectUri","window","location","origin","responseType","scope","parse"],"mappings":"4SAAA,oBACA,MAAOA,CAAAA,KAAP,KAAkB,UAAlB,C,GAEqBC,CAAAA,I,yBACnB,cAAYC,OAAZ,CAAqB,gDAWrBC,KAXqB,CAWb,UAAM,CACZ,KAAI,CAACH,KAAL,CAAWI,SAAX,GACD,CAboB,MAerBC,QAfqB,CAeV,SAACC,MAAD,CAAY,CAErB;AACD,CAlBoB,MAoBrBC,oBApBqB,CAoBE,UAAM,CAC3B,KAAI,CAACP,KAAL,CAAWQ,SAAX,CAAqB,SAACC,GAAD,CAAMC,UAAN,CAAqB,CACxC,GAAGA,UAAU,EAAIA,UAAU,CAACC,WAAzB,EAAwCD,UAAU,CAACE,OAAtD,CAA8D,CAC5D,KAAI,CAACC,UAAL,CAAgBH,UAAhB,EACA,CAACI,UAAU,CAAC,UAAM,CACdC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf,CAA6C,IAA7C,CAAmD,CAAnD,CAAD,CAAL,CACA,KAAI,CAACjB,OAAL,CAAakB,IAAb,CAAkB,GAAlB,EACD,CAHQ,CAGN,GAHM,CAAV,CAGU,CACZ,CAND,IAMM,IAAGX,GAAH,CAAO,CACX,KAAI,CAACP,OAAL,CAAakB,IAAb,CAAkB,GAAlB,EACAL,KAAK,kBAAWN,GAAG,CAACY,KAAf,6CAAL,CACAC,OAAO,CAACC,GAAR,CAAYd,GAAZ,EACD,CACF,CAZD,EAaD,CAlCoB,MAoCrBI,UApCqB,CAoCR,SAAAH,UAAU,CAAI,CACzBY,OAAO,CAACC,GAAR,CAAYb,UAAZ,EACA;AACA,GAAMc,CAAAA,SAAS,CAAGR,IAAI,CAACC,SAAL,CAChBP,UAAU,CAACe,SAAX,CAAuB,IAAvB,CAA8B,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EADd,CAAlB,CAGAT,YAAY,CAACU,OAAb,CAAqB,cAArB,CAAqClB,UAAU,CAACC,WAAhD,EACAO,YAAY,CAACU,OAAb,CAAqB,UAArB,CAAiClB,UAAU,CAACE,OAA5C,EACAM,YAAY,CAACU,OAAb,CAAqB,YAArB,CAAmCJ,SAAnC,EACD,CA7CoB,CACnB,KAAKtB,OAAL,CAAeA,OAAf,CACA,KAAKF,KAAL,CAAa,GAAIA,CAAAA,KAAK,CAAC6B,OAAV,CAAkB,CAC7BC,MAAM,CAAE,sBADqB,CACG;AAChCC,QAAQ,CAAE,kCAFmB,CAG7BC,WAAW,CAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAwB,WAHR,CAI7BC,YAAY,CAAE,gBAJe,CAK7BC,KAAK,CAAE,sBALsB,CAAlB,CAAb,CAOD,C,gDAsCD,0BAAiB,CACf,GAAMb,CAAAA,SAAS,CAAGR,IAAI,CAACsB,KAAL,CAAWpB,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAlB,CACA,MAAO,IAAIO,CAAAA,IAAJ,GAAWC,OAAX,GAAuBH,SAA9B,CACD,C,2BAnDkBvB,I","sourcesContent":["/* eslint-disable */ \nimport auth0 from \"auth0-js\";\n\nexport default class Auth {\n  constructor(history) {\n    this.history = history;\n    this.auth0 = new auth0.WebAuth({\n      domain: 'go-everpay.auth0.com', //process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: \"OLKwEH0FnuOs7yT7lcNSHXCrY5H8K6Oh\",\n      redirectUri: window.location.origin+ '/callback',\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  login = () => {\n    this.auth0.authorize();\n  };\n\n  register = (params) => {\n\n    // this.auth0.authorize();\n  };\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if(authResult && authResult.accessToken && authResult.idToken){\n        this.setSession(authResult);\n        {setTimeout(() => {\n            alert(JSON.stringify(localStorage.getItem('data'), null, 2));\n            this.history.push(\"/\");\n          }, 100);}\n      }else if(err){\n        this.history.push(\"/\");\n        alert(`Error: ${err.error}. Check the console for further details.`);\n        console.log(err);\n      }\n    });\n  };\n\n  setSession = authResult => {\n    console.log(authResult);\n    // set the time that the access token will expire\n    const expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n    localStorage.setItem(\"access_token\", authResult.accessToken);\n    localStorage.setItem(\"id_token\", authResult.idToken);\n    localStorage.setItem(\"expires_at\", expiresAt);\n  };\n\n  isAuthenticated(){\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n  }\n}"]},"metadata":{},"sourceType":"module"}