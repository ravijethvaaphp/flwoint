{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { spacing, position, layout, dimensions } from 'ui-box';\nimport { Pane } from '../../layers';\nimport { Text } from '../../typography';\nimport Radio from './Radio';\nvar radioCount = 1; // Used for generating unique input names\n\nvar RadioGroup = /*#__PURE__*/function (_PureComponent) {\n  _inherits(RadioGroup, _PureComponent);\n\n  function RadioGroup(props, context) {\n    var _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RadioGroup).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var value = event.target.value; // Save a render cycle when it's a controlled input\n\n      if (!_this.props.value) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(value);\n      }\n    });\n\n    _this.state = {\n      value: props.defaultValue || props.options[0].value\n    };\n    _this.name = \"RadioGroup-\".concat(radioCount);\n    radioCount += 1;\n    return _this;\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          size = _this$props.size,\n          label = _this$props.label,\n          defaultValue = _this$props.defaultValue,\n          value = _this$props.value,\n          options = _this$props.options,\n          onChange = _this$props.onChange,\n          isRequired = _this$props.isRequired,\n          props = _objectWithoutProperties(_this$props, [\"size\", \"label\", \"defaultValue\", \"value\", \"options\", \"onChange\", \"isRequired\"]); // Allows it to behave like a controlled input\n\n\n      var selected = value || this.state.value;\n      return React.createElement(Pane, _extends({\n        role: \"group\",\n        \"aria-label\": label\n      }, props), label && React.createElement(Text, {\n        color: \"muted\",\n        fontWeight: 500\n      }, label), options.map(function (item) {\n        return React.createElement(Radio, {\n          key: item.value,\n          size: size,\n          name: _this2.name,\n          value: item.value,\n          label: item.label,\n          checked: selected === item.value,\n          disabled: item.isDisabled,\n          onChange: _this2.handleChange,\n          isRequired: isRequired\n        });\n      }));\n    }\n  }]);\n\n  return RadioGroup;\n}(PureComponent);\n\nRadioGroup.displayName = \"RadioGroup\";\n\n_defineProperty(RadioGroup, \"propTypes\", _objectSpread({}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes, {}, dimensions.propTypes, {\n  /**\n   * The options for the radios of the Radio Group.\n   */\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node.isRequired,\n    value: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool\n  })).isRequired,\n\n  /**\n   * The selected item value when controlled.\n   */\n  value: PropTypes.string,\n\n  /**\n   * The default value of the Radio Group when uncontrolled.\n   */\n  defaultValue: PropTypes.string,\n\n  /**\n   * Function called when state changes.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Label to display above the radio button options.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The size of the radio circle. This also informs the text size and spacing.\n   */\n  size: PropTypes.oneOf([12, 16]).isRequired,\n\n  /**\n   * When true, the radio get the required attribute.\n   */\n  isRequired: PropTypes.bool.isRequired\n}));\n\n_defineProperty(RadioGroup, \"defaultProps\", {\n  options: [],\n  onChange: function onChange() {},\n  size: 12,\n  isRequired: false\n});\n\nexport { RadioGroup as default };","map":{"version":3,"sources":["../../../src/radio/src/RadioGroup.js"],"names":["radioCount","RadioGroup","PureComponent","spacing","propTypes","position","layout","dimensions","options","label","PropTypes","value","isDisabled","bool","isRequired","string","defaultValue","onChange","size","props","event","selected","item"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { spacing, position, layout, dimensions } from 'ui-box'\nimport { Pane } from '../../layers'\nimport { Text } from '../../typography'\nimport Radio from './Radio'\n\nlet radioCount = 1 // Used for generating unique input names\n\nexport default class RadioGroup extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes some Box APIs.\n     */\n    ...spacing.propTypes,\n    ...position.propTypes,\n    ...layout.propTypes,\n    ...dimensions.propTypes,\n\n    /**\n     * The options for the radios of the Radio Group.\n     */\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.node.isRequired,\n        value: PropTypes.string.isRequired,\n        isDisabled: PropTypes.bool\n      })\n    ).isRequired,\n\n    /**\n     * The selected item value when controlled.\n     */\n    value: PropTypes.string,\n\n    /**\n     * The default value of the Radio Group when uncontrolled.\n     */\n    defaultValue: PropTypes.string,\n\n    /**\n     * Function called when state changes.\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * Label to display above the radio button options.\n     */\n    label: PropTypes.string,\n\n    /**\n     * The size of the radio circle. This also informs the text size and spacing.\n     */\n    size: PropTypes.oneOf([12, 16]).isRequired,\n\n    /**\n     * When true, the radio get the required attribute.\n     */\n    isRequired: PropTypes.bool.isRequired\n  }\n\n  static defaultProps = {\n    options: [],\n    onChange: () => {},\n    size: 12,\n    isRequired: false\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      value: props.defaultValue || props.options[0].value\n    }\n\n    this.name = `RadioGroup-${radioCount}`\n    radioCount += 1\n  }\n\n  handleChange = event => {\n    const { value } = event.target\n\n    // Save a render cycle when it's a controlled input\n    if (!this.props.value) {\n      this.setState({ value })\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(value)\n    }\n  }\n\n  render() {\n    const {\n      size,\n      label,\n      defaultValue,\n      value,\n      options,\n      onChange,\n      isRequired,\n      ...props\n    } = this.props\n\n    // Allows it to behave like a controlled input\n    const selected = value || this.state.value\n\n    return (\n      <Pane role=\"group\" aria-label={label} {...props}>\n        {label && (\n          <Text color=\"muted\" fontWeight={500}>\n            {label}\n          </Text>\n        )}\n        {options.map(item => (\n          <Radio\n            key={item.value}\n            size={size}\n            name={this.name}\n            value={item.value}\n            label={item.label}\n            checked={selected === item.value}\n            disabled={item.isDisabled}\n            onChange={this.handleChange}\n            isRequired={isRequired}\n          />\n        ))}\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}