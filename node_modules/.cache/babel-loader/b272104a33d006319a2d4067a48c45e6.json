{"ast":null,"code":"var _jsxFileName = \"/Users/ravi/Desktop/tasket_react/src/components/UserInfo.js\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { Heading, Text, TextInput, Pane, Checkbox, Button, toaster } from 'evergreen-ui';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport ReactFlagsSelect from 'react-flags-select';\nimport 'react-flags-select/css/react-flags-select.css';\nimport basics from \"../img/basics.svg\";\nimport noCredit from \"../img/no-credit.svg\";\nimport reader from \"../img/reader.svg\";\nconst UserInfoSchema = Yup.object().shape({\n  email: Yup.string().email('The email address you entered does not appear to be valid').required('Enter the email address you want to use to create your new account'),\n  emailConfirmation: Yup.string().required('Enter your email address twice to confirm itâ€™s correct').oneOf([Yup.ref('email')], 'The email addresses you entered do not match'),\n  password: Yup.string().min(8, 'Your password must be at least 8 characters').required('Create a password so you can login to your new account'),\n  acceptTerms: Yup.boolean().oneOf([true], 'Must Accept Terms and Conditions')\n});\nexport class UserInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.back = e => {\n      e.preventDefault();\n      this.props.prevStep();\n    };\n\n    this.state = {\n      checked: false,\n      countryCode: 'US'\n    };\n    this.userInfoForm = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      textAlign: \"center\",\n      fontWeight: \"400\",\n      size: 700,\n      is: \"h2\",\n      marginTop: \"default\",\n      marginBottom: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"User Info Let\\u2019s create your account.\"), /*#__PURE__*/React.createElement(Text, {\n      className: \"customSubHeading\",\n      display: \"block\",\n      textAlign: \"center\",\n      size: 400,\n      color: \"#5f6a7d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"The quick brown fox jumps over the lazy dog Signing up for Elektropay  is fast and free \\u2014 no commitments or long-term contracts.\"), /*#__PURE__*/React.createElement(Pane, {\n      paddingTop: \"40px\",\n      className: \"row\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: basics,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Heading, {\n      textAlign: \"center\",\n      fontWeight: \"600\",\n      size: 500,\n      is: \"h3\",\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Just the basics\"), /*#__PURE__*/React.createElement(Text, {\n      display: \"block\",\n      textAlign: \"center\",\n      size: 400,\n      color: \"#5f6a7d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"Tell us about your business so we can serve you better.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: noCredit,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Heading, {\n      textAlign: \"center\",\n      fontWeight: \"600\",\n      size: 500,\n      is: \"h3\",\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"No credit checks\"), /*#__PURE__*/React.createElement(Text, {\n      display: \"block\",\n      textAlign: \"center\",\n      size: 400,\n      color: \"#5f6a7d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"We\\u2019ll need the last four numbers of your SSN to verify your identity.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: reader,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Heading, {\n      textAlign: \"center\",\n      fontWeight: \"600\",\n      size: 500,\n      is: \"h3\",\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Get your free magstripe reader\"), /*#__PURE__*/React.createElement(Text, {\n      display: \"block\",\n      textAlign: \"center\",\n      size: 400,\n      color: \"#5f6a7d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"When you\\u2019re done, we\\u2019ll drop your free Monedar Reader for magstripe in the mail.\"))))), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: '',\n        emailConfirmation: '',\n        password: '',\n        country: 'US',\n        acceptTerms: false\n      },\n      validationSchema: UserInfoSchema,\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setSubmitting(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      setFieldValue,\n      submitForm\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Pane, {\n      className: \"row\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    }, \"Enter your email\"), /*#__PURE__*/React.createElement(TextInput, {\n      isInvalid: errors.email && touched.email ? true : false,\n      label: \"Enter your email\",\n      description: \"This is a description.\",\n      className: \"\",\n      height: 40,\n      width: \"100%\",\n      name: \"email\",\n      placeholder: \"you@example.com\",\n      type: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, errors.email) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, \"Confirm your email\"), /*#__PURE__*/React.createElement(TextInput, {\n      isInvalid: errors.emailConfirmation && touched.emailConfirmation ? true : false,\n      label: \"Enter your email\",\n      description: \"This is a description.\",\n      height: 40,\n      width: \"100%\",\n      name: \"emailConfirmation\",\n      placeholder: \"you@example.com\",\n      type: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.emailConfirmation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }), errors.emailConfirmation && touched.emailConfirmation ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, errors.emailConfirmation) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, \"Create a password\"), /*#__PURE__*/React.createElement(TextInput, {\n      isInvalid: errors.password && touched.password ? true : false,\n      height: 40,\n      width: \"100%\",\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, errors.password) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(ReactFlagsSelect, {\n      name: \"country\",\n      onSelect: selectedCountryCode => {\n        setFieldValue('country', selectedCountryCode);\n      },\n      defaultCountry: \"US\",\n      value: values.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"checkbox\",\n      name: \"acceptTerms\",\n      className: 'form-check-input ' + (errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"disclaimer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \"I agree to Elektropay \", /*#__PURE__*/React.createElement(\"a\", {\n      target: \"\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 77\n      }\n    }, \"Terms\"), \", \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 109\n      }\n    }, \"Privacy Policy\"), \", and \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 144\n      }\n    }, \"E-Sign Consent\"), \".\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpFooter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Pane, {\n      className: \"row\",\n      display: \"flex\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 textAlign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btnMain\",\n      width: \"100%\",\n      height: 40,\n      justifyContent: \"center\",\n      appearance: \"primary\",\n      textTransform: \"uppercase\",\n      onClick: this.back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btnMain\",\n      width: \"100%\",\n      height: 40,\n      justifyContent: \"center\",\n      appearance: \"primary\",\n      textTransform: \"uppercase\",\n      onClick: e => {\n        e.preventDefault();\n        submitForm();\n\n        if (Object.entries(errors).length == 0) {\n          this.props.nextStep(values);\n        } else {\n          toaster.danger('We need you to complete all of the required fields before we can continue', {\n            id: 'forbidden-action'\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, \"Continue\")))))));\n  }\n\n}\nexport default UserInfo;","map":{"version":3,"sources":["/Users/ravi/Desktop/tasket_react/src/components/UserInfo.js"],"names":["React","Component","Heading","Text","TextInput","Pane","Checkbox","Button","toaster","Formik","Form","Field","Yup","ReactFlagsSelect","UserInfoSchema","object","shape","email","string","required","emailConfirmation","oneOf","ref","password","min","acceptTerms","boolean","UserInfo","constructor","props","back","e","preventDefault","prevStep","state","checked","countryCode","userInfoForm","createRef","render","basics","noCredit","reader","country","values","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","submitForm","selectedCountryCode","Object","entries","length","nextStep","danger","id"],"mappings":"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","sourcesContent":[" /* eslint-disable */ \nimport React, { Component } from 'react'\nimport { Heading, Text, TextInput, Pane, Checkbox, Button, toaster } from 'evergreen-ui'\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport ReactFlagsSelect from 'react-flags-select'\nimport 'react-flags-select/css/react-flags-select.css'\n\nimport basics from '../img/basics.svg'\nimport noCredit from '../img/no-credit.svg'\nimport reader from '../img/reader.svg'\n\nconst UserInfoSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('The email address you entered does not appear to be valid')\n    .required('Enter the email address you want to use to create your new account'),\n  emailConfirmation: Yup.string()\n    .required('Enter your email address twice to confirm itâ€™s correct')\n    .oneOf([Yup.ref('email')], 'The email addresses you entered do not match'),\n  password: Yup.string()\n    .min(8, 'Your password must be at least 8 characters')\n    .required('Create a password so you can login to your new account'),\n  acceptTerms: Yup.boolean()\n    .oneOf([true], 'Must Accept Terms and Conditions'),\n});\n\nexport class UserInfo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { checked: false, countryCode: 'US' };\n    this.userInfoForm = React.createRef();\n  }\n\n  back = e => {\n    e.preventDefault()\n    this.props.prevStep()\n  };\n\n  render() {\n    return (\n      <div className='signUpForm'>\n        {/* Form Header  */}\n        <div className='signUpHead'>\n          <Heading textAlign='center' fontWeight='400' size={700} is='h2' marginTop='default' marginBottom='10px'>User Info Letâ€™s create your account.</Heading>\n          <Text className='customSubHeading' display='block' textAlign='center' size={400} color='#5f6a7d'>The quick brown fox jumps over the lazy dog Signing up for Elektropay  is fast and free â€” no commitments or long-term contracts.</Text>\n\n          <Pane\n            paddingTop='40px'\n            className='row'\n            display='flex'\n            flexWrap='wrap'\n            justifyContent='space-between'\n          >\n            <div className='col-3'>\n              <div className='signBox'>\n                <img src={basics} alt='' />\n                <Heading textAlign='center' fontWeight='600' size={500} is='h3' marginTop='10px' marginBottom='10px'>Just the basics</Heading>\n                <Text display='block' textAlign='center' size={400} color='#5f6a7d'>Tell us about your business so we can serve you better.</Text>\n              </div>\n            </div>\n            <div className='col-3'>\n              <div className='signBox'>\n                <img src={noCredit} alt='' />\n                <Heading textAlign='center' fontWeight='600' size={500} is='h3' marginTop='10px' marginBottom='10px'>No credit checks</Heading>\n                <Text display='block' textAlign='center' size={400} color='#5f6a7d'>Weâ€™ll need the last four numbers of your SSN to verify your identity.</Text>\n              </div>\n            </div>\n            <div className='col-3'>\n              <div className='signBox'>\n                <img src={reader} alt='' />\n                <Heading textAlign='center' fontWeight='600' size={500} is='h3' marginTop='10px' marginBottom='10px'>Get your free magstripe reader</Heading>\n                <Text display='block' textAlign='center' size={400} color='#5f6a7d'>When youâ€™re done, weâ€™ll drop your free Monedar Reader for magstripe in the mail.</Text>\n              </div>\n            </div>\n          </Pane>\n        </div>\n\n        {/* Form Body  */}\n        <Formik\n          initialValues={{ email: '', emailConfirmation: '', password: '', country: 'US', acceptTerms: false }}\n          validationSchema={UserInfoSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(false);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n            submitForm,\n          }) => (\n              <form\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n              >\n                <div className='signUpBody'>\n                  <Pane\n                    className='row'\n                    display='flex'\n                    flexWrap='wrap'\n                  >\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Enter your email</Text>\n                      <TextInput\n                        isInvalid={errors.email && touched.email ? true : false}\n                        label='Enter your email'\n                        description='This is a description.'\n                        className=''\n                        height={40}\n                        width='100%'\n                        name='email'\n                        placeholder='you@example.com'\n                        type='email'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n\n                      />\n                      {errors.email && touched.email ? (\n                        <span className=\"error_span\">{errors.email}</span>\n                      ) : null}\n                    </div>\n\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Confirm your email</Text>\n                      <TextInput\n                        isInvalid={errors.emailConfirmation && touched.emailConfirmation ? true : false}\n                        label='Enter your email'\n                        description='This is a description.'\n                        height={40}\n                        width='100%'\n                        name='emailConfirmation'\n                        placeholder='you@example.com'\n                        type='email'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.emailConfirmation}\n                      />\n                      {errors.emailConfirmation && touched.emailConfirmation ? (\n                        <span className=\"error_span\">{errors.emailConfirmation}</span>\n                      ) : null}\n                    </div>\n\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Create a password</Text>\n                      <TextInput\n                        isInvalid={errors.password && touched.password ? true : false}\n                        height={40}\n                        width='100%'\n                        name='password'\n                        placeholder='Password'\n                        type='password'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                      />\n                      {errors.password && touched.password ? (\n                        <span className=\"error_span\">{errors.password}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Country</Text>\n                      <ReactFlagsSelect\n                        name='country'\n                        onSelect={(selectedCountryCode) => {\n                          setFieldValue('country', selectedCountryCode)\n                        }}\n                        defaultCountry='US'\n                        value={values.country}\n                      />\n                    </div>\n                    <div className='col-12'>\n                      <div className=''>\n                        <Field\n                          type=\"checkbox\"\n                          name=\"acceptTerms\"\n                          className={'form-check-input ' + (errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : '')}\n                        />\n                        <label className='disclaimer'>I agree to Elektropay <a target='' href=''>Terms</a>, <a href=''>Privacy Policy</a>, and <a href=''>E-Sign Consent</a>.\n                        </label>\n                      </div>\n                    </div>\n                  </Pane>\n                </div>\n                <div className='signUpFooter'>\n                 {/* <Pane\n                    className='row'\n                    display='flex'\n                    alignItems='center'\n                    flexWrap='wrap'\n                  >\n                    <div className='col-6 textAlign'>\n                      <Text size={400} lineHeight='23px' fontWeight='400'>Already have a Elektropay account?\n                        <a className='signIn' href=''> Sign in.</a>\n                      </Text>\n                    </div>\n                  </Pane>*/}\n                  <Pane\n                    className='row'\n                    display='flex'\n                    alignItems='center'\n                    flexWrap='wrap'\n                    justifyContent='space-between'\n                  >\n                      <div className='col-4 textAlign'>\n                        <Button className='btnMain' width='100%' height={40} justifyContent='center' appearance='primary' textTransform='uppercase' onClick={this.back}>Back</Button>\n                      </div>\n\n                      <div className='col-4'>\n                        <Button\n                          className='btnMain'\n                          width='100%'\n                          height={40}\n                          justifyContent='center'\n                          appearance='primary'\n                          textTransform='uppercase'\n                          onClick={(e) => {\n                            e.preventDefault();\n                            submitForm();\n                            if (Object.entries(errors).length == 0) {\n                              this.props.nextStep(values);\n                            } else {\n                              toaster.danger(\n                                'We need you to complete all of the required fields before we can continue',\n                                { id: 'forbidden-action' }\n                              )\n                            }\n                          }}\n                        >\n                          Continue\n                      </Button>\n                      </div>\n                  </Pane>\n                </div>\n              </form>\n            )}\n        </Formik>\n      </div>\n    )\n  }\n}\n\nexport default UserInfo\n"]},"metadata":{},"sourceType":"module"}