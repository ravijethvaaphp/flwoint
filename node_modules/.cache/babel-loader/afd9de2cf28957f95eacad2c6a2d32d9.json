{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Transition from 'react-transition-group/Transition';\nimport { Portal } from '../../portal';\nimport { Stack } from '../../stack';\nimport { StackingOrder, Position } from '../../constants';\nimport getPosition from './getPosition';\nvar animationEasing = {\n  spring: \"cubic-bezier(0.175, 0.885, 0.320, 1.175)\"\n};\n\nvar initialState = function initialState() {\n  return {\n    top: null,\n    left: null,\n    transformOrigin: null\n  };\n};\n\nvar getCSS = function getCSS(_ref) {\n  var initialScale = _ref.initialScale,\n      animationDuration = _ref.animationDuration;\n  return {\n    position: 'fixed',\n    opacity: 0,\n    transitionTimingFunction: animationEasing.spring,\n    transitionDuration: \"\".concat(animationDuration, \"ms\"),\n    transitionProperty: 'opacity, transform',\n    transform: \"scale(\".concat(initialScale, \") translateY(-1px)\"),\n    '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n      opacity: 1,\n      visibility: 'visible',\n      transform: \"scale(1)\"\n    },\n    '&[data-state=\"exiting\"]': {\n      opacity: 0,\n      transform: 'scale(1)'\n    }\n  };\n};\n\nvar Positioner = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Positioner, _PureComponent);\n\n  function Positioner(props, context) {\n    var _this;\n\n    _classCallCheck(this, Positioner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Positioner).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"getTargetRef\", function (ref) {\n      _this.targetRef = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (ref) {\n      _this.positionerRef = ref;\n\n      _this.props.innerRef(ref);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEnter\", function () {\n      _this.update();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function () {\n      var prevHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var prevWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      if (!_this.props.isShown || !_this.targetRef || !_this.positionerRef) return;\n\n      var targetRect = _this.targetRef.getBoundingClientRect();\n\n      var hasEntered = _this.positionerRef.getAttribute('data-state') === 'entered';\n      var viewportHeight = document.documentElement.clientHeight;\n      var viewportWidth = document.documentElement.clientWidth;\n      var height;\n      var width;\n\n      if (hasEntered) {\n        // Only when the animation is done should we opt-in to `getBoundingClientRect`\n        var positionerRect = _this.positionerRef.getBoundingClientRect(); // https://github.com/segmentio/evergreen/issues/255\n        // We need to ceil the width and height to prevent jitter when\n        // the window is zoomed (when `window.devicePixelRatio` is not an integer)\n\n\n        height = Math.round(positionerRect.height);\n        width = Math.round(positionerRect.width);\n      } else {\n        // When the animation is in flight use `offsetWidth/Height` which\n        // does not calculate the `transform` property as part of its result.\n        // There is still change on jitter during the animation (although unoticable)\n        // When the browser is zoomed in â€” we fix this with `Math.max`.\n        height = Math.max(_this.positionerRef.offsetHeight, prevHeight);\n        width = Math.max(_this.positionerRef.offsetWidth, prevWidth);\n      }\n\n      var _getPosition = getPosition({\n        position: _this.props.position,\n        targetRect: targetRect,\n        targetOffset: _this.props.targetOffset,\n        dimensions: {\n          height: height,\n          width: width\n        },\n        viewport: {\n          width: viewportWidth,\n          height: viewportHeight\n        },\n        viewportOffset: _this.props.bodyOffset\n      }),\n          rect = _getPosition.rect,\n          transformOrigin = _getPosition.transformOrigin;\n\n      _this.setState({\n        left: rect.left,\n        top: rect.top,\n        transformOrigin: transformOrigin\n      }, function () {\n        _this.latestAnimationFrame = requestAnimationFrame(function () {\n          _this.update(height, width);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExited\", function () {\n      _this.setState(function () {\n        return _objectSpread({}, initialState());\n      }, function () {\n        _this.props.onCloseComplete();\n      });\n    });\n\n    _this.state = initialState();\n    return _this;\n  }\n\n  _createClass(Positioner, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.latestAnimationFrame) {\n        cancelAnimationFrame(this.latestAnimationFrame);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          target = _this$props.target,\n          isShown = _this$props.isShown,\n          children = _this$props.children,\n          initialScale = _this$props.initialScale,\n          targetOffset = _this$props.targetOffset,\n          animationDuration = _this$props.animationDuration;\n      var _this$state = this.state,\n          left = _this$state.left,\n          top = _this$state.top,\n          transformOrigin = _this$state.transformOrigin;\n      return React.createElement(Stack, {\n        value: StackingOrder.POSITIONER\n      }, function (zIndex) {\n        return React.createElement(React.Fragment, null, target({\n          getRef: _this2.getTargetRef,\n          isShown: isShown\n        }), React.createElement(Transition, {\n          appear: true,\n          \"in\": isShown,\n          timeout: animationDuration,\n          onEnter: _this2.handleEnter,\n          onEntered: _this2.props.onOpenComplete,\n          onExited: _this2.handleExited,\n          unmountOnExit: true\n        }, function (state) {\n          return React.createElement(Portal, null, children({\n            top: top,\n            left: left,\n            state: state,\n            zIndex: zIndex,\n            css: getCSS({\n              targetOffset: targetOffset,\n              initialScale: initialScale,\n              animationDuration: animationDuration\n            }),\n            style: {\n              transformOrigin: transformOrigin,\n              left: left,\n              top: top,\n              zIndex: zIndex\n            },\n            getRef: _this2.getRef,\n            animationDuration: animationDuration\n          }));\n        }));\n      });\n    }\n  }]);\n\n  return Positioner;\n}(PureComponent);\n\nPositioner.displayName = \"Positioner\";\n\n_defineProperty(Positioner, \"propTypes\", {\n  /**\n   * The position the element that is being positioned is on.\n   * Smart positioning might override this.\n   */\n  position: PropTypes.oneOf([Position.TOP, Position.TOP_LEFT, Position.TOP_RIGHT, Position.BOTTOM, Position.BOTTOM_LEFT, Position.BOTTOM_RIGHT, Position.LEFT, Position.RIGHT]).isRequired,\n\n  /**\n   * When true, show the element being positioned.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Function that returns the element being positioned.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function that returns the ref of the element being positioned.\n   */\n  innerRef: PropTypes.func.isRequired,\n\n  /**\n   * The minimum distance from the body to the element being positioned.\n   */\n  bodyOffset: PropTypes.number.isRequired,\n\n  /**\n   * The minimum distance from the target to the element being positioned.\n   */\n  targetOffset: PropTypes.number.isRequired,\n\n  /**\n   * Function that should return a node for the target.\n   * ({ getRef: () -> Ref, isShown: Bool }) -> React Node\n   */\n  target: PropTypes.func.isRequired,\n\n  /**\n   * Initial scale of the element being positioned.\n   */\n  initialScale: PropTypes.number.isRequired,\n\n  /**\n   * Duration of the animation.\n   */\n  animationDuration: PropTypes.number.isRequired,\n\n  /**\n   * Function that will be called when the exit transition is complete.\n   */\n  onCloseComplete: PropTypes.func.isRequired,\n\n  /**\n   * Function that will be called when the enter transition is complete.\n   */\n  onOpenComplete: PropTypes.func.isRequired\n});\n\n_defineProperty(Positioner, \"defaultProps\", {\n  position: Position.BOTTOM,\n  bodyOffset: 6,\n  targetOffset: 6,\n  initialScale: 0.9,\n  animationDuration: 300,\n  innerRef: function innerRef() {},\n  onOpenComplete: function onOpenComplete() {},\n  onCloseComplete: function onCloseComplete() {}\n});\n\nexport { Positioner as default };","map":{"version":3,"sources":["../../../src/positioner/src/Positioner.js"],"names":["animationEasing","spring","initialState","top","left","transformOrigin","getCSS","initialScale","animationDuration","position","opacity","transitionTimingFunction","transitionDuration","transitionProperty","transform","visibility","Positioner","PureComponent","PropTypes","Position","isShown","children","innerRef","bodyOffset","targetOffset","target","onCloseComplete","onOpenComplete","isRequired","cancelAnimationFrame","prevHeight","prevWidth","targetRect","hasEntered","viewportHeight","document","viewportWidth","positionerRect","height","Math","width","rect","getPosition","dimensions","viewport","viewportOffset","requestAnimationFrame","StackingOrder","POSITIONER","getRef","state","zIndex","css","style"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Transition from 'react-transition-group/Transition'\nimport { Portal } from '../../portal'\nimport { Stack } from '../../stack'\nimport { StackingOrder, Position } from '../../constants'\nimport getPosition from './getPosition'\n\nconst animationEasing = {\n  spring: `cubic-bezier(0.175, 0.885, 0.320, 1.175)`\n}\n\nconst initialState = () => ({\n  top: null,\n  left: null,\n  transformOrigin: null\n})\n\nconst getCSS = ({ initialScale, animationDuration }) => ({\n  position: 'fixed',\n  opacity: 0,\n  transitionTimingFunction: animationEasing.spring,\n  transitionDuration: `${animationDuration}ms`,\n  transitionProperty: 'opacity, transform',\n  transform: `scale(${initialScale}) translateY(-1px)`,\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    opacity: 1,\n    visibility: 'visible',\n    transform: `scale(1)`\n  },\n  '&[data-state=\"exiting\"]': {\n    opacity: 0,\n    transform: 'scale(1)'\n  }\n})\n\nexport default class Positioner extends PureComponent {\n  static propTypes = {\n    /**\n     * The position the element that is being positioned is on.\n     * Smart positioning might override this.\n     */\n    position: PropTypes.oneOf([\n      Position.TOP,\n      Position.TOP_LEFT,\n      Position.TOP_RIGHT,\n      Position.BOTTOM,\n      Position.BOTTOM_LEFT,\n      Position.BOTTOM_RIGHT,\n      Position.LEFT,\n      Position.RIGHT\n    ]).isRequired,\n\n    /**\n     * When true, show the element being positioned.\n     */\n    isShown: PropTypes.bool,\n\n    /**\n     * Function that returns the element being positioned.\n     */\n    children: PropTypes.func.isRequired,\n\n    /**\n     * Function that returns the ref of the element being positioned.\n     */\n    innerRef: PropTypes.func.isRequired,\n\n    /**\n     * The minimum distance from the body to the element being positioned.\n     */\n    bodyOffset: PropTypes.number.isRequired,\n\n    /**\n     * The minimum distance from the target to the element being positioned.\n     */\n    targetOffset: PropTypes.number.isRequired,\n\n    /**\n     * Function that should return a node for the target.\n     * ({ getRef: () -> Ref, isShown: Bool }) -> React Node\n     */\n    target: PropTypes.func.isRequired,\n\n    /**\n     * Initial scale of the element being positioned.\n     */\n    initialScale: PropTypes.number.isRequired,\n\n    /**\n     * Duration of the animation.\n     */\n    animationDuration: PropTypes.number.isRequired,\n\n    /**\n     * Function that will be called when the exit transition is complete.\n     */\n    onCloseComplete: PropTypes.func.isRequired,\n\n    /**\n     * Function that will be called when the enter transition is complete.\n     */\n    onOpenComplete: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    position: Position.BOTTOM,\n    bodyOffset: 6,\n    targetOffset: 6,\n    initialScale: 0.9,\n    animationDuration: 300,\n    innerRef: () => {},\n    onOpenComplete: () => {},\n    onCloseComplete: () => {}\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    this.state = initialState()\n  }\n\n  componentWillUnmount() {\n    if (this.latestAnimationFrame) {\n      cancelAnimationFrame(this.latestAnimationFrame)\n    }\n  }\n\n  getTargetRef = ref => {\n    this.targetRef = ref\n  }\n\n  getRef = ref => {\n    this.positionerRef = ref\n    this.props.innerRef(ref)\n  }\n\n  handleEnter = () => {\n    this.update()\n  }\n\n  update = (prevHeight = 0, prevWidth = 0) => {\n    if (!this.props.isShown || !this.targetRef || !this.positionerRef) return\n\n    const targetRect = this.targetRef.getBoundingClientRect()\n    const hasEntered =\n      this.positionerRef.getAttribute('data-state') === 'entered'\n\n    const viewportHeight = document.documentElement.clientHeight\n    const viewportWidth = document.documentElement.clientWidth\n\n    let height\n    let width\n    if (hasEntered) {\n      // Only when the animation is done should we opt-in to `getBoundingClientRect`\n      const positionerRect = this.positionerRef.getBoundingClientRect()\n\n      // https://github.com/segmentio/evergreen/issues/255\n      // We need to ceil the width and height to prevent jitter when\n      // the window is zoomed (when `window.devicePixelRatio` is not an integer)\n      height = Math.round(positionerRect.height)\n      width = Math.round(positionerRect.width)\n    } else {\n      // When the animation is in flight use `offsetWidth/Height` which\n      // does not calculate the `transform` property as part of its result.\n      // There is still change on jitter during the animation (although unoticable)\n      // When the browser is zoomed in â€” we fix this with `Math.max`.\n      height = Math.max(this.positionerRef.offsetHeight, prevHeight)\n      width = Math.max(this.positionerRef.offsetWidth, prevWidth)\n    }\n\n    const { rect, transformOrigin } = getPosition({\n      position: this.props.position,\n      targetRect,\n      targetOffset: this.props.targetOffset,\n      dimensions: {\n        height,\n        width\n      },\n      viewport: {\n        width: viewportWidth,\n        height: viewportHeight\n      },\n      viewportOffset: this.props.bodyOffset\n    })\n\n    this.setState(\n      {\n        left: rect.left,\n        top: rect.top,\n        transformOrigin\n      },\n      () => {\n        this.latestAnimationFrame = requestAnimationFrame(() => {\n          this.update(height, width)\n        })\n      }\n    )\n  }\n\n  handleExited = () => {\n    this.setState(\n      () => {\n        return {\n          ...initialState()\n        }\n      },\n      () => {\n        this.props.onCloseComplete()\n      }\n    )\n  }\n\n  render() {\n    const {\n      target,\n      isShown,\n      children,\n      initialScale,\n      targetOffset,\n      animationDuration\n    } = this.props\n\n    const { left, top, transformOrigin } = this.state\n\n    return (\n      <Stack value={StackingOrder.POSITIONER}>\n        {zIndex => {\n          return (\n            <React.Fragment>\n              {target({ getRef: this.getTargetRef, isShown })}\n\n              <Transition\n                appear\n                in={isShown}\n                timeout={animationDuration}\n                onEnter={this.handleEnter}\n                onEntered={this.props.onOpenComplete}\n                onExited={this.handleExited}\n                unmountOnExit\n              >\n                {state => (\n                  <Portal>\n                    {children({\n                      top,\n                      left,\n                      state,\n                      zIndex,\n                      css: getCSS({\n                        targetOffset,\n                        initialScale,\n                        animationDuration\n                      }),\n                      style: {\n                        transformOrigin,\n                        left,\n                        top,\n                        zIndex\n                      },\n                      getRef: this.getRef,\n                      animationDuration\n                    })}\n                  </Portal>\n                )}\n              </Transition>\n            </React.Fragment>\n          )\n        }}\n      </Stack>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}