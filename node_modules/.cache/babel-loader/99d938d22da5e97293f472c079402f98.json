{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n/**\n * @overview TagInput accepts multiple values that can be individually removed\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from '../../badges';\nimport { CrossIcon } from '../../icons';\nimport { minorScale } from '../../scales';\n\nvar Tag = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Tag, _React$PureComponent);\n\n  function Tag() {\n    _classCallCheck(this, Tag);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tag).apply(this, arguments));\n  }\n\n  _createClass(Tag, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          onRemove = _this$props.onRemove,\n          isRemovable = _this$props.isRemovable,\n          props = _objectWithoutProperties(_this$props, [\"children\", \"onRemove\", \"isRemovable\"]);\n\n      var badgeStyles = {\n        alignItems: 'center',\n        display: 'inline-flex',\n        fontWeight: 400,\n        textTransform: 'none'\n      };\n\n      if (isRemovable) {\n        badgeStyles.paddingRight = minorScale(1);\n      }\n\n      return React.createElement(Badge, _extends({\n        isInteractive: true\n      }, badgeStyles, props), children, isRemovable && React.createElement(CrossIcon, {\n        marginLeft: minorScale(1),\n        onClick: onRemove,\n        size: minorScale(3)\n      }));\n    }\n  }]);\n\n  return Tag;\n}(React.PureComponent);\n\nTag.displayName = \"Tag\";\n\n_defineProperty(Tag, \"propTypes\", {\n  /** The badge content */\n  children: PropTypes.node,\n\n  /**\n   * Callback invoked when the removal icon is clicked.\n   * (event) => void\n   */\n  onRemove: PropTypes.func,\n\n  /** Whether or not the tag can be removed. */\n  isRemovable: PropTypes.bool\n});\n\nexport default Tag;","map":{"version":3,"sources":["../../../src/tag-input/src/Tag.js"],"names":["Tag","React","PureComponent","children","PropTypes","onRemove","isRemovable","bool","props","badgeStyles","alignItems","display","fontWeight","textTransform","minorScale"],"mappings":";;;;;;;;AAAA;;;;AAIA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,KAAA,QAAA,cAAA;AACA,SAAA,SAAA,QAAA,aAAA;AACA,SAAA,UAAA,QAAA,cAAA;;IAEMA,G;;;;;;;;;;;6BAaK;AAAA,UAAA,WAAA,GAC+C,KAD/C,KAAA;AAAA,UACCG,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,UACWE,QADX,GAAA,WAAA,CAAA,QAAA;AAAA,UACqBC,WADrB,GAAA,WAAA,CAAA,WAAA;AAAA,UACqCE,KADrC,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,aAAA,CAAA,CAAA;;AAGP,UAAMC,WAAW,GAAG;AAClBC,QAAAA,UAAU,EADQ,QAAA;AAElBC,QAAAA,OAAO,EAFW,aAAA;AAGlBC,QAAAA,UAAU,EAHQ,GAAA;AAIlBC,QAAAA,aAAa,EAAE;AAJG,OAApB;;AAOA,UAAA,WAAA,EAAiB;AACfJ,QAAAA,WAAW,CAAXA,YAAAA,GAA2BK,UAAU,CAArCL,CAAqC,CAArCA;AACD;;AAED,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAO,QAAA,aAAa,EAAA;AAApB,OAAA,EAAA,WAAA,EAAA,KAAA,CAAA,EAAA,QAAA,EAEGH,WAAW,IACV,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AACE,QAAA,UAAU,EAAEQ,UAAU,CADxB,CACwB,CADxB;AAEE,QAAA,OAAO,EAFT,QAAA;AAGE,QAAA,IAAI,EAAEA,UAAU,CAAA,CAAA;AAHlB,OAAA,CAHJ,CADF;AAYD;;;;EAvCeb,KAAK,CAACC,a;;AAAlBF,G,YAAAA,G,KAAAA;;gBAAAA,G,eACe;AACjB;AACAG,EAAAA,QAAQ,EAAEC,SAAS,CAFF,IAAA;;AAGjB;;;;AAIAC,EAAAA,QAAQ,EAAED,SAAS,CAPF,IAAA;;AAQjB;AACAE,EAAAA,WAAW,EAAEF,SAAS,CAACG;AATN,C;;AAyCrB,eAAA,GAAA","sourcesContent":["/**\n * @overview TagInput accepts multiple values that can be individually removed\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Badge } from '../../badges'\nimport { CrossIcon } from '../../icons'\nimport { minorScale } from '../../scales'\n\nclass Tag extends React.PureComponent {\n  static propTypes = {\n    /** The badge content */\n    children: PropTypes.node,\n    /**\n     * Callback invoked when the removal icon is clicked.\n     * (event) => void\n     */\n    onRemove: PropTypes.func,\n    /** Whether or not the tag can be removed. */\n    isRemovable: PropTypes.bool\n  }\n\n  render() {\n    const { children, onRemove, isRemovable, ...props } = this.props\n\n    const badgeStyles = {\n      alignItems: 'center',\n      display: 'inline-flex',\n      fontWeight: 400,\n      textTransform: 'none'\n    }\n\n    if (isRemovable) {\n      badgeStyles.paddingRight = minorScale(1)\n    }\n\n    return (\n      <Badge isInteractive {...badgeStyles} {...props}>\n        {children}\n        {isRemovable && (\n          <CrossIcon\n            marginLeft={minorScale(1)}\n            onClick={onRemove}\n            size={minorScale(3)}\n          />\n        )}\n      </Badge>\n    )\n  }\n}\n\nexport default Tag\n"]},"metadata":{},"sourceType":"module"}