{"ast":null,"code":"import _classCallCheck from\"/Users/ravi/Desktop/tasket_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ravi/Desktop/tasket_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ravi/Desktop/tasket_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ravi/Desktop/tasket_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* eslint-disable */import React,{Component}from'react';import{Heading,Text,TextInput,Pane,Checkbox,Button,toaster}from'evergreen-ui';import{Formik,Form,Field}from'formik';import*as Yup from'yup';import ReactFlagsSelect from'react-flags-select';import'react-flags-select/css/react-flags-select.css';import basics from\"../img/basics.svg\";import noCredit from\"../img/no-credit.svg\";import reader from\"../img/reader.svg\";var UserInfoSchema=Yup.object().shape({email:Yup.string().email('The email address you entered does not appear to be valid').required('Enter the email address you want to use to create your new account'),emailConfirmation:Yup.string().required('Enter your email address twice to confirm itâ€™s correct').oneOf([Yup.ref('email')],'The email addresses you entered do not match'),password:Yup.string().min(8,'Your password must be at least 8 characters').required('Create a password so you can login to your new account'),acceptTerms:Yup.boolean().oneOf([true],'Must Accept Terms and Conditions')});export var UserInfo=/*#__PURE__*/function(_Component){_inherits(UserInfo,_Component);var _super=_createSuper(UserInfo);function UserInfo(props){var _this;_classCallCheck(this,UserInfo);_this=_super.call(this,props);_this.back=function(e){e.preventDefault();_this.props.prevStep();};_this.state={checked:false,countryCode:'US'};_this.userInfoForm=React.createRef();return _this;}_createClass(UserInfo,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"signUpForm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"signUpHead\"},/*#__PURE__*/React.createElement(Heading,{textAlign:\"center\",fontWeight:\"400\",size:700,is:\"h2\",marginTop:\"default\",marginBottom:\"10px\"},\"User Info Let\\u2019s create your account.\"),/*#__PURE__*/React.createElement(Text,{className:\"customSubHeading\",display:\"block\",textAlign:\"center\",size:400,color:\"#5f6a7d\"},\"The quick brown fox jumps over the lazy dog Signing up for Elektropay  is fast and free \\u2014 no commitments or long-term contracts.\"),/*#__PURE__*/React.createElement(Pane,{paddingTop:\"40px\",className:\"row\",display:\"flex\",flexWrap:\"wrap\",justifyContent:\"space-between\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"signBox\"},/*#__PURE__*/React.createElement(\"img\",{src:basics,alt:\"\"}),/*#__PURE__*/React.createElement(Heading,{textAlign:\"center\",fontWeight:\"600\",size:500,is:\"h3\",marginTop:\"10px\",marginBottom:\"10px\"},\"Just the basics\"),/*#__PURE__*/React.createElement(Text,{display:\"block\",textAlign:\"center\",size:400,color:\"#5f6a7d\"},\"Tell us about your business so we can serve you better.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"signBox\"},/*#__PURE__*/React.createElement(\"img\",{src:noCredit,alt:\"\"}),/*#__PURE__*/React.createElement(Heading,{textAlign:\"center\",fontWeight:\"600\",size:500,is:\"h3\",marginTop:\"10px\",marginBottom:\"10px\"},\"No credit checks\"),/*#__PURE__*/React.createElement(Text,{display:\"block\",textAlign:\"center\",size:400,color:\"#5f6a7d\"},\"We\\u2019ll need the last four numbers of your SSN to verify your identity.\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"col-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"signBox\"},/*#__PURE__*/React.createElement(\"img\",{src:reader,alt:\"\"}),/*#__PURE__*/React.createElement(Heading,{textAlign:\"center\",fontWeight:\"600\",size:500,is:\"h3\",marginTop:\"10px\",marginBottom:\"10px\"},\"Get your free magstripe reader\"),/*#__PURE__*/React.createElement(Text,{display:\"block\",textAlign:\"center\",size:400,color:\"#5f6a7d\"},\"When you\\u2019re done, we\\u2019ll drop your free Elektropay Reader for magstripe in the mail.\"))))),/*#__PURE__*/React.createElement(Formik,{initialValues:{email:'',emailConfirmation:'',password:'',country:'US',acceptTerms:false},validationSchema:UserInfoSchema,onSubmit:function onSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;setSubmitting(false);}},function(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting,setFieldValue=_ref2.setFieldValue,submitForm=_ref2.submitForm;return/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"signUpBody\"},/*#__PURE__*/React.createElement(Pane,{className:\"row\",display:\"flex\",flexWrap:\"wrap\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(Text,{size:300,lineHeight:\"23px\",fontWeight:\"500\"},\"Enter your email\"),/*#__PURE__*/React.createElement(TextInput,{isInvalid:errors.email&&touched.email?true:false,label:\"Enter your email\",description:\"This is a description.\",className:\"\",height:40,width:\"100%\",name:\"email\",placeholder:\"you@example.com\",type:\"email\",onChange:handleChange,onBlur:handleBlur,value:values.email}),errors.email&&touched.email?/*#__PURE__*/React.createElement(\"span\",{className:\"error_span\"},errors.email):null),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(Text,{size:300,lineHeight:\"23px\",fontWeight:\"500\"},\"Confirm your email\"),/*#__PURE__*/React.createElement(TextInput,{isInvalid:errors.emailConfirmation&&touched.emailConfirmation?true:false,label:\"Enter your email\",description:\"This is a description.\",height:40,width:\"100%\",name:\"emailConfirmation\",placeholder:\"you@example.com\",type:\"email\",onChange:handleChange,onBlur:handleBlur,value:values.emailConfirmation}),errors.emailConfirmation&&touched.emailConfirmation?/*#__PURE__*/React.createElement(\"span\",{className:\"error_span\"},errors.emailConfirmation):null),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(Text,{size:300,lineHeight:\"23px\",fontWeight:\"500\"},\"Create a password\"),/*#__PURE__*/React.createElement(TextInput,{isInvalid:errors.password&&touched.password?true:false,height:40,width:\"100%\",name:\"password\",placeholder:\"Password\",type:\"password\",onChange:handleChange,onBlur:handleBlur,value:values.password}),errors.password&&touched.password?/*#__PURE__*/React.createElement(\"span\",{className:\"error_span\"},errors.password):null),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(Text,{size:300,lineHeight:\"23px\",fontWeight:\"500\"},\"Country\"),/*#__PURE__*/React.createElement(ReactFlagsSelect,{name:\"country\",onSelect:function onSelect(selectedCountryCode){setFieldValue('country',selectedCountryCode);},defaultCountry:\"US\",value:values.country})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(Field,{type:\"checkbox\",name:\"acceptTerms\",className:'form-check-input '+(errors.acceptTerms&&touched.acceptTerms?' is-invalid':'')}),/*#__PURE__*/React.createElement(\"label\",{className:\"disclaimer\"},\"I agree to Elektropay \",/*#__PURE__*/React.createElement(\"a\",{target:\"\",href:\"\"},\"Terms\"),\", \",/*#__PURE__*/React.createElement(\"a\",{href:\"\"},\"Privacy Policy\"),\", and \",/*#__PURE__*/React.createElement(\"a\",{href:\"\"},\"E-Sign Consent\"),\".\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"signUpFooter\"},/*#__PURE__*/React.createElement(Pane,{className:\"row\",display:\"flex\",alignItems:\"center\",flexWrap:\"wrap\",justifyContent:\"space-between\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-4 textAlign\"},/*#__PURE__*/React.createElement(Button,{className:\"btnMain\",width:\"100%\",height:40,justifyContent:\"center\",appearance:\"primary\",textTransform:\"uppercase\",onClick:_this2.back},\"Back\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-4\"},/*#__PURE__*/React.createElement(Button,{className:\"btnMain\",width:\"100%\",height:40,justifyContent:\"center\",appearance:\"primary\",textTransform:\"uppercase\",onClick:function onClick(e){e.preventDefault();submitForm();if(Object.entries(errors).length==0){_this2.props.nextStep(values);}else{toaster.danger('We need you to complete all of the required fields before we can continue',{id:'forbidden-action'});}}},\"Continue\")))));}));}}]);return UserInfo;}(Component);export default UserInfo;","map":{"version":3,"sources":["/Users/ravi/Desktop/tasket_react/src/components/UserInfo.js"],"names":["React","Component","Heading","Text","TextInput","Pane","Checkbox","Button","toaster","Formik","Form","Field","Yup","ReactFlagsSelect","UserInfoSchema","object","shape","email","string","required","emailConfirmation","oneOf","ref","password","min","acceptTerms","boolean","UserInfo","props","back","e","preventDefault","prevStep","state","checked","countryCode","userInfoForm","createRef","basics","noCredit","reader","country","values","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","submitForm","selectedCountryCode","Object","entries","length","nextStep","danger","id"],"mappings":"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","sourcesContent":[" /* eslint-disable */ \nimport React, { Component } from 'react'\nimport { Heading, Text, TextInput, Pane, Checkbox, Button, toaster } from 'evergreen-ui'\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport ReactFlagsSelect from 'react-flags-select'\nimport 'react-flags-select/css/react-flags-select.css'\n\nimport basics from '../img/basics.svg'\nimport noCredit from '../img/no-credit.svg'\nimport reader from '../img/reader.svg'\n\nconst UserInfoSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('The email address you entered does not appear to be valid')\n    .required('Enter the email address you want to use to create your new account'),\n  emailConfirmation: Yup.string()\n    .required('Enter your email address twice to confirm itâ€™s correct')\n    .oneOf([Yup.ref('email')], 'The email addresses you entered do not match'),\n  password: Yup.string()\n    .min(8, 'Your password must be at least 8 characters')\n    .required('Create a password so you can login to your new account'),\n  acceptTerms: Yup.boolean()\n    .oneOf([true], 'Must Accept Terms and Conditions'),\n});\n\nexport class UserInfo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { checked: false, countryCode: 'US' };\n    this.userInfoForm = React.createRef();\n  }\n\n  back = e => {\n    e.preventDefault()\n    this.props.prevStep()\n  };\n\n  render() {\n    return (\n      <div className='signUpForm'>\n        {/* Form Header  */}\n        <div className='signUpHead'>\n          <Heading textAlign='center' fontWeight='400' size={700} is='h2' marginTop='default' marginBottom='10px'>User Info Letâ€™s create your account.</Heading>\n          <Text className='customSubHeading' display='block' textAlign='center' size={400} color='#5f6a7d'>The quick brown fox jumps over the lazy dog Signing up for Elektropay  is fast and free â€” no commitments or long-term contracts.</Text>\n\n          <Pane\n            paddingTop='40px'\n            className='row'\n            display='flex'\n            flexWrap='wrap'\n            justifyContent='space-between'\n          >\n            <div className='col-3'>\n              <div className='signBox'>\n                <img src={basics} alt='' />\n                <Heading textAlign='center' fontWeight='600' size={500} is='h3' marginTop='10px' marginBottom='10px'>Just the basics</Heading>\n                <Text display='block' textAlign='center' size={400} color='#5f6a7d'>Tell us about your business so we can serve you better.</Text>\n              </div>\n            </div>\n            <div className='col-3'>\n              <div className='signBox'>\n                <img src={noCredit} alt='' />\n                <Heading textAlign='center' fontWeight='600' size={500} is='h3' marginTop='10px' marginBottom='10px'>No credit checks</Heading>\n                <Text display='block' textAlign='center' size={400} color='#5f6a7d'>Weâ€™ll need the last four numbers of your SSN to verify your identity.</Text>\n              </div>\n            </div>\n            <div className='col-3'>\n              <div className='signBox'>\n                <img src={reader} alt='' />\n                <Heading textAlign='center' fontWeight='600' size={500} is='h3' marginTop='10px' marginBottom='10px'>Get your free magstripe reader</Heading>\n                <Text display='block' textAlign='center' size={400} color='#5f6a7d'>When youâ€™re done, weâ€™ll drop your free Elektropay Reader for magstripe in the mail.</Text>\n              </div>\n            </div>\n          </Pane>\n        </div>\n\n        {/* Form Body  */}\n        <Formik\n          initialValues={{ email: '', emailConfirmation: '', password: '', country: 'US', acceptTerms: false }}\n          validationSchema={UserInfoSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(false);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n            submitForm,\n          }) => (\n              <form\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n              >\n                <div className='signUpBody'>\n                  <Pane\n                    className='row'\n                    display='flex'\n                    flexWrap='wrap'\n                  >\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Enter your email</Text>\n                      <TextInput\n                        isInvalid={errors.email && touched.email ? true : false}\n                        label='Enter your email'\n                        description='This is a description.'\n                        className=''\n                        height={40}\n                        width='100%'\n                        name='email'\n                        placeholder='you@example.com'\n                        type='email'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n\n                      />\n                      {errors.email && touched.email ? (\n                        <span className=\"error_span\">{errors.email}</span>\n                      ) : null}\n                    </div>\n\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Confirm your email</Text>\n                      <TextInput\n                        isInvalid={errors.emailConfirmation && touched.emailConfirmation ? true : false}\n                        label='Enter your email'\n                        description='This is a description.'\n                        height={40}\n                        width='100%'\n                        name='emailConfirmation'\n                        placeholder='you@example.com'\n                        type='email'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.emailConfirmation}\n                      />\n                      {errors.emailConfirmation && touched.emailConfirmation ? (\n                        <span className=\"error_span\">{errors.emailConfirmation}</span>\n                      ) : null}\n                    </div>\n\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Create a password</Text>\n                      <TextInput\n                        isInvalid={errors.password && touched.password ? true : false}\n                        height={40}\n                        width='100%'\n                        name='password'\n                        placeholder='Password'\n                        type='password'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                      />\n                      {errors.password && touched.password ? (\n                        <span className=\"error_span\">{errors.password}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Country</Text>\n                      <ReactFlagsSelect\n                        name='country'\n                        onSelect={(selectedCountryCode) => {\n                          setFieldValue('country', selectedCountryCode)\n                        }}\n                        defaultCountry='US'\n                        value={values.country}\n                      />\n                    </div>\n                    <div className='col-12'>\n                      <div className=''>\n                        <Field\n                          type=\"checkbox\"\n                          name=\"acceptTerms\"\n                          className={'form-check-input ' + (errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : '')}\n                        />\n                        <label className='disclaimer'>I agree to Elektropay <a target='' href=''>Terms</a>, <a href=''>Privacy Policy</a>, and <a href=''>E-Sign Consent</a>.\n                        </label>\n                      </div>\n                    </div>\n                  </Pane>\n                </div>\n                <div className='signUpFooter'>\n                 {/* <Pane\n                    className='row'\n                    display='flex'\n                    alignItems='center'\n                    flexWrap='wrap'\n                  >\n                    <div className='col-6 textAlign'>\n                      <Text size={400} lineHeight='23px' fontWeight='400'>Already have a Elektropay account?\n                        <a className='signIn' href=''> Sign in.</a>\n                      </Text>\n                    </div>\n                  </Pane>*/}\n                  <Pane\n                    className='row'\n                    display='flex'\n                    alignItems='center'\n                    flexWrap='wrap'\n                    justifyContent='space-between'\n                  >\n                      <div className='col-4 textAlign'>\n                        <Button className='btnMain' width='100%' height={40} justifyContent='center' appearance='primary' textTransform='uppercase' onClick={this.back}>Back</Button>\n                      </div>\n\n                      <div className='col-4'>\n                        <Button\n                          className='btnMain'\n                          width='100%'\n                          height={40}\n                          justifyContent='center'\n                          appearance='primary'\n                          textTransform='uppercase'\n                          onClick={(e) => {\n                            e.preventDefault();\n                            submitForm();\n                            if (Object.entries(errors).length == 0) {\n                              this.props.nextStep(values);\n                            } else {\n                              toaster.danger(\n                                'We need you to complete all of the required fields before we can continue',\n                                { id: 'forbidden-action' }\n                              )\n                            }\n                          }}\n                        >\n                          Continue\n                      </Button>\n                      </div>\n                  </Pane>\n                </div>\n              </form>\n            )}\n        </Formik>\n      </div>\n    )\n  }\n}\n\nexport default UserInfo\n"]},"metadata":{},"sourceType":"module"}