{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport MenuItem from './MenuItem';\nimport MenuDivider from './MenuDivider';\nimport MenuGroup from './MenuGroup';\nimport MenuOption from './MenuOption';\nimport MenuOptionsGroup from './MenuOptionsGroup';\n\nvar Menu = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Menu, _React$PureComponent);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onMenuRef\", function (ref) {\n      _this.menuRef = ref;\n    });\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this; // Get the menu item buttons\n      // eslint-disable-next-line unicorn/prefer-spread\n\n\n      this.menuItems = Array.from(this.menuRef.querySelectorAll('[role=\"menuitemradio\"], [role=\"menuitem\"]'));\n\n      if (this.menuItems.length === 0) {\n        throw new Error('The menu has no menu items');\n      }\n\n      this.firstItem = this.menuItems[0];\n      this.lastItem = this.menuItems[this.menuItems.length - 1];\n\n      var focusNext = function focusNext(currentItem, startItem) {\n        // Determine which item is the startItem (first or last)\n        var goingDown = startItem === _this2.firstItem; // Helper function for getting next legitimate element\n\n        var move = function move(elem) {\n          var indexOfItem = _this2.menuItems.indexOf(elem);\n\n          if (goingDown) {\n            if (indexOfItem < _this2.menuItems.length - 1) {\n              return _this2.menuItems[indexOfItem + 1];\n            }\n\n            return startItem;\n          }\n\n          if (indexOfItem - 1 > -1) {\n            return _this2.menuItems[indexOfItem - 1];\n          }\n\n          return startItem;\n        }; // Make first move\n\n\n        var nextItem = move(currentItem); // If the menuitem is disabled move on\n\n        while (nextItem.disabled) {\n          nextItem = move(nextItem);\n        } // Focus the first one that's not disabled\n\n\n        nextItem.focus();\n      };\n\n      this.menuItems.forEach(function (menuItem) {\n        // Handle key presses for menuItem\n        menuItem.addEventListener('keydown', function (e) {\n          // Go to next/previous item if it exists\n          // or loop around\n          if (e.key === 'ArrowDown') {\n            e.preventDefault();\n            focusNext(menuItem, _this2.firstItem);\n          }\n\n          if (e.key === 'ArrowUp') {\n            e.preventDefault();\n            focusNext(menuItem, _this2.lastItem);\n          }\n\n          if (e.key === 'Home') {\n            e.preventDefault();\n\n            _this2.firstItem.focus();\n          }\n\n          if (e.key === 'End') {\n            e.preventDefault();\n\n            _this2.lastItem.focus();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(Pane, {\n        is: \"nav\",\n        innerRef: this.onMenuRef,\n        role: \"menu\",\n        outline: \"none\"\n      }, children);\n    }\n  }]);\n\n  return Menu;\n}(React.PureComponent);\n\nMenu.displayName = \"Menu\";\n\n_defineProperty(Menu, \"Item\", MenuItem);\n\n_defineProperty(Menu, \"Divider\", MenuDivider);\n\n_defineProperty(Menu, \"Group\", MenuGroup);\n\n_defineProperty(Menu, \"Option\", MenuOption);\n\n_defineProperty(Menu, \"OptionsGroup\", MenuOptionsGroup);\n\n_defineProperty(Menu, \"propTypes\", {\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node\n});\n\nexport { Menu as default };","map":{"version":3,"sources":["../../../src/menu/src/Menu.js"],"names":["Menu","React","PureComponent","MenuItem","MenuDivider","MenuGroup","MenuOption","MenuOptionsGroup","children","PropTypes","node","Array","focusNext","goingDown","startItem","move","indexOfItem","nextItem","menuItem","e"],"mappings":";;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,IAAA,QAAA,cAAA;AACA,OAAA,QAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,OAAA,UAAA,MAAA,cAAA;AACA,OAAA,gBAAA,MAAA,oBAAA;;IAEqBA,I;;;;;;;;;;;;;;;;gEAgGP,UAAA,GAAA,EAAO;AACjB,MAAA,KAAA,CAAA,OAAA,GAAA,GAAA;;;;;;;;wCA/EkB;AAAA,UAAA,MAAA,GAAA,IAAA,CAAA,CAClB;AACA;;;AACA,WAAA,SAAA,GAAiBW,KAAK,CAALA,IAAAA,CACf,KAAA,OAAA,CAAA,gBAAA,CADF,2CACE,CADeA,CAAjB;;AAIA,UAAI,KAAA,SAAA,CAAA,MAAA,KAAJ,CAAA,EAAiC;AAC/B,cAAM,IAAA,KAAA,CAAN,4BAAM,CAAN;AACD;;AAED,WAAA,SAAA,GAAiB,KAAA,SAAA,CAAjB,CAAiB,CAAjB;AACA,WAAA,QAAA,GAAgB,KAAA,SAAA,CAAe,KAAA,SAAA,CAAA,MAAA,GAA/B,CAAgB,CAAhB;;AAEA,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,WAAA,EAAA,SAAA,EAA4B;AAC5C;AACA,YAAMC,SAAS,GAAGC,SAAS,KAAK,MAAI,CAFQ,SAE5C,CAF4C,CAI5C;;AACA,YAAMC,IAAI,GAAG,SAAPA,IAAO,CAAA,IAAA,EAAQ;AACnB,cAAMC,WAAW,GAAG,MAAI,CAAJ,SAAA,CAAA,OAAA,CAApB,IAAoB,CAApB;;AAEA,cAAA,SAAA,EAAe;AACb,gBAAIA,WAAW,GAAG,MAAI,CAAJ,SAAA,CAAA,MAAA,GAAlB,CAAA,EAA6C;AAC3C,qBAAO,MAAI,CAAJ,SAAA,CAAeA,WAAW,GAAjC,CAAO,CAAP;AACD;;AAED,mBAAA,SAAA;AACD;;AAED,cAAIA,WAAW,GAAXA,CAAAA,GAAkB,CAAtB,CAAA,EAA0B;AACxB,mBAAO,MAAI,CAAJ,SAAA,CAAeA,WAAW,GAAjC,CAAO,CAAP;AACD;;AAED,iBAAA,SAAA;AApB0C,SAK5C,CAL4C,CAuB5C;;;AACA,YAAIC,QAAQ,GAAGF,IAAI,CAxByB,WAwBzB,CAAnB,CAxB4C,CA0B5C;;AACA,eAAOE,QAAQ,CAAf,QAAA,EAA0B;AACxBA,UAAAA,QAAQ,GAAGF,IAAI,CAAfE,QAAe,CAAfA;AA5B0C,SAAA,CA+B5C;;;AACAA,QAAAA,QAAQ,CAARA,KAAAA;AAhCF,OAAA;;AAmCA,WAAA,SAAA,CAAA,OAAA,CAAuB,UAAA,QAAA,EAAY;AACjC;AACAC,QAAAA,QAAQ,CAARA,gBAAAA,CAAAA,SAAAA,EAAqC,UAAA,CAAA,EAAK;AACxC;AACA;AAEA,cAAIC,CAAC,CAADA,GAAAA,KAAJ,WAAA,EAA2B;AACzBA,YAAAA,CAAC,CAADA,cAAAA;AACAP,YAAAA,SAAS,CAAA,QAAA,EAAW,MAAI,CAAxBA,SAAS,CAATA;AACD;;AAED,cAAIO,CAAC,CAADA,GAAAA,KAAJ,SAAA,EAAyB;AACvBA,YAAAA,CAAC,CAADA,cAAAA;AACAP,YAAAA,SAAS,CAAA,QAAA,EAAW,MAAI,CAAxBA,QAAS,CAATA;AACD;;AAED,cAAIO,CAAC,CAADA,GAAAA,KAAJ,MAAA,EAAsB;AACpBA,YAAAA,CAAC,CAADA,cAAAA;;AACA,YAAA,MAAI,CAAJ,SAAA,CAAA,KAAA;AACD;;AAED,cAAIA,CAAC,CAADA,GAAAA,KAAJ,KAAA,EAAqB;AACnBA,YAAAA,CAAC,CAADA,cAAAA;;AACA,YAAA,MAAI,CAAJ,QAAA,CAAA,KAAA;AACD;AAtBHD,SAAAA;AAFF,OAAA;AA2BD;;;6BAMQ;AAAA,UACCV,QADD,GACc,KADd,KACc,CADd,QAAA;AAEP,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,QAAA,EAAE,EAAR,KAAA;AAAe,QAAA,QAAQ,EAAE,KAAzB,SAAA;AAAyC,QAAA,IAAI,EAA7C,MAAA;AAAqD,QAAA,OAAO,EAAC;AAA7D,OAAA,EADF,QACE,CADF;AAKD;;;;EA3G+BP,KAAK,CAACC,a;;AAAnBF,I,YAAAA,G,MAAAA;;gBAAAA,I,UACLG,Q;;gBADKH,I,aAGFI,W;;gBAHEJ,I,WAKJK,S;;gBALIL,I,YAOHM,U;;gBAPGN,I,kBASGO,gB;;gBATHP,I,eAWA;AACjB;;;AAGAQ,EAAAA,QAAQ,EAAEC,SAAS,CAACC;AAJH,C;;SAXAV,I","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport MenuItem from './MenuItem'\nimport MenuDivider from './MenuDivider'\nimport MenuGroup from './MenuGroup'\nimport MenuOption from './MenuOption'\nimport MenuOptionsGroup from './MenuOptionsGroup'\n\nexport default class Menu extends React.PureComponent {\n  static Item = MenuItem\n\n  static Divider = MenuDivider\n\n  static Group = MenuGroup\n\n  static Option = MenuOption\n\n  static OptionsGroup = MenuOptionsGroup\n\n  static propTypes = {\n    /**\n     * The children of the component.\n     */\n    children: PropTypes.node\n  }\n\n  componentDidMount() {\n    // Get the menu item buttons\n    // eslint-disable-next-line unicorn/prefer-spread\n    this.menuItems = Array.from(\n      this.menuRef.querySelectorAll('[role=\"menuitemradio\"], [role=\"menuitem\"]')\n    )\n\n    if (this.menuItems.length === 0) {\n      throw new Error('The menu has no menu items')\n    }\n\n    this.firstItem = this.menuItems[0]\n    this.lastItem = this.menuItems[this.menuItems.length - 1]\n\n    const focusNext = (currentItem, startItem) => {\n      // Determine which item is the startItem (first or last)\n      const goingDown = startItem === this.firstItem\n\n      // Helper function for getting next legitimate element\n      const move = elem => {\n        const indexOfItem = this.menuItems.indexOf(elem)\n\n        if (goingDown) {\n          if (indexOfItem < this.menuItems.length - 1) {\n            return this.menuItems[indexOfItem + 1]\n          }\n\n          return startItem\n        }\n\n        if (indexOfItem - 1 > -1) {\n          return this.menuItems[indexOfItem - 1]\n        }\n\n        return startItem\n      }\n\n      // Make first move\n      let nextItem = move(currentItem)\n\n      // If the menuitem is disabled move on\n      while (nextItem.disabled) {\n        nextItem = move(nextItem)\n      }\n\n      // Focus the first one that's not disabled\n      nextItem.focus()\n    }\n\n    this.menuItems.forEach(menuItem => {\n      // Handle key presses for menuItem\n      menuItem.addEventListener('keydown', e => {\n        // Go to next/previous item if it exists\n        // or loop around\n\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          focusNext(menuItem, this.firstItem)\n        }\n\n        if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          focusNext(menuItem, this.lastItem)\n        }\n\n        if (e.key === 'Home') {\n          e.preventDefault()\n          this.firstItem.focus()\n        }\n\n        if (e.key === 'End') {\n          e.preventDefault()\n          this.lastItem.focus()\n        }\n      })\n    })\n  }\n\n  onMenuRef = ref => {\n    this.menuRef = ref\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <Pane is=\"nav\" innerRef={this.onMenuRef} role=\"menu\" outline=\"none\">\n        {children}\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}