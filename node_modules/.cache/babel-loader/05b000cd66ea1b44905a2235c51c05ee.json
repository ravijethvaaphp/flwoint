{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport { css } from 'glamor';\nimport PropTypes from 'prop-types';\nimport { StackingOrder } from '../../constants';\nimport Toast from './Toast';\nvar wrapperClass = css({\n  maxWidth: 560,\n  margin: '0 auto',\n  top: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  zIndex: StackingOrder.TOASTER,\n  pointerEvents: 'none'\n});\n\nvar hasCustomId = function hasCustomId(settings) {\n  return Object.hasOwnProperty.call(settings, 'id');\n};\n\nvar ToastManager = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ToastManager, _React$PureComponent);\n\n  function ToastManager(props, context) {\n    var _this;\n\n    _classCallCheck(this, ToastManager);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToastManager).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"getToasts\", function () {\n      return _this.state.toasts;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeAll\", function () {\n      _this.getToasts().forEach(function (toast) {\n        return toast.close();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"remove\", function (id) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.state.toasts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var toast = _step.value; // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n\n          if (String(toast.id).startsWith(id)) {\n            _this.closeToast(toast.id);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"notify\", function (title, settings) {\n      // If there's a custom toast ID passed, close existing toasts with the same custom ID\n      if (hasCustomId(settings)) {\n        _this.remove(settings.id);\n      }\n\n      var instance = _this.createToastInstance(title, settings);\n\n      _this.setState(function (previousState) {\n        return {\n          toasts: [instance].concat(_toConsumableArray(previousState.toasts))\n        };\n      });\n\n      return instance;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createToastInstance\", function (title, settings) {\n      var uniqueId = ++ToastManager.idCounter;\n      var id = hasCustomId(settings) ? \"\".concat(settings.id, \"-\").concat(uniqueId) : uniqueId;\n      return {\n        id: id,\n        title: title,\n        description: settings.description,\n        hasCloseButton: settings.hasCloseButton || true,\n        duration: settings.duration || 5,\n        close: function close() {\n          return _this.closeToast(id);\n        },\n        intent: settings.intent\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeToast\", function (id) {\n      _this.setState(function (previousState) {\n        return {\n          toasts: previousState.toasts.map(function (toast) {\n            if (toast.id === id) {\n              return _objectSpread({}, toast, {\n                isShown: false\n              });\n            }\n\n            return toast;\n          })\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeToast\", function (id) {\n      _this.setState(function (previousState) {\n        return {\n          toasts: previousState.toasts.filter(function (toast) {\n            return toast.id !== id;\n          })\n        };\n      });\n    });\n\n    props.bindNotify(_this.notify);\n    props.bindRemove(_this.remove);\n    props.bindGetToasts(_this.getToasts);\n    props.bindCloseAll(_this.closeAll);\n    _this.state = {\n      toasts: []\n    };\n    return _this;\n  }\n\n  _createClass(ToastManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"span\", {\n        className: wrapperClass\n      }, this.state.toasts.map(function (_ref) {\n        var id = _ref.id,\n            description = _ref.description,\n            props = _objectWithoutProperties(_ref, [\"id\", \"description\"]);\n\n        return React.createElement(Toast, _extends({\n          key: id,\n          onRemove: function onRemove() {\n            return _this2.removeToast(id);\n          }\n        }, props), description);\n      }));\n    }\n  }]);\n\n  return ToastManager;\n}(React.PureComponent);\n\nToastManager.displayName = \"ToastManager\";\n\n_defineProperty(ToastManager, \"propTypes\", {\n  /**\n   * Function called with the `this.notify` function.\n   */\n  bindNotify: PropTypes.func.isRequired,\n\n  /**\n   * Function called with the `this.remove` function.\n   */\n  bindRemove: PropTypes.func.isRequired,\n\n  /**\n   * Function called with the `this.getToasts` function.\n   */\n  bindGetToasts: PropTypes.func.isRequired,\n\n  /**\n   * Function called with the `this.closeAll` function.\n   */\n  bindCloseAll: PropTypes.func.isRequired\n});\n\n_defineProperty(ToastManager, \"idCounter\", 0);\n\nexport { ToastManager as default };","map":{"version":3,"sources":["../../../src/toaster/src/ToastManager.js"],"names":["wrapperClass","css","maxWidth","margin","top","left","right","position","zIndex","StackingOrder","pointerEvents","hasCustomId","Object","ToastManager","React","PureComponent","bindNotify","PropTypes","bindRemove","bindGetToasts","bindCloseAll","isRequired","props","toasts","toast","String","settings","instance","previousState","uniqueId","id","title","description","hasCloseButton","duration","close","intent","isShown"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport { StackingOrder } from '../../constants'\nimport Toast from './Toast'\n\nconst wrapperClass = css({\n  maxWidth: 560,\n  margin: '0 auto',\n  top: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  zIndex: StackingOrder.TOASTER,\n  pointerEvents: 'none'\n})\n\nconst hasCustomId = settings => Object.hasOwnProperty.call(settings, 'id')\n\nexport default class ToastManager extends React.PureComponent {\n  static propTypes = {\n    /**\n     * Function called with the `this.notify` function.\n     */\n    bindNotify: PropTypes.func.isRequired,\n\n    /**\n     * Function called with the `this.remove` function.\n     */\n    bindRemove: PropTypes.func.isRequired,\n\n    /**\n     * Function called with the `this.getToasts` function.\n     */\n    bindGetToasts: PropTypes.func.isRequired,\n\n    /**\n     * Function called with the `this.closeAll` function.\n     */\n    bindCloseAll: PropTypes.func.isRequired\n  }\n\n  static idCounter = 0\n\n  constructor(props, context) {\n    super(props, context)\n\n    props.bindNotify(this.notify)\n    props.bindRemove(this.remove)\n    props.bindGetToasts(this.getToasts)\n    props.bindCloseAll(this.closeAll)\n\n    this.state = {\n      toasts: []\n    }\n  }\n\n  getToasts = () => {\n    return this.state.toasts\n  }\n\n  closeAll = () => {\n    this.getToasts().forEach(toast => toast.close())\n  }\n\n  remove = id => {\n    for (const toast of this.state.toasts) {\n      // Since unique ID is still appended to a custom ID, skip the unique ID and check only prefix\n      if (String(toast.id).startsWith(id)) {\n        this.closeToast(toast.id)\n      }\n    }\n  }\n\n  notify = (title, settings) => {\n    // If there's a custom toast ID passed, close existing toasts with the same custom ID\n    if (hasCustomId(settings)) {\n      this.remove(settings.id)\n    }\n\n    const instance = this.createToastInstance(title, settings)\n\n    this.setState(previousState => {\n      return {\n        toasts: [instance, ...previousState.toasts]\n      }\n    })\n\n    return instance\n  }\n\n  createToastInstance = (title, settings) => {\n    const uniqueId = ++ToastManager.idCounter\n    const id = hasCustomId(settings) ? `${settings.id}-${uniqueId}` : uniqueId\n\n    return {\n      id,\n      title,\n      description: settings.description,\n      hasCloseButton: settings.hasCloseButton || true,\n      duration: settings.duration || 5,\n      close: () => this.closeToast(id),\n      intent: settings.intent\n    }\n  }\n\n  /**\n   * This will set isShown on the Toast which will close the toast.\n   * It won't remove the toast until onExited triggers onRemove.\n   */\n  closeToast = id => {\n    this.setState(previousState => {\n      return {\n        toasts: previousState.toasts.map(toast => {\n          if (toast.id === id) {\n            return {\n              ...toast,\n              isShown: false\n            }\n          }\n\n          return toast\n        })\n      }\n    })\n  }\n\n  removeToast = id => {\n    this.setState(previousState => {\n      return {\n        toasts: previousState.toasts.filter(toast => toast.id !== id)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <span className={wrapperClass}>\n        {this.state.toasts.map(({ id, description, ...props }) => {\n          return (\n            <Toast key={id} onRemove={() => this.removeToast(id)} {...props}>\n              {description}\n            </Toast>\n          )\n        })}\n      </span>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}