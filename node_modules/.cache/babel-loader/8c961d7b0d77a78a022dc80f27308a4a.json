{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Pane } from '../../layers';\nimport { Text } from '../../typography';\nimport { Icon } from '../../icon';\nimport { withTheme } from '../../theme';\nimport safeInvoke from '../../lib/safe-invoke';\nimport warning from '../../lib/warning';\n\nvar MenuItem = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MenuItem, _React$PureComponent);\n\n  function MenuItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (event) {\n      _this.props.onSelect(event);\n      /* eslint-disable react/prop-types */\n\n\n      safeInvoke(_this.props.onClick, event);\n      /* eslint-enable react/prop-types */\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyPress\", function (event) {\n      if (event.key === 'Enter' || event.key === ' ') {\n        _this.props.onSelect(event);\n\n        event.preventDefault();\n      }\n      /* eslint-disable react/prop-types */\n\n\n      safeInvoke(_this.props.onKeyPress, event);\n      /* eslint-enable react/prop-types */\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          is = _this$props.is,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          appearance = _this$props.appearance,\n          secondaryText = _this$props.secondaryText,\n          intent = _this$props.intent,\n          icon = _this$props.icon,\n          passthroughProps = _objectWithoutProperties(_this$props, [\"is\", \"children\", \"theme\", \"appearance\", \"secondaryText\", \"intent\", \"icon\"]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning('onClick' in this.props, '<Menu.Item> expects `onSelect` prop, but you passed `onClick`.');\n      }\n\n      var themedClassName = theme.getMenuItemClassName(appearance, 'none');\n      return React.createElement(Pane, _extends({\n        is: is,\n        role: \"menuitem\",\n        className: themedClassName,\n        onClick: this.handleClick,\n        onKeyPress: this.handleKeyPress,\n        height: icon ? 40 : 32,\n        tabIndex: 0,\n        \"data-isselectable\": \"true\",\n        display: \"flex\",\n        alignItems: \"center\"\n      }, passthroughProps), icon && React.createElement(Icon, {\n        color: intent === 'none' ? 'default' : intent,\n        icon: icon,\n        marginLeft: 16,\n        marginRight: -4,\n        size: 16,\n        flexShrink: 0\n      }), React.createElement(Text, {\n        color: intent,\n        marginLeft: 16,\n        marginRight: 16,\n        flex: 1\n      }, children), secondaryText && React.createElement(Text, {\n        marginRight: 16,\n        color: \"muted\"\n      }, secondaryText));\n    }\n  }]);\n\n  return MenuItem;\n}(React.PureComponent);\n\nMenuItem.displayName = \"MenuItem\";\n\n_defineProperty(MenuItem, \"propTypes\", {\n  /**\n   * Element type to use for the menu item.\n   * For example: `<MenuItem is={ReactRouterLink}>...</MenuItem>`\n   */\n  is: Box.propTypes.is,\n\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * The icon before the label.\n   */\n  icon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element, PropTypes.string]),\n\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Secondary text shown on the right.\n   */\n  secondaryText: PropTypes.node,\n\n  /**\n   * The default theme only supports one default appearance.\n   */\n  appearance: PropTypes.string.isRequired,\n\n  /**\n   * The intent of the menu item.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n});\n\n_defineProperty(MenuItem, \"defaultProps\", {\n  is: 'div',\n  intent: 'none',\n  appearance: 'default',\n  onSelect: function onSelect() {}\n});\n\nexport default withTheme(MenuItem);","map":{"version":3,"sources":["../../../src/menu/src/MenuItem.js"],"names":["MenuItem","React","PureComponent","is","Box","onSelect","PropTypes","icon","children","secondaryText","appearance","intent","theme","isRequired","safeInvoke","event","passthroughProps","process","warning","themedClassName","withTheme"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { Pane } from '../../layers'\nimport { Text } from '../../typography'\nimport { Icon } from '../../icon'\nimport { withTheme } from '../../theme'\nimport safeInvoke from '../../lib/safe-invoke'\nimport warning from '../../lib/warning'\n\nclass MenuItem extends React.PureComponent {\n  static propTypes = {\n    /**\n     * Element type to use for the menu item.\n     * For example: `<MenuItem is={ReactRouterLink}>...</MenuItem>`\n     */\n    is: Box.propTypes.is,\n\n    /**\n     * Function that is called on click and enter/space keypress.\n     */\n    onSelect: PropTypes.func,\n\n    /**\n     * The icon before the label.\n     */\n    icon: PropTypes.oneOfType([\n      PropTypes.elementType,\n      PropTypes.element,\n      PropTypes.string\n    ]),\n\n    /**\n     * The children of the component.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Secondary text shown on the right.\n     */\n    secondaryText: PropTypes.node,\n\n    /**\n     * The default theme only supports one default appearance.\n     */\n    appearance: PropTypes.string.isRequired,\n\n    /**\n     * The intent of the menu item.\n     */\n    intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger'])\n      .isRequired,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    is: 'div',\n    intent: 'none',\n    appearance: 'default',\n    onSelect: () => {}\n  }\n\n  handleClick = event => {\n    this.props.onSelect(event)\n\n    /* eslint-disable react/prop-types */\n    safeInvoke(this.props.onClick, event)\n    /* eslint-enable react/prop-types */\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      this.props.onSelect(event)\n      event.preventDefault()\n    }\n\n    /* eslint-disable react/prop-types */\n    safeInvoke(this.props.onKeyPress, event)\n    /* eslint-enable react/prop-types */\n  }\n\n  render() {\n    const {\n      is,\n      children,\n      theme,\n      appearance,\n      secondaryText,\n      intent,\n      icon,\n      ...passthroughProps\n    } = this.props\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        'onClick' in this.props,\n        '<Menu.Item> expects `onSelect` prop, but you passed `onClick`.'\n      )\n    }\n\n    const themedClassName = theme.getMenuItemClassName(appearance, 'none')\n\n    return (\n      <Pane\n        is={is}\n        role=\"menuitem\"\n        className={themedClassName}\n        onClick={this.handleClick}\n        onKeyPress={this.handleKeyPress}\n        height={icon ? 40 : 32}\n        tabIndex={0}\n        data-isselectable=\"true\"\n        display=\"flex\"\n        alignItems=\"center\"\n        {...passthroughProps}\n      >\n        {icon && (\n          <Icon\n            color={intent === 'none' ? 'default' : intent}\n            icon={icon}\n            marginLeft={16}\n            marginRight={-4}\n            size={16}\n            flexShrink={0}\n          />\n        )}\n        <Text color={intent} marginLeft={16} marginRight={16} flex={1}>\n          {children}\n        </Text>\n        {secondaryText && (\n          <Text marginRight={16} color=\"muted\">\n            {secondaryText}\n          </Text>\n        )}\n      </Pane>\n    )\n  }\n}\n\nexport default withTheme(MenuItem)\n"]},"metadata":{},"sourceType":"module"}