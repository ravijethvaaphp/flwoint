{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { dimensions, spacing, position, layout } from 'ui-box';\nimport { Text } from '../../typography';\nimport { CaretDownIcon } from '../../icons';\nimport { withTheme } from '../../theme';\n\nvar Select = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Select, _PureComponent);\n\n  function Select() {\n    _classCallCheck(this, Select);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Select).apply(this, arguments));\n  }\n\n  _createClass(Select, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          id = _this$props.id,\n          name = _this$props.name,\n          height = _this$props.height,\n          children = _this$props.children,\n          defaultValue = _this$props.defaultValue,\n          disabled = _this$props.disabled,\n          onChange = _this$props.onChange,\n          value = _this$props.value,\n          required = _this$props.required,\n          autoFocus = _this$props.autoFocus,\n          isInvalid = _this$props.isInvalid,\n          appearance = _this$props.appearance,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"id\", \"name\", \"height\", \"children\", \"defaultValue\", \"disabled\", \"onChange\", \"value\", \"required\", \"autoFocus\", \"isInvalid\", \"appearance\"]);\n\n      var themedClassName = theme.getSelectClassName(appearance);\n      var textSize = theme.getTextSizeForControlHeight(height);\n      var borderRadius = theme.getBorderRadiusForControlHeight(height);\n      var iconSize = theme.getIconSizeForSelect(height);\n      var iconMargin = height >= 36 ? 12 : 8;\n      return React.createElement(Box, _extends({\n        display: \"inline-flex\",\n        flex: 1,\n        position: \"relative\",\n        width: \"auto\",\n        height: height\n      }, props), React.createElement(Text, {\n        is: \"select\",\n        className: themedClassName,\n        id: id,\n        name: name,\n        onChange: onChange,\n        defaultValue: defaultValue,\n        value: value,\n        required: required,\n        autoFocus: autoFocus,\n        disabled: disabled,\n        \"aria-invalid\": String(isInvalid),\n        size: textSize,\n        borderRadius: borderRadius,\n        textTransform: \"default\",\n        paddingLeft: Math.round(height / 3.2) // Provide enough space for auto-sizing select including the icon\n        ,\n        paddingRight: iconMargin * 2 + iconSize\n      }, children), React.createElement(CaretDownIcon, {\n        color: \"default\",\n        size: iconSize,\n        position: \"absolute\",\n        top: \"50%\",\n        marginTop: -iconSize / 2,\n        right: iconMargin,\n        pointerEvents: \"none\"\n      }));\n    }\n  }]);\n\n  return Select;\n}(PureComponent);\n\nSelect.displayName = \"Select\";\n\n_defineProperty(Select, \"propTypes\", _objectSpread({}, dimensions.propTypes, {}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes, {\n  /**\n   * The id attribute for the select.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute for the select.\n   */\n  name: PropTypes.string,\n\n  /**\n   * The options that are passed to the select.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The initial value of an uncontrolled select\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * Function called when value changes.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the select.\n   */\n  value: PropTypes.any,\n\n  /**\n   * When true, the select is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * When true, the select should auto focus.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When true, the select is invalid.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the select. The default theme only supports default.\n   */\n  appearance: PropTypes.string.isRequired,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n}));\n\n_defineProperty(Select, \"defaultProps\", {\n  appearance: 'default',\n  height: 32,\n  isInvalid: false\n});\n\nexport default withTheme(Select);","map":{"version":3,"sources":["../../../src/select/src/Select.js"],"names":["Select","PureComponent","dimensions","propTypes","spacing","position","layout","id","PropTypes","string","name","children","node","defaultValue","any","onChange","func","value","required","bool","autoFocus","isInvalid","appearance","isRequired","theme","height","disabled","props","themedClassName","textSize","borderRadius","iconSize","iconMargin","String","Math","withTheme"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { dimensions, spacing, position, layout } from 'ui-box'\nimport { Text } from '../../typography'\nimport { CaretDownIcon } from '../../icons'\nimport { withTheme } from '../../theme'\n\nclass Select extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the dimensions spec from the Box primitive.\n     */\n    ...dimensions.propTypes,\n\n    /**\n     * Composes the spacing spec from the Box primitive.\n     */\n    ...spacing.propTypes,\n\n    /**\n     * Composes the position spec from the Box primitive.\n     */\n    ...position.propTypes,\n\n    /**\n     * Composes the layout spec from the Box primitive.\n     */\n    ...layout.propTypes,\n\n    /**\n     * The id attribute for the select.\n     */\n    id: PropTypes.string,\n\n    /**\n     * The name attribute for the select.\n     */\n    name: PropTypes.string,\n\n    /**\n     * The options that are passed to the select.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The initial value of an uncontrolled select\n     */\n    defaultValue: PropTypes.any,\n\n    /**\n     * Function called when value changes.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * The value of the select.\n     */\n    value: PropTypes.any,\n\n    /**\n     * When true, the select is required.\n     */\n    required: PropTypes.bool,\n\n    /**\n     * When true, the select should auto focus.\n     */\n    autoFocus: PropTypes.bool,\n\n    /**\n     * When true, the select is invalid.\n     */\n    isInvalid: PropTypes.bool,\n\n    /**\n     * The appearance of the select. The default theme only supports default.\n     */\n    appearance: PropTypes.string.isRequired,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    appearance: 'default',\n    height: 32,\n    isInvalid: false\n  }\n\n  render() {\n    const {\n      theme,\n\n      id,\n      name,\n      height,\n      children,\n      defaultValue,\n      disabled,\n      onChange,\n      value,\n      required,\n      autoFocus,\n      isInvalid,\n      appearance,\n      ...props\n    } = this.props\n\n    const themedClassName = theme.getSelectClassName(appearance)\n    const textSize = theme.getTextSizeForControlHeight(height)\n    const borderRadius = theme.getBorderRadiusForControlHeight(height)\n    const iconSize = theme.getIconSizeForSelect(height)\n    const iconMargin = height >= 36 ? 12 : 8\n\n    return (\n      <Box\n        display=\"inline-flex\"\n        flex={1}\n        position=\"relative\"\n        width=\"auto\"\n        height={height}\n        {...props}\n      >\n        <Text\n          is=\"select\"\n          className={themedClassName}\n          id={id}\n          name={name}\n          onChange={onChange}\n          defaultValue={defaultValue}\n          value={value}\n          required={required}\n          autoFocus={autoFocus}\n          disabled={disabled}\n          aria-invalid={String(isInvalid)}\n          size={textSize}\n          borderRadius={borderRadius}\n          textTransform=\"default\"\n          paddingLeft={Math.round(height / 3.2)}\n          // Provide enough space for auto-sizing select including the icon\n          paddingRight={iconMargin * 2 + iconSize}\n        >\n          {children}\n        </Text>\n        <CaretDownIcon\n          color=\"default\"\n          size={iconSize}\n          position=\"absolute\"\n          top=\"50%\"\n          marginTop={-iconSize / 2}\n          right={iconMargin}\n          pointerEvents=\"none\"\n        />\n      </Box>\n    )\n  }\n}\n\nexport default withTheme(Select)\n"]},"metadata":{},"sourceType":"module"}