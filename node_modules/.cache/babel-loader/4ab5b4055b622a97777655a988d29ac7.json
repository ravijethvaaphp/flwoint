{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ScrollbarSize = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ScrollbarSize, _PureComponent);\n\n  function ScrollbarSize() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ScrollbarSize);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScrollbarSize)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      innerWidth: null,\n      outerWidth: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOuterRef\", function (ref) {\n      _this.outerRef = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInnerRef\", function (ref) {\n      _this.innerRef = ref;\n    });\n\n    return _this;\n  }\n\n  _createClass(ScrollbarSize, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var innerWidth = this.innerRef.getBoundingClientRect().width;\n      var outerWidth = this.outerRef.getBoundingClientRect().width;\n      this.setState({\n        innerWidth: innerWidth,\n        outerWidth: outerWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.innerWidth && this.state.outerWidth) {\n        this.props.handleScrollbarSize(this.state.outerWidth - this.state.innerWidth);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        ref: this.handleOuterRef,\n        \"aria-hidden\": true,\n        style: {\n          position: 'fixed',\n          top: -500,\n          left: -500,\n          width: 100,\n          overflowY: 'scroll'\n        }\n      }, React.createElement(\"div\", {\n        ref: this.handleInnerRef\n      }));\n    }\n  }]);\n\n  return ScrollbarSize;\n}(PureComponent);\n\nScrollbarSize.displayName = \"ScrollbarSize\";\n\n_defineProperty(ScrollbarSize, \"propTypes\", {\n  /**\n   * Returns the size of the scrollbar by creating a hidden fixed div.\n   */\n  handleScrollbarSize: PropTypes.func\n});\n\n_defineProperty(ScrollbarSize, \"defaultProps\", {\n  handleScrollbarSize: function handleScrollbarSize() {}\n});\n\nexport { ScrollbarSize as default };","map":{"version":3,"sources":["../../../src/table/src/ScrollbarSize.js"],"names":["ScrollbarSize","PureComponent","handleScrollbarSize","PropTypes","func","innerWidth","outerWidth","position","top","left","width","overflowY","handleInnerRef"],"mappings":";;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;;IAEqBA,a;;;;;;;;;;;;;;;;4DAYX;AACNK,MAAAA,UAAU,EADJ,IAAA;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;qEAsBS,UAAA,GAAA,EAAO;AACtB,MAAA,KAAA,CAAA,QAAA,GAAA,GAAA;;;qEAGe,UAAA,GAAA,EAAO;AACtB,MAAA,KAAA,CAAA,QAAA,GAAA,GAAA;;;;;;;;wCAtBkB;AAClB,UAAMD,UAAU,GAAG,KAAA,QAAA,CAAA,qBAAA,GAAnB,KAAA;AACA,UAAMC,UAAU,GAAG,KAAA,QAAA,CAAA,qBAAA,GAAnB,KAAA;AACA,WAAA,QAAA,CAAc;AACZD,QAAAA,UAAU,EADE,UAAA;AAEZC,QAAAA,UAAU,EAAVA;AAFY,OAAd;AAID;;;yCAEoB;AACnB,UAAI,KAAA,KAAA,CAAA,UAAA,IAAyB,KAAA,KAAA,CAA7B,UAAA,EAAoD;AAClD,aAAA,KAAA,CAAA,mBAAA,CACE,KAAA,KAAA,CAAA,UAAA,GAAwB,KAAA,KAAA,CAD1B,UAAA;AAGD;AACF;;;6BAUQ;AACP,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,GAAG,EAAE,KADP,cAAA;AAEE,uBAFF,IAAA;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EADH,OAAA;AAELC,UAAAA,GAAG,EAAE,CAFA,GAAA;AAGLC,UAAAA,IAAI,EAAE,CAHD,GAAA;AAILC,UAAAA,KAAK,EAJA,GAAA;AAKLC,UAAAA,SAAS,EAAE;AALN;AAHT,OAAA,EAWE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAE,KAAKC;AAAf,OAAA,CAXF,CADF;AAeD;;;;EA1DwCX,a;;AAAtBD,a,YAAAA,G,eAAAA;;gBAAAA,a,eACA;AACjB;;;AAGAE,EAAAA,mBAAmB,EAAEC,SAAS,CAACC;AAJd,C;;gBADAJ,a,kBAQG;AACpBE,EAAAA,mBAAmB,EAAE,SAAA,mBAAA,GAAM,CAAE;AADT,C;;SARHF,a","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ScrollbarSize extends PureComponent {\n  static propTypes = {\n    /**\n     * Returns the size of the scrollbar by creating a hidden fixed div.\n     */\n    handleScrollbarSize: PropTypes.func\n  }\n\n  static defaultProps = {\n    handleScrollbarSize: () => {}\n  }\n\n  state = {\n    innerWidth: null,\n    outerWidth: null\n  }\n\n  componentDidMount() {\n    const innerWidth = this.innerRef.getBoundingClientRect().width\n    const outerWidth = this.outerRef.getBoundingClientRect().width\n    this.setState({\n      innerWidth,\n      outerWidth\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.state.innerWidth && this.state.outerWidth) {\n      this.props.handleScrollbarSize(\n        this.state.outerWidth - this.state.innerWidth\n      )\n    }\n  }\n\n  handleOuterRef = ref => {\n    this.outerRef = ref\n  }\n\n  handleInnerRef = ref => {\n    this.innerRef = ref\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.handleOuterRef}\n        aria-hidden\n        style={{\n          position: 'fixed',\n          top: -500,\n          left: -500,\n          width: 100,\n          overflowY: 'scroll'\n        }}\n      >\n        <div ref={this.handleInnerRef} />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}