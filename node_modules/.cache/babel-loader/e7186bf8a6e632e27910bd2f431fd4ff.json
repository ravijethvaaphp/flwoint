{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { css } from 'glamor';\nimport PropTypes from 'prop-types';\nimport Transition from 'react-transition-group/Transition';\nimport Alert from '../../alert/src/Alert';\nvar animationEasing = {\n  deceleration: \"cubic-bezier(0.0, 0.0, 0.2, 1)\",\n  acceleration: \"cubic-bezier(0.4, 0.0, 1, 1)\",\n  spring: \"cubic-bezier(0.175, 0.885, 0.320, 1.175)\"\n};\nvar ANIMATION_DURATION = 240;\nvar openAnimation = css.keyframes('openAnimation', {\n  from: {\n    opacity: 0,\n    transform: 'translateY(-120%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n});\nvar closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n});\nvar animationStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  height: 0,\n  transition: \"all \".concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.deceleration),\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: \"\".concat(openAnimation, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.spring, \" both\")\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: \"\".concat(closeAnimation, \" 120ms \").concat(animationEasing.acceleration, \" both\")\n  }\n});\n\nvar Toast = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Toast, _React$PureComponent);\n\n  function Toast() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Toast);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isShown: true,\n      height: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"close\", function () {\n      _this.clearCloseTimer();\n\n      _this.setState({\n        isShown: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"startCloseTimer\", function () {\n      if (_this.props.duration) {\n        _this.closeTimer = setTimeout(function () {\n          _this.close();\n        }, _this.props.duration * 1000);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearCloseTimer\", function () {\n      if (_this.closeTimer) {\n        clearTimeout(_this.closeTimer);\n        _this.closeTimer = null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseEnter\", function () {\n      _this.clearCloseTimer();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeave\", function () {\n      _this.startCloseTimer();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onRef\", function (ref) {\n      if (ref === null) return;\n\n      var _ref$getBoundingClien = ref.getBoundingClientRect(),\n          height = _ref$getBoundingClien.height;\n\n      _this.setState({\n        height: height\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Toast, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.isShown !== this.props.isShown) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          isShown: this.props.isShown\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startCloseTimer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearCloseTimer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Transition, {\n        appear: true,\n        unmountOnExit: true,\n        timeout: ANIMATION_DURATION,\n        \"in\": this.state.isShown,\n        onExited: this.props.onRemove\n      }, function (state) {\n        return React.createElement(\"div\", {\n          \"data-state\": state,\n          className: animationStyles,\n          onMouseEnter: _this2.handleMouseEnter,\n          onMouseLeave: _this2.handleMouseLeave,\n          style: {\n            height: _this2.state.height,\n            zIndex: _this2.props.zIndex,\n            marginBottom: _this2.state.isShown ? 0 : -_this2.state.height\n          }\n        }, React.createElement(\"div\", {\n          ref: _this2.onRef,\n          style: {\n            padding: 8\n          }\n        }, React.createElement(Alert, {\n          flexShrink: 0,\n          appearance: \"card\",\n          elevation: 3,\n          intent: _this2.props.intent,\n          title: _this2.props.title,\n          isRemoveable: _this2.props.hasCloseButton,\n          onRemove: function onRemove() {\n            return _this2.close();\n          },\n          pointerEvents: \"all\"\n        }, _this2.props.children)));\n      });\n    }\n  }]);\n\n  return Toast;\n}(React.PureComponent);\n\nToast.displayName = \"Toast\";\n\n_defineProperty(Toast, \"propTypes\", {\n  /**\n   * The z-index of the toast.\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * Duration of the toast.\n   */\n  duration: PropTypes.number,\n\n  /**\n   * Function called when the toast is all the way closed.\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * The type of the alert.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,\n\n  /**\n   * The title of the alert.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Description of the alert.\n   */\n  children: PropTypes.node,\n\n  /**\n   * When true, show a close icon button inside of the toast.\n   */\n  hasCloseButton: PropTypes.bool,\n\n  /**\n   * When false, will close the Toast and call onRemove when finished.\n   */\n  isShown: PropTypes.bool\n});\n\n_defineProperty(Toast, \"defaultProps\", {\n  intent: 'none'\n});\n\nexport { Toast as default };","map":{"version":3,"sources":["../../../src/toaster/src/Toast.js"],"names":["animationEasing","deceleration","acceleration","spring","ANIMATION_DURATION","openAnimation","from","opacity","transform","to","closeAnimation","animationStyles","css","display","flexDirection","alignItems","height","transition","animation","Toast","React","PureComponent","zIndex","PropTypes","duration","onRemove","intent","title","children","hasCloseButton","isShown","bool","prevProps","setTimeout","clearTimeout","ref","marginBottom","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport Transition from 'react-transition-group/Transition'\nimport Alert from '../../alert/src/Alert'\n\nconst animationEasing = {\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`,\n  spring: `cubic-bezier(0.175, 0.885, 0.320, 1.175)`\n}\n\nconst ANIMATION_DURATION = 240\n\nconst openAnimation = css.keyframes('openAnimation', {\n  from: {\n    opacity: 0,\n    transform: 'translateY(-120%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n})\n\nconst closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n})\n\nconst animationStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  height: 0,\n  transition: `all ${ANIMATION_DURATION}ms ${animationEasing.deceleration}`,\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: `${openAnimation} ${ANIMATION_DURATION}ms ${\n      animationEasing.spring\n    } both`\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: `${closeAnimation} 120ms ${animationEasing.acceleration} both`\n  }\n})\n\nexport default class Toast extends React.PureComponent {\n  static propTypes = {\n    /**\n     * The z-index of the toast.\n     */\n    zIndex: PropTypes.number,\n\n    /**\n     * Duration of the toast.\n     */\n    duration: PropTypes.number,\n\n    /**\n     * Function called when the toast is all the way closed.\n     */\n    onRemove: PropTypes.func,\n\n    /**\n     * The type of the alert.\n     */\n    intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger'])\n      .isRequired,\n\n    /**\n     * The title of the alert.\n     */\n    title: PropTypes.node,\n\n    /**\n     * Description of the alert.\n     */\n    children: PropTypes.node,\n\n    /**\n     * When true, show a close icon button inside of the toast.\n     */\n    hasCloseButton: PropTypes.bool,\n\n    /**\n     * When false, will close the Toast and call onRemove when finished.\n     */\n    isShown: PropTypes.bool\n  }\n\n  static defaultProps = {\n    intent: 'none'\n  }\n\n  state = {\n    isShown: true,\n    height: 0\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isShown !== this.props.isShown) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        isShown: this.props.isShown\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.startCloseTimer()\n  }\n\n  componentWillUnmount() {\n    this.clearCloseTimer()\n  }\n\n  close = () => {\n    this.clearCloseTimer()\n    this.setState({\n      isShown: false\n    })\n  }\n\n  startCloseTimer = () => {\n    if (this.props.duration) {\n      this.closeTimer = setTimeout(() => {\n        this.close()\n      }, this.props.duration * 1000)\n    }\n  }\n\n  clearCloseTimer = () => {\n    if (this.closeTimer) {\n      clearTimeout(this.closeTimer)\n      this.closeTimer = null\n    }\n  }\n\n  handleMouseEnter = () => {\n    this.clearCloseTimer()\n  }\n\n  handleMouseLeave = () => {\n    this.startCloseTimer()\n  }\n\n  onRef = ref => {\n    if (ref === null) return\n\n    const { height } = ref.getBoundingClientRect()\n\n    this.setState({\n      height\n    })\n  }\n\n  render() {\n    return (\n      <Transition\n        appear\n        unmountOnExit\n        timeout={ANIMATION_DURATION}\n        in={this.state.isShown}\n        onExited={this.props.onRemove}\n      >\n        {state => (\n          <div\n            data-state={state}\n            className={animationStyles}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            style={{\n              height: this.state.height,\n              zIndex: this.props.zIndex,\n              marginBottom: this.state.isShown ? 0 : -this.state.height\n            }}\n          >\n            <div ref={this.onRef} style={{ padding: 8 }}>\n              <Alert\n                flexShrink={0}\n                appearance=\"card\"\n                elevation={3}\n                intent={this.props.intent}\n                title={this.props.title}\n                isRemoveable={this.props.hasCloseButton}\n                onRemove={() => this.close()}\n                pointerEvents=\"all\"\n              >\n                {this.props.children}\n              </Alert>\n            </div>\n          </div>\n        )}\n      </Transition>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}