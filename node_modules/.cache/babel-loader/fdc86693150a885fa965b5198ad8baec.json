{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst hash_1 = __importDefault(require(\"@emotion/hash\"));\n\nconst get_safe_value_1 = __importDefault(require(\"./get-safe-value\"));\n\nlet PREFIX = 'ub-';\n\nfunction getClassNamePrefix() {\n  return PREFIX;\n}\n\nexports.getClassNamePrefix = getClassNamePrefix;\n\nfunction setClassNamePrefix(prefix) {\n  PREFIX = prefix;\n}\n\nexports.setClassNamePrefix = setClassNamePrefix;\n/**\n * Generates the class name.\n */\n\nfunction getClassName(propertyInfo, value) {\n  const {\n    className,\n    safeValue = false,\n    // Value never contains unsafe characters. e.g: 10, hidden, border-box\n    complexValue = false // Complex values that are best hashed. e.g: background-image\n\n  } = propertyInfo;\n  let valueKey; // Shortcut the global keywords\n\n  if (value === 'inherit' || value === 'initial' || value === 'unset') {\n    valueKey = value;\n    /* Always hash values that contain a calc() because the operators get\n    stripped which can result in class name collisions\n    */\n  } else if (complexValue || value.includes('calc(')) {\n    valueKey = hash_1.default(value);\n  } else if (safeValue) {\n    valueKey = value;\n  } else {\n    valueKey = get_safe_value_1.default(value);\n  }\n\n  return `${PREFIX}${className}_${valueKey}`;\n}\n\nexports.default = getClassName;","map":{"version":3,"sources":["../src/get-class-name.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,MAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,IAAI,MAAM,GAAG,KAAb;;AAEA,SAAgB,kBAAhB,GAAkC;AAChC,SAAO,MAAP;AACD;;AAFD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAIA,SAAgB,kBAAhB,CAAmC,MAAnC,EAAiD;AAC/C,EAAA,MAAM,GAAG,MAAT;AACD;;AAFD,OAAA,CAAA,kBAAA,GAAA,kBAAA;AAaA;;AAEG;;AACH,SAAwB,YAAxB,CAAqC,YAArC,EAAiE,KAAjE,EAA8E;AAC5E,QAAM;AACJ,IAAA,SADI;AAEJ,IAAA,SAAS,GAAG,KAFR;AAEe;AACnB,IAAA,YAAY,GAAG,KAHX,CAGiB;;AAHjB,MAIF,YAJJ;AAKA,MAAI,QAAJ,CAN4E,CAQ5E;;AACA,MAAI,KAAK,KAAK,SAAV,IAAuB,KAAK,KAAK,SAAjC,IAA8C,KAAK,KAAK,OAA5D,EAAqE;AACnE,IAAA,QAAQ,GAAG,KAAX;AACA;;AAEE;AACH,GALD,MAKO,IAAI,YAAY,IAAI,KAAK,CAAC,QAAN,CAAe,OAAf,CAApB,EAA6C;AAClD,IAAA,QAAQ,GAAG,MAAA,CAAA,OAAA,CAAK,KAAL,CAAX;AACD,GAFM,MAEA,IAAI,SAAJ,EAAe;AACpB,IAAA,QAAQ,GAAG,KAAX;AACD,GAFM,MAEA;AACL,IAAA,QAAQ,GAAG,gBAAA,CAAA,OAAA,CAAa,KAAb,CAAX;AACD;;AAED,SAAO,GAAG,MAAM,GAAG,SAAS,IAAI,QAAQ,EAAxC;AACD;;AAvBD,OAAA,CAAA,OAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst hash_1 = __importDefault(require(\"@emotion/hash\"));\nconst get_safe_value_1 = __importDefault(require(\"./get-safe-value\"));\nlet PREFIX = 'ub-';\nfunction getClassNamePrefix() {\n    return PREFIX;\n}\nexports.getClassNamePrefix = getClassNamePrefix;\nfunction setClassNamePrefix(prefix) {\n    PREFIX = prefix;\n}\nexports.setClassNamePrefix = setClassNamePrefix;\n/**\n * Generates the class name.\n */\nfunction getClassName(propertyInfo, value) {\n    const { className, safeValue = false, // Value never contains unsafe characters. e.g: 10, hidden, border-box\n    complexValue = false // Complex values that are best hashed. e.g: background-image\n     } = propertyInfo;\n    let valueKey;\n    // Shortcut the global keywords\n    if (value === 'inherit' || value === 'initial' || value === 'unset') {\n        valueKey = value;\n        /* Always hash values that contain a calc() because the operators get\n        stripped which can result in class name collisions\n        */\n    }\n    else if (complexValue || value.includes('calc(')) {\n        valueKey = hash_1.default(value);\n    }\n    else if (safeValue) {\n        valueKey = value;\n    }\n    else {\n        valueKey = get_safe_value_1.default(value);\n    }\n    return `${PREFIX}${className}_${valueKey}`;\n}\nexports.default = getClassName;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWNsYXNzLW5hbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ2V0LWNsYXNzLW5hbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx5REFBZ0M7QUFDaEMsc0VBQTJDO0FBRTNDLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQTtBQUVsQixTQUFnQixrQkFBa0I7SUFDaEMsT0FBTyxNQUFNLENBQUE7QUFDZixDQUFDO0FBRkQsZ0RBRUM7QUFFRCxTQUFnQixrQkFBa0IsQ0FBQyxNQUFjO0lBQy9DLE1BQU0sR0FBRyxNQUFNLENBQUE7QUFDakIsQ0FBQztBQUZELGdEQUVDO0FBV0Q7O0dBRUc7QUFDSCxTQUF3QixZQUFZLENBQUMsWUFBMEIsRUFBRSxLQUFhO0lBQzVFLE1BQU0sRUFDSixTQUFTLEVBQ1QsU0FBUyxHQUFHLEtBQUssRUFBRSxzRUFBc0U7SUFDekYsWUFBWSxHQUFHLEtBQUssQ0FBQyw2REFBNkQ7TUFDbkYsR0FBRyxZQUFZLENBQUE7SUFDaEIsSUFBSSxRQUFnQixDQUFBO0lBRXBCLCtCQUErQjtJQUMvQixJQUFJLEtBQUssS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLFNBQVMsSUFBSSxLQUFLLEtBQUssT0FBTyxFQUFFO1FBQ25FLFFBQVEsR0FBRyxLQUFLLENBQUE7UUFDaEI7O1VBRUU7S0FDSDtTQUFNLElBQUksWUFBWSxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDbEQsUUFBUSxHQUFHLGNBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtLQUN2QjtTQUFNLElBQUksU0FBUyxFQUFFO1FBQ3BCLFFBQVEsR0FBRyxLQUFLLENBQUE7S0FDakI7U0FBTTtRQUNMLFFBQVEsR0FBRyx3QkFBWSxDQUFDLEtBQUssQ0FBQyxDQUFBO0tBQy9CO0lBRUQsT0FBTyxHQUFHLE1BQU0sR0FBRyxTQUFTLElBQUksUUFBUSxFQUFFLENBQUE7QUFDNUMsQ0FBQztBQXZCRCwrQkF1QkMifQ=="]},"metadata":{},"sourceType":"script"}