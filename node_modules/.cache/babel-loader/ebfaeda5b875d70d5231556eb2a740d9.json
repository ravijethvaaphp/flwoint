{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport cx from 'classnames';\nimport { css as glamorCss } from 'glamor';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport { Positioner } from '../../positioner';\nimport { Position } from '../../constants';\nimport TooltipStateless from './TooltipStateless';\nvar idCounter = 0;\n\nvar Tooltip = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Tooltip, _PureComponent);\n\n  function Tooltip(props, context) {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"show\", function () {\n      if (_this.state.isShown) return;\n\n      _this.setState({\n        willShow: true\n      });\n\n      _this.timeout = setTimeout(function () {\n        if (!_this.state.willShow) return;\n\n        _this.setState({\n          isShown: true\n        });\n      }, _this.props.showDelay);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hide\", function () {\n      _this.setState({\n        isShown: false,\n        willShow: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTarget\", function (_ref) {\n      var getRef = _ref.getRef;\n      var children = _this.props.children;\n      var tooltipTargetProps = {\n        onMouseEnter: _this.show,\n        onMouseLeave: _this.hide,\n        'aria-describedby': _this.state.id\n      };\n      /**\n       * Tooltips can be used within a Popover (not the other way around)\n       * When a Tooltip is used within a Popover, the Popover passes\n       * its props to the Tooltip in a `popoverProps` object.\n       */\n      // eslint-disable-next-line react/prop-types\n\n      if (_this.props.popoverProps) {\n        var _this$props$popoverPr = _this.props.popoverProps,\n            getTargetRef = _this$props$popoverPr.getTargetRef,\n            isShown = _this$props$popoverPr.isShown,\n            popoverTargetProps = _objectWithoutProperties(_this$props$popoverPr, [\"getTargetRef\", \"isShown\"]);\n\n        return React.cloneElement(children, _objectSpread({}, popoverTargetProps, {}, tooltipTargetProps, {\n          innerRef: function innerRef(ref) {\n            // Get the ref for the Tooltip.\n            getRef(ref); // Pass the ref to the Popover.\n\n            getTargetRef(ref);\n          }\n        }));\n      }\n      /**\n       * With normal usage only the props for a Tooltip are passed to the target.\n       */\n\n\n      return React.cloneElement(children, _objectSpread({}, tooltipTargetProps, {\n        innerRef: function innerRef(ref) {\n          getRef(ref);\n        }\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isPopoverShown\", function () {\n      return (// eslint-disable-next-line react/prop-types\n        _this.props.popoverProps && _this.props.popoverProps.isShown\n      );\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseEnterTarget\", function () {\n      _this.setState({\n        isShownByTarget: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseLeaveTarget\", function () {\n      _this.setState({\n        isShownByTarget: false,\n        willShow: false\n      });\n    });\n\n    _this.state = {\n      id: \"evergreen-tooltip-\".concat(++idCounter),\n      willShow: false,\n      isShown: props.isShown,\n      isShownByTarget: false\n    };\n    _this.handleMouseLeaveTarget = debounce(_this.handleMouseLeaveTarget, _this.props.hideDelay);\n    _this.hide = debounce(_this.hide, _this.props.hideDelay);\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          appearance = _this$props.appearance,\n          isShown = _this$props.isShown,\n          content = _this$props.content,\n          position = _this$props.position,\n          _this$props$stateless = _this$props.statelessProps,\n          statelessProps = _this$props$stateless === void 0 ? {} : _this$props$stateless;\n      var _this$state = this.state,\n          stateIsShown = _this$state.isShown,\n          isShownByTarget = _this$state.isShownByTarget;\n      var shown = (isShown || stateIsShown || isShownByTarget) && !this.isPopoverShown(); // Tooltip was explicitly set to not be shown\n\n      if (isShown === false) {\n        shown = false;\n      }\n\n      return React.createElement(Positioner, {\n        target: function target(_ref2) {\n          var getRef = _ref2.getRef;\n          return _this2.renderTarget({\n            getRef: getRef\n          });\n        },\n        isShown: shown,\n        position: position,\n        animationDuration: 160\n      }, function (_ref3) {\n        var css = _ref3.css,\n            style = _ref3.style,\n            state = _ref3.state,\n            getRef = _ref3.getRef;\n        return React.createElement(TooltipStateless, _extends({\n          id: _this2.state.id,\n          appearance: appearance,\n          innerRef: function innerRef(ref) {\n            return getRef(ref);\n          },\n          \"data-state\": state,\n          style: style,\n          onMouseEnter: _this2.handleMouseEnterTarget,\n          onMouseLeave: _this2.handleMouseLeaveTarget\n        }, statelessProps, {\n          className: cx(statelessProps.className, css ? glamorCss(css).toString() : undefined)\n        }), content);\n      });\n    }\n  }]);\n\n  return Tooltip;\n}(PureComponent);\n\nTooltip.displayName = \"Tooltip\";\n\n_defineProperty(Tooltip, \"propTypes\", {\n  /**\n   * The appearance of the tooltip.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']).isRequired,\n\n  /**\n   * The position the Popover is on.\n   */\n  position: PropTypes.oneOf([Position.TOP, Position.TOP_LEFT, Position.TOP_RIGHT, Position.BOTTOM, Position.BOTTOM_LEFT, Position.BOTTOM_RIGHT, Position.LEFT, Position.RIGHT]),\n\n  /**\n   * The content of the Popover.\n   */\n  content: PropTypes.node.isRequired,\n\n  /**\n   * Time in ms before hiding the Tooltip.\n   */\n  hideDelay: PropTypes.number.isRequired,\n\n  /**\n   * Time in ms before showing the Tooltip.\n   */\n  showDelay: PropTypes.number.isRequired,\n\n  /**\n   * When True, manually show the Tooltip.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * The target button of the Tooltip.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Properties passed through to the Tooltip.\n   */\n  statelessProps: PropTypes.object\n});\n\n_defineProperty(Tooltip, \"defaultProps\", {\n  appearance: 'default',\n  position: Position.BOTTOM,\n  hideDelay: 120,\n  showDelay: 0\n});\n\nexport { Tooltip as default };","map":{"version":3,"sources":["../../../src/tooltip/src/Tooltip.js"],"names":["css","idCounter","Tooltip","PureComponent","appearance","PropTypes","position","Position","content","hideDelay","showDelay","isShown","children","statelessProps","object","id","willShow","props","isShownByTarget","debounce","clearTimeout","setTimeout","getRef","tooltipTargetProps","onMouseEnter","onMouseLeave","getTargetRef","popoverTargetProps","innerRef","stateIsShown","shown","style","state","handleMouseLeaveTarget","cx","glamorCss"],"mappings":"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","sourcesContent":["import cx from 'classnames'\nimport { css as glamorCss } from 'glamor'\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport debounce from 'lodash.debounce'\nimport { Positioner } from '../../positioner'\nimport { Position } from '../../constants'\nimport TooltipStateless from './TooltipStateless'\n\nlet idCounter = 0\n\nexport default class Tooltip extends PureComponent {\n  static propTypes = {\n    /**\n     * The appearance of the tooltip.\n     */\n    appearance: PropTypes.oneOf(['default', 'card']).isRequired,\n\n    /**\n     * The position the Popover is on.\n     */\n    position: PropTypes.oneOf([\n      Position.TOP,\n      Position.TOP_LEFT,\n      Position.TOP_RIGHT,\n      Position.BOTTOM,\n      Position.BOTTOM_LEFT,\n      Position.BOTTOM_RIGHT,\n      Position.LEFT,\n      Position.RIGHT\n    ]),\n\n    /**\n     * The content of the Popover.\n     */\n    content: PropTypes.node.isRequired,\n\n    /**\n     * Time in ms before hiding the Tooltip.\n     */\n    hideDelay: PropTypes.number.isRequired,\n\n    /**\n     * Time in ms before showing the Tooltip.\n     */\n    showDelay: PropTypes.number.isRequired,\n\n    /**\n     * When True, manually show the Tooltip.\n     */\n    isShown: PropTypes.bool,\n\n    /**\n     * The target button of the Tooltip.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * Properties passed through to the Tooltip.\n     */\n    statelessProps: PropTypes.object\n  }\n\n  static defaultProps = {\n    appearance: 'default',\n    position: Position.BOTTOM,\n    hideDelay: 120,\n    showDelay: 0\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      id: `evergreen-tooltip-${++idCounter}`,\n      willShow: false,\n      isShown: props.isShown,\n      isShownByTarget: false\n    }\n\n    this.handleMouseLeaveTarget = debounce(\n      this.handleMouseLeaveTarget,\n      this.props.hideDelay\n    )\n\n    this.hide = debounce(this.hide, this.props.hideDelay)\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout)\n  }\n\n  show = () => {\n    if (this.state.isShown) return\n    this.setState({\n      willShow: true\n    })\n    this.timeout = setTimeout(() => {\n      if (!this.state.willShow) return\n      this.setState({\n        isShown: true\n      })\n    }, this.props.showDelay)\n  }\n\n  hide = () => {\n    this.setState({\n      isShown: false,\n      willShow: false\n    })\n  }\n\n  renderTarget = ({ getRef }) => {\n    const { children } = this.props\n\n    const tooltipTargetProps = {\n      onMouseEnter: this.show,\n      onMouseLeave: this.hide,\n      'aria-describedby': this.state.id\n    }\n\n    /**\n     * Tooltips can be used within a Popover (not the other way around)\n     * When a Tooltip is used within a Popover, the Popover passes\n     * its props to the Tooltip in a `popoverProps` object.\n     */\n    // eslint-disable-next-line react/prop-types\n    if (this.props.popoverProps) {\n      const {\n        // eslint-disable-next-line react/prop-types\n        getTargetRef,\n        // eslint-disable-next-line react/prop-types\n        isShown,\n        ...popoverTargetProps\n        // eslint-disable-next-line react/prop-types\n      } = this.props.popoverProps\n\n      return React.cloneElement(children, {\n        // Add the Popover props to the target.\n        ...popoverTargetProps,\n        // Add the Tooltip props to the target.\n        ...tooltipTargetProps,\n\n        innerRef: ref => {\n          // Get the ref for the Tooltip.\n          getRef(ref)\n          // Pass the ref to the Popover.\n          getTargetRef(ref)\n        }\n      })\n    }\n\n    /**\n     * With normal usage only the props for a Tooltip are passed to the target.\n     */\n    return React.cloneElement(children, {\n      ...tooltipTargetProps,\n      innerRef: ref => {\n        getRef(ref)\n      }\n    })\n  }\n\n  isPopoverShown = () =>\n    // eslint-disable-next-line react/prop-types\n    this.props.popoverProps && this.props.popoverProps.isShown\n\n  handleMouseEnterTarget = () => {\n    this.setState({\n      isShownByTarget: true\n    })\n  }\n\n  handleMouseLeaveTarget = () => {\n    this.setState({\n      isShownByTarget: false,\n      willShow: false\n    })\n  }\n\n  render() {\n    const {\n      appearance,\n      isShown,\n      content,\n      position,\n      statelessProps = {}\n    } = this.props\n    const { isShown: stateIsShown, isShownByTarget } = this.state\n\n    let shown =\n      (isShown || stateIsShown || isShownByTarget) && !this.isPopoverShown()\n\n    // Tooltip was explicitly set to not be shown\n    if (isShown === false) {\n      shown = false\n    }\n\n    return (\n      <Positioner\n        target={({ getRef }) => {\n          return this.renderTarget({ getRef })\n        }}\n        isShown={shown}\n        position={position}\n        animationDuration={160}\n      >\n        {({ css, style, state, getRef }) => (\n          <TooltipStateless\n            id={this.state.id}\n            appearance={appearance}\n            innerRef={ref => getRef(ref)}\n            data-state={state}\n            style={style}\n            onMouseEnter={this.handleMouseEnterTarget}\n            onMouseLeave={this.handleMouseLeaveTarget}\n            {...statelessProps}\n            className={cx(\n              statelessProps.className,\n              css ? glamorCss(css).toString() : undefined\n            )}\n          >\n            {content}\n          </TooltipStateless>\n        )}\n      </Positioner>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}