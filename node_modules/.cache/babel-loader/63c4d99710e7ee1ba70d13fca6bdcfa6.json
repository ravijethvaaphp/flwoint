{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { css } from 'glamor';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Transition from 'react-transition-group/Transition';\nimport { Pane, Card } from '../../layers';\nimport { Portal } from '../../portal';\nimport { Paragraph, Heading } from '../../typography';\nimport { Button, IconButton } from '../../buttons';\nimport absolutePositions from '../../constants/src/AbsolutePosition';\nimport positions from '../../constants/src/Position';\nimport { CrossIcon } from '../../icons';\nvar animationEasing = {\n  deceleration: \"cubic-bezier(0.0, 0.0, 0.2, 1)\",\n  acceleration: \"cubic-bezier(0.4, 0.0, 1, 1)\",\n  spring: \"cubic-bezier(0.175, 0.885, 0.320, 1.175)\"\n};\nvar ANIMATION_DURATION = 240;\nvar openAnimation = css.keyframes('openAnimation', {\n  from: {\n    transform: 'translateY(100%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n});\nvar closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n});\nvar animationStyles = {\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: \"\".concat(openAnimation, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.spring, \" both\")\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: \"\".concat(closeAnimation, \" 120ms \").concat(animationEasing.acceleration, \" both\")\n  }\n};\n\nvar CornerDialog = /*#__PURE__*/function (_PureComponent) {\n  _inherits(CornerDialog, _PureComponent);\n\n  function CornerDialog(props) {\n    var _this;\n\n    _classCallCheck(this, CornerDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CornerDialog).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExited\", function () {\n      _this.setState({\n        exiting: false,\n        exited: true\n      });\n\n      _this.props.onCloseComplete();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCancel\", function () {\n      _this.props.onCancel(_this.handleClose);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        exiting: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleConfirm\", function () {\n      _this.props.onConfirm(_this.handleClose);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderChildren\", function () {\n      var children = _this.props.children;\n\n      if (typeof children === 'function') {\n        return children({\n          close: _this.handleClose\n        });\n      }\n\n      if (typeof children === 'string') {\n        return React.createElement(Paragraph, {\n          size: 400,\n          color: \"muted\"\n        }, children);\n      }\n\n      return children;\n    });\n\n    _this.state = {\n      exiting: false,\n      exited: !props.isShown\n    };\n    return _this;\n  }\n\n  _createClass(CornerDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.isShown && this.props.isShown) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          exited: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          width = _this$props.width,\n          intent = _this$props.intent,\n          isShown = _this$props.isShown,\n          hasFooter = _this$props.hasFooter,\n          hasCancel = _this$props.hasCancel,\n          hasClose = _this$props.hasClose,\n          cancelLabel = _this$props.cancelLabel,\n          confirmLabel = _this$props.confirmLabel,\n          onOpenComplete = _this$props.onOpenComplete,\n          _this$props$container = _this$props.containerProps,\n          containerProps = _this$props$container === void 0 ? {} : _this$props$container,\n          position = _this$props.position;\n      var _this$state = this.state,\n          exiting = _this$state.exiting,\n          exited = _this$state.exited;\n      if (exited) return null;\n      return React.createElement(Portal, null, React.createElement(Transition, {\n        appear: true,\n        unmountOnExit: true,\n        timeout: ANIMATION_DURATION,\n        \"in\": isShown && !exiting,\n        onExited: this.handleExited,\n        onEntered: onOpenComplete\n      }, function (state) {\n        return React.createElement(Card, _extends({\n          role: \"dialog\",\n          backgroundColor: \"white\",\n          elevation: 4,\n          width: width,\n          css: animationStyles,\n          \"data-state\": state,\n          padding: 32,\n          position: \"fixed\"\n        }, absolutePositions[Object.keys(absolutePositions).includes(position) ? position : positions.BOTTOM_RIGHT], containerProps), React.createElement(Pane, {\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: 12\n        }, React.createElement(Heading, {\n          is: \"h4\",\n          size: 600,\n          flex: \"1\"\n        }, title), hasClose && React.createElement(IconButton, {\n          height: 32,\n          icon: CrossIcon,\n          appearance: \"minimal\",\n          onClick: _this2.handleClose\n        })), React.createElement(Pane, {\n          overflowY: \"auto\",\n          \"data-state\": state\n        }, _this2.renderChildren()), hasFooter && React.createElement(Pane, {\n          marginTop: 24,\n          flexShrink: 0,\n          display: \"flex\",\n          flexDirection: \"row-reverse\"\n        }, React.createElement(Button, {\n          appearance: \"primary\",\n          intent: intent,\n          marginLeft: 8,\n          onClick: _this2.handleConfirm\n        }, confirmLabel), hasCancel && React.createElement(Button, {\n          onClick: _this2.handleCancel\n        }, cancelLabel)));\n      }));\n    }\n  }]);\n\n  return CornerDialog;\n}(PureComponent);\n\nCornerDialog.displayName = \"CornerDialog\";\n\n_defineProperty(CornerDialog, \"propTypes\", {\n  /**\n   * Children can be a string, node or a function accepting `({ close })`.\n   * When passing a string, <Paragraph size={400} color=\"muted\" /> is used to wrap the string.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * The intent of the CornerDialog. Used for the button.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,\n\n  /**\n   * When true, the dialog is shown.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Title of the Dialog. Titles should use Title Case.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Function that will be called when the exit transition is complete.\n   */\n  onCloseComplete: PropTypes.func,\n\n  /**\n   * Function that will be called when the enter transition is complete.\n   */\n  onOpenComplete: PropTypes.func,\n\n  /**\n   * When true, the footer with the cancel and confirm button is shown.\n   */\n  hasFooter: PropTypes.bool,\n\n  /**\n   * Function that will be called when the confirm button is clicked.\n   * This does not close the Dialog. A close function will be passed\n   * as a paramater you can use to close the dialog.\n   *\n   * `onConfirm={(close) => close()}`\n   */\n  onConfirm: PropTypes.func,\n\n  /**\n   * Label of the confirm button.\n   */\n  confirmLabel: PropTypes.string,\n\n  /**\n   * When true, the cancel button is shown.\n   */\n  hasCancel: PropTypes.bool,\n\n  /**\n   * When true, the close button is shown.\n   */\n  hasClose: PropTypes.bool,\n\n  /**\n   * Function that will be called when the cancel button is clicked.\n   * This closes the Dialog by default.\n   *\n   * `onCancel={(close) => close()}`\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * Label of the cancel button.\n   */\n  cancelLabel: PropTypes.string,\n\n  /**\n   * Width of the Dialog.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Props that are passed to the dialog container.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Props that will set position of corner dialog\n   */\n  position: PropTypes.oneOf([positions.TOP_LEFT, positions.TOP_RIGHT, positions.BOTTOM_LEFT, positions.BOTTOM_RIGHT])\n});\n\n_defineProperty(CornerDialog, \"defaultProps\", {\n  width: 392,\n  intent: 'none',\n  hasFooter: true,\n  confirmLabel: 'Learn More',\n  hasCancel: true,\n  hasClose: true,\n  cancelLabel: 'Close',\n  onCancel: function onCancel(close) {\n    return close();\n  },\n  onConfirm: function onConfirm(close) {\n    return close();\n  },\n  onCloseComplete: function onCloseComplete() {},\n  position: positions.BOTTOM_RIGHT\n});\n\nexport { CornerDialog as default };","map":{"version":3,"sources":["../../../src/corner-dialog/src/CornerDialog.js"],"names":["animationEasing","deceleration","acceleration","spring","ANIMATION_DURATION","openAnimation","from","transform","to","closeAnimation","opacity","animationStyles","animation","CornerDialog","PureComponent","children","PropTypes","intent","isShown","title","onCloseComplete","onOpenComplete","hasFooter","onConfirm","confirmLabel","hasCancel","hasClose","onCancel","cancelLabel","width","containerProps","position","positions","close","BOTTOM_RIGHT","exiting","exited","props","prevProps","handleClose","absolutePositions","Object","state","handleConfirm","handleCancel"],"mappings":"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","sourcesContent":["import { css } from 'glamor'\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Transition from 'react-transition-group/Transition'\nimport { Pane, Card } from '../../layers'\nimport { Portal } from '../../portal'\nimport { Paragraph, Heading } from '../../typography'\nimport { Button, IconButton } from '../../buttons'\nimport absolutePositions from '../../constants/src/AbsolutePosition'\nimport positions from '../../constants/src/Position'\nimport { CrossIcon } from '../../icons'\n\nconst animationEasing = {\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`,\n  spring: `cubic-bezier(0.175, 0.885, 0.320, 1.175)`\n}\n\nconst ANIMATION_DURATION = 240\n\nconst openAnimation = css.keyframes('openAnimation', {\n  from: {\n    transform: 'translateY(100%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n})\n\nconst closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n})\n\nconst animationStyles = {\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: `${openAnimation} ${ANIMATION_DURATION}ms ${animationEasing.spring} both`\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: `${closeAnimation} 120ms ${animationEasing.acceleration} both`\n  }\n}\n\nexport default class CornerDialog extends PureComponent {\n  static propTypes = {\n    /**\n     * Children can be a string, node or a function accepting `({ close })`.\n     * When passing a string, <Paragraph size={400} color=\"muted\" /> is used to wrap the string.\n     */\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n    /**\n     * The intent of the CornerDialog. Used for the button.\n     */\n    intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger'])\n      .isRequired,\n\n    /**\n     * When true, the dialog is shown.\n     */\n    isShown: PropTypes.bool,\n\n    /**\n     * Title of the Dialog. Titles should use Title Case.\n     */\n    title: PropTypes.node,\n\n    /**\n     * Function that will be called when the exit transition is complete.\n     */\n    onCloseComplete: PropTypes.func,\n\n    /**\n     * Function that will be called when the enter transition is complete.\n     */\n    onOpenComplete: PropTypes.func,\n\n    /**\n     * When true, the footer with the cancel and confirm button is shown.\n     */\n    hasFooter: PropTypes.bool,\n\n    /**\n     * Function that will be called when the confirm button is clicked.\n     * This does not close the Dialog. A close function will be passed\n     * as a paramater you can use to close the dialog.\n     *\n     * `onConfirm={(close) => close()}`\n     */\n    onConfirm: PropTypes.func,\n\n    /**\n     * Label of the confirm button.\n     */\n    confirmLabel: PropTypes.string,\n\n    /**\n     * When true, the cancel button is shown.\n     */\n    hasCancel: PropTypes.bool,\n\n    /**\n     * When true, the close button is shown.\n     */\n    hasClose: PropTypes.bool,\n\n    /**\n     * Function that will be called when the cancel button is clicked.\n     * This closes the Dialog by default.\n     *\n     * `onCancel={(close) => close()}`\n     */\n    onCancel: PropTypes.func,\n\n    /**\n     * Label of the cancel button.\n     */\n    cancelLabel: PropTypes.string,\n\n    /**\n     * Width of the Dialog.\n     */\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n    /**\n     * Props that are passed to the dialog container.\n     */\n    containerProps: PropTypes.object,\n\n    /**\n     * Props that will set position of corner dialog\n     */\n    position: PropTypes.oneOf([\n      positions.TOP_LEFT,\n      positions.TOP_RIGHT,\n      positions.BOTTOM_LEFT,\n      positions.BOTTOM_RIGHT\n    ])\n  }\n\n  static defaultProps = {\n    width: 392,\n    intent: 'none',\n    hasFooter: true,\n    confirmLabel: 'Learn More',\n    hasCancel: true,\n    hasClose: true,\n    cancelLabel: 'Close',\n    onCancel: close => close(),\n    onConfirm: close => close(),\n    onCloseComplete: () => {},\n    position: positions.BOTTOM_RIGHT\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      exiting: false,\n      exited: !props.isShown\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.isShown && this.props.isShown) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        exited: false\n      })\n    }\n  }\n\n  handleExited = () => {\n    this.setState({ exiting: false, exited: true })\n    this.props.onCloseComplete()\n  }\n\n  handleCancel = () => {\n    this.props.onCancel(this.handleClose)\n  }\n\n  handleClose = () => {\n    this.setState({ exiting: true })\n  }\n\n  handleConfirm = () => {\n    this.props.onConfirm(this.handleClose)\n  }\n\n  renderChildren = () => {\n    const { children } = this.props\n    if (typeof children === 'function') {\n      return children({ close: this.handleClose })\n    }\n\n    if (typeof children === 'string') {\n      return (\n        <Paragraph size={400} color=\"muted\">\n          {children}\n        </Paragraph>\n      )\n    }\n\n    return children\n  }\n\n  render() {\n    const {\n      title,\n      width,\n      intent,\n      isShown,\n      hasFooter,\n      hasCancel,\n      hasClose,\n      cancelLabel,\n      confirmLabel,\n      onOpenComplete,\n      containerProps = {},\n      position\n    } = this.props\n\n    const { exiting, exited } = this.state\n\n    if (exited) return null\n    return (\n      <Portal>\n        <Transition\n          appear\n          unmountOnExit\n          timeout={ANIMATION_DURATION}\n          in={isShown && !exiting}\n          onExited={this.handleExited}\n          onEntered={onOpenComplete}\n        >\n          {state => (\n            <Card\n              role=\"dialog\"\n              backgroundColor=\"white\"\n              elevation={4}\n              width={width}\n              css={animationStyles}\n              data-state={state}\n              padding={32}\n              position=\"fixed\"\n              {...absolutePositions[\n                Object.keys(absolutePositions).includes(position)\n                  ? position\n                  : positions.BOTTOM_RIGHT\n              ]}\n              {...containerProps}\n            >\n              <Pane display=\"flex\" alignItems=\"center\" marginBottom={12}>\n                <Heading is=\"h4\" size={600} flex=\"1\">\n                  {title}\n                </Heading>\n                {hasClose && (\n                  <IconButton\n                    height={32}\n                    icon={CrossIcon}\n                    appearance=\"minimal\"\n                    onClick={this.handleClose}\n                  />\n                )}\n              </Pane>\n\n              <Pane overflowY=\"auto\" data-state={state}>\n                {this.renderChildren()}\n              </Pane>\n\n              {hasFooter && (\n                <Pane\n                  marginTop={24}\n                  flexShrink={0}\n                  display=\"flex\"\n                  flexDirection=\"row-reverse\"\n                >\n                  <Button\n                    appearance=\"primary\"\n                    intent={intent}\n                    marginLeft={8}\n                    onClick={this.handleConfirm}\n                  >\n                    {confirmLabel}\n                  </Button>\n                  {hasCancel && (\n                    <Button onClick={this.handleCancel}>{cancelLabel}</Button>\n                  )}\n                </Pane>\n              )}\n            </Card>\n          )}\n        </Transition>\n      </Portal>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}