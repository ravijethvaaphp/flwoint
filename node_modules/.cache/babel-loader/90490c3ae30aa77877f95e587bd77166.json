{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport cx from 'classnames';\nimport { css } from 'glamor';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Transition from 'react-transition-group/Transition';\nimport Box from 'ui-box';\nimport { Portal } from '../../portal';\nimport { Stack } from '../../stack';\nimport { StackingOrder } from '../../constants';\nimport { withTheme } from '../../theme';\nimport safeInvoke from '../../lib/safe-invoke';\nimport preventBodyScroll from '../../lib/prevent-body-scroll';\nvar animationEasing = {\n  standard: \"cubic-bezier(0.4, 0.0, 0.2, 1)\",\n  deceleration: \"cubic-bezier(0.0, 0.0, 0.2, 1)\",\n  acceleration: \"cubic-bezier(0.4, 0.0, 1, 1)\",\n  sharp: \"cubic-bezier(0.4, 0.0, 0.6, 1)\",\n  spring: \"cubic-bezier(0.175, 0.885, 0.320, 1.175)\"\n};\nvar ANIMATION_DURATION = 240;\nvar fadeInAnimation = css.keyframes('fadeInAnimation', {\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar fadeOutAnimation = css.keyframes('fadeOutAnimation', {\n  from: {\n    opacity: 1\n  },\n  to: {\n    opacity: 0\n  }\n});\n\nvar animationStyles = function animationStyles(backgroundColor) {\n  return {\n    '&::before': {\n      backgroundColor: backgroundColor,\n      left: 0,\n      top: 0,\n      position: 'fixed',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      content: '\" \"'\n    },\n    '&[data-state=\"entering\"]::before, &[data-state=\"entered\"]::before': {\n      animation: \"\".concat(fadeInAnimation, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.deceleration, \" both\")\n    },\n    '&[data-state=\"exiting\"]::before, &[data-state=\"exited\"]::before': {\n      animation: \"\".concat(fadeOutAnimation, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.acceleration, \" both\")\n    }\n  };\n};\n/**\n * Overlay is essentially a wrapper around react-transition-group/Transition\n * Learn more: https://reactcommunity.org/react-transition-group/\n */\n\n\nvar Overlay = /*#__PURE__*/function (_React$Component) {\n  _inherits(Overlay, _React$Component);\n\n  function Overlay(props) {\n    var _this;\n\n    _classCallCheck(this, Overlay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Overlay).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"bringFocusInsideOverlay\", function () {\n      // Always delay focus manipulation to just before repaint to prevent scroll jumping\n      return requestAnimationFrame(function () {\n        // Container ref may be undefined between component mounting and Portal rendering\n        // activeElement may be undefined in some rare cases in IE\n        if (_this.containerElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        document.activeElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        !_this.props.isShown) {\n          return;\n        }\n\n        var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);\n\n        if (isFocusOutsideModal) {\n          // Element marked autofocus has higher priority than the other clowns\n          var autofocusElement = _this.containerElement.querySelector('[autofocus]');\n\n          var wrapperElement = _this.containerElement.querySelector('[tabindex]');\n\n          var buttonElement = _this.containerElement.querySelector('button');\n\n          if (autofocusElement) {\n            autofocusElement.focus();\n          } else if (wrapperElement) {\n            wrapperElement.focus();\n          } else if (buttonElement) {\n            buttonElement.focus();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"bringFocusBackToTarget\", function () {\n      return requestAnimationFrame(function () {\n        if (_this.containerElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        document.activeElement == null // eslint-disable-line eqeqeq, no-eq-null\n        ) {\n            return;\n          }\n\n        var isFocusInsideModal = _this.containerElement.contains(document.activeElement); // Bring back focus on the target.\n\n\n        if (_this.previousActiveElement && (document.activeElement === document.body || isFocusInsideModal)) {\n          _this.previousActiveElement.focus();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEsc\", function (e) {\n      // Esc key\n      if (e.keyCode === 27 && _this.props.shouldCloseOnEscapePress) {\n        _this.close();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"close\", function () {\n      var shouldClose = safeInvoke(_this.props.onBeforeClose);\n\n      if (shouldClose !== false) {\n        _this.setState({\n          exiting: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBodyScroll\", function (preventScroll) {\n      if (_this.props.preventBodyScrolling) {\n        preventBodyScroll(preventScroll);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEnter\", function () {\n      _this.handleBodyScroll(true);\n\n      safeInvoke(_this.props.onEnter);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEntering\", function (node) {\n      document.body.addEventListener('keydown', _this.onEsc, false);\n\n      _this.props.onEntering(node);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEntered\", function (node) {\n      _this.previousActiveElement = document.activeElement;\n\n      _this.bringFocusInsideOverlay();\n\n      _this.props.onEntered(node);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExit\", function () {\n      _this.handleBodyScroll(false);\n\n      safeInvoke(_this.props.onExit);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExiting\", function (node) {\n      document.body.removeEventListener('keydown', _this.onEsc, false);\n\n      _this.bringFocusBackToTarget();\n\n      _this.props.onExiting(node);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExited\", function (node) {\n      _this.setState({\n        exiting: false,\n        exited: true\n      });\n\n      _this.props.onExited(node);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBackdropClick\", function (e) {\n      if (e.target !== e.currentTarget || !_this.props.shouldCloseOnClick) {\n        return;\n      }\n\n      _this.close();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onContainerRef\", function (ref) {\n      _this.containerElement = ref;\n    });\n\n    _this.state = {\n      exiting: false,\n      exited: !props.isShown\n    };\n    return _this;\n  }\n\n  _createClass(Overlay, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.isShown && this.props.isShown) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          exited: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleBodyScroll(false);\n      document.body.removeEventListener('keydown', this.onEsc, false);\n    }\n    /**\n     * Methods borrowed from BlueprintJS\n     * https://github.com/palantir/blueprint/blob/release/2.0.0/packages/core/src/components/overlay/overlay.tsx\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          _this$props$container = _this$props.containerProps,\n          containerProps = _this$props$container === void 0 ? {} : _this$props$container,\n          isShown = _this$props.isShown,\n          children = _this$props.children;\n      var _this$state = this.state,\n          exiting = _this$state.exiting,\n          exited = _this$state.exited;\n      if (exited) return null;\n      return React.createElement(Stack, {\n        value: StackingOrder.OVERLAY\n      }, function (zIndex) {\n        return React.createElement(Portal, null, React.createElement(Transition, {\n          appear: true,\n          unmountOnExit: true,\n          timeout: ANIMATION_DURATION,\n          \"in\": isShown && !exiting,\n          onExit: _this2.handleExit,\n          onExiting: _this2.handleExiting,\n          onExited: _this2.handleExited,\n          onEnter: _this2.handleEnter,\n          onEntering: _this2.handleEntering,\n          onEntered: _this2.handleEntered\n        }, function (state) {\n          return React.createElement(Box, _extends({\n            onClick: _this2.handleBackdropClick,\n            innerRef: _this2.onContainerRef,\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            zIndex: zIndex,\n            \"data-state\": state\n          }, containerProps, {\n            className: cx(containerProps.className, css(animationStyles(theme.overlayBackgroundColor)).toString())\n          }), typeof children === 'function' ? children({\n            state: state,\n            close: _this2.close\n          }) : children);\n        }));\n      });\n    }\n  }]);\n\n  return Overlay;\n}(React.Component);\n\nOverlay.displayName = \"Overlay\";\n\n_defineProperty(Overlay, \"propTypes\", {\n  /**\n   * Children can be a node or a function accepting `close: func`\n   * and `state: ENTERING | ENTERED | EXITING | EXITED`.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Props to be passed through on the inner Box.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Whether or not to prevent body scrolling outside the context of the overlay\n   */\n  preventBodyScrolling: PropTypes.bool,\n\n  /**\n   * Boolean indicating if clicking the overlay should close the overlay.\n   */\n  shouldCloseOnClick: PropTypes.bool,\n\n  /**\n   * Boolean indicating if pressing the esc key should close the overlay.\n   */\n  shouldCloseOnEscapePress: PropTypes.bool,\n\n  /**\n   * Function called when overlay is about to close.\n   * Return `false` to prevent the sheet from closing.\n   * type: `Function -> Boolean`\n   */\n  onBeforeClose: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   * type: `Function(node: HtmlElement) -> void`\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   * type: `Function(node: HtmlElement) -> void`\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   * type: `Function(exitState: Any?, node: HtmlElement) -> void`\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Theme provided by ThemeProvider.\n   */\n  theme: PropTypes.object.isRequired\n});\n\n_defineProperty(Overlay, \"defaultProps\", {\n  onHide: function onHide() {},\n  shouldCloseOnClick: true,\n  shouldCloseOnEscapePress: true,\n  preventBodyScrolling: false,\n  onExit: function onExit() {},\n  onExiting: function onExiting() {},\n  onExited: function onExited() {},\n  onEnter: function onEnter() {},\n  onEntering: function onEntering() {},\n  onEntered: function onEntered() {}\n});\n\nexport default withTheme(Overlay);","map":{"version":3,"sources":["../../../src/overlay/src/Overlay.js"],"names":["animationEasing","standard","deceleration","acceleration","sharp","spring","ANIMATION_DURATION","fadeInAnimation","from","opacity","to","fadeOutAnimation","animationStyles","backgroundColor","left","top","position","display","width","height","content","animation","Overlay","React","Component","children","PropTypes","isShown","containerProps","preventBodyScrolling","shouldCloseOnClick","shouldCloseOnEscapePress","onBeforeClose","onExit","onExiting","onExited","onEnter","onEntering","onEntered","theme","isRequired","onHide","exiting","exited","props","prevProps","document","requestAnimationFrame","isFocusOutsideModal","autofocusElement","wrapperElement","buttonElement","isFocusInsideModal","e","shouldClose","safeInvoke","preventBodyScroll","StackingOrder","OVERLAY","handleEntered","state","cx","css","close","withTheme"],"mappings":"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","sourcesContent":["import cx from 'classnames'\nimport { css } from 'glamor'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Transition from 'react-transition-group/Transition'\nimport Box from 'ui-box'\nimport { Portal } from '../../portal'\nimport { Stack } from '../../stack'\nimport { StackingOrder } from '../../constants'\nimport { withTheme } from '../../theme'\nimport safeInvoke from '../../lib/safe-invoke'\nimport preventBodyScroll from '../../lib/prevent-body-scroll'\n\nconst animationEasing = {\n  standard: `cubic-bezier(0.4, 0.0, 0.2, 1)`,\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`,\n  sharp: `cubic-bezier(0.4, 0.0, 0.6, 1)`,\n  spring: `cubic-bezier(0.175, 0.885, 0.320, 1.175)`\n}\n\nconst ANIMATION_DURATION = 240\n\nconst fadeInAnimation = css.keyframes('fadeInAnimation', {\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n})\n\nconst fadeOutAnimation = css.keyframes('fadeOutAnimation', {\n  from: {\n    opacity: 1\n  },\n  to: {\n    opacity: 0\n  }\n})\n\nconst animationStyles = backgroundColor => ({\n  '&::before': {\n    backgroundColor,\n    left: 0,\n    top: 0,\n    position: 'fixed',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    content: '\" \"'\n  },\n  '&[data-state=\"entering\"]::before, &[data-state=\"entered\"]::before': {\n    animation: `${fadeInAnimation} ${ANIMATION_DURATION}ms ${\n      animationEasing.deceleration\n    } both`\n  },\n  '&[data-state=\"exiting\"]::before, &[data-state=\"exited\"]::before': {\n    animation: `${fadeOutAnimation} ${ANIMATION_DURATION}ms ${\n      animationEasing.acceleration\n    } both`\n  }\n})\n\n/**\n * Overlay is essentially a wrapper around react-transition-group/Transition\n * Learn more: https://reactcommunity.org/react-transition-group/\n */\nclass Overlay extends React.Component {\n  static propTypes = {\n    /**\n     * Children can be a node or a function accepting `close: func`\n     * and `state: ENTERING | ENTERED | EXITING | EXITED`.\n     */\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n    /**\n     * Show the component; triggers the enter or exit states.\n     */\n    isShown: PropTypes.bool,\n\n    /**\n     * Props to be passed through on the inner Box.\n     */\n    containerProps: PropTypes.object,\n\n    /**\n     * Whether or not to prevent body scrolling outside the context of the overlay\n     */\n    preventBodyScrolling: PropTypes.bool,\n\n    /**\n     * Boolean indicating if clicking the overlay should close the overlay.\n     */\n    shouldCloseOnClick: PropTypes.bool,\n\n    /**\n     * Boolean indicating if pressing the esc key should close the overlay.\n     */\n    shouldCloseOnEscapePress: PropTypes.bool,\n\n    /**\n     * Function called when overlay is about to close.\n     * Return `false` to prevent the sheet from closing.\n     * type: `Function -> Boolean`\n     */\n    onBeforeClose: PropTypes.func,\n\n    /**\n     * Callback fired before the \"exiting\" status is applied.\n     * type: `Function(node: HtmlElement) -> void`\n     */\n    onExit: PropTypes.func,\n\n    /**\n     * Callback fired after the \"exiting\" status is applied.\n     * type: `Function(node: HtmlElement) -> void`\n     */\n    onExiting: PropTypes.func,\n\n    /**\n     * Callback fired after the \"exited\" status is applied.\n     * type: `Function(exitState: Any?, node: HtmlElement) -> void`\n     */\n    onExited: PropTypes.func,\n\n    /**\n     * Callback fired before the \"entering\" status is applied.\n     * An extra parameter isAppearing is supplied to indicate if the enter stage\n     * is occurring on the initial mount.\n     *\n     * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n     */\n    onEnter: PropTypes.func,\n\n    /**\n     * Callback fired after the \"entering\" status is applied.\n     * An extra parameter isAppearing is supplied to indicate if the enter stage\n     * is occurring on the initial mount.\n     *\n     * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n     */\n    onEntering: PropTypes.func,\n\n    /**\n     * Callback fired after the \"entered\" status is applied.\n     * An extra parameter isAppearing is supplied to indicate if the enter stage\n     * is occurring on the initial mount.\n     *\n     * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n     */\n    onEntered: PropTypes.func,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    onHide: () => {},\n    shouldCloseOnClick: true,\n    shouldCloseOnEscapePress: true,\n    preventBodyScrolling: false,\n    onExit: () => {},\n    onExiting: () => {},\n    onExited: () => {},\n    onEnter: () => {},\n    onEntering: () => {},\n    onEntered: () => {}\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      exiting: false,\n      exited: !props.isShown\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.isShown && this.props.isShown) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        exited: false\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.handleBodyScroll(false)\n    document.body.removeEventListener('keydown', this.onEsc, false)\n  }\n\n  /**\n   * Methods borrowed from BlueprintJS\n   * https://github.com/palantir/blueprint/blob/release/2.0.0/packages/core/src/components/overlay/overlay.tsx\n   */\n  bringFocusInsideOverlay = () => {\n    // Always delay focus manipulation to just before repaint to prevent scroll jumping\n    return requestAnimationFrame(() => {\n      // Container ref may be undefined between component mounting and Portal rendering\n      // activeElement may be undefined in some rare cases in IE\n\n      if (\n        this.containerElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        document.activeElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        !this.props.isShown\n      ) {\n        return\n      }\n\n      const isFocusOutsideModal = !this.containerElement.contains(\n        document.activeElement\n      )\n      if (isFocusOutsideModal) {\n        // Element marked autofocus has higher priority than the other clowns\n        const autofocusElement = this.containerElement.querySelector(\n          '[autofocus]'\n        )\n        const wrapperElement = this.containerElement.querySelector('[tabindex]')\n        const buttonElement = this.containerElement.querySelector('button')\n\n        if (autofocusElement) {\n          autofocusElement.focus()\n        } else if (wrapperElement) {\n          wrapperElement.focus()\n        } else if (buttonElement) {\n          buttonElement.focus()\n        }\n      }\n    })\n  }\n\n  bringFocusBackToTarget = () => {\n    return requestAnimationFrame(() => {\n      if (\n        this.containerElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        document.activeElement == null // eslint-disable-line eqeqeq, no-eq-null\n      ) {\n        return\n      }\n\n      const isFocusInsideModal = this.containerElement.contains(\n        document.activeElement\n      )\n\n      // Bring back focus on the target.\n      if (\n        this.previousActiveElement &&\n        (document.activeElement === document.body || isFocusInsideModal)\n      ) {\n        this.previousActiveElement.focus()\n      }\n    })\n  }\n\n  onEsc = e => {\n    // Esc key\n    if (e.keyCode === 27 && this.props.shouldCloseOnEscapePress) {\n      this.close()\n    }\n  }\n\n  close = () => {\n    const shouldClose = safeInvoke(this.props.onBeforeClose)\n    if (shouldClose !== false) {\n      this.setState({ exiting: true })\n    }\n  }\n\n  handleBodyScroll = preventScroll => {\n    if (this.props.preventBodyScrolling) {\n      preventBodyScroll(preventScroll)\n    }\n  }\n\n  handleEnter = () => {\n    this.handleBodyScroll(true)\n    safeInvoke(this.props.onEnter)\n  }\n\n  handleEntering = node => {\n    document.body.addEventListener('keydown', this.onEsc, false)\n    this.props.onEntering(node)\n  }\n\n  handleEntered = node => {\n    this.previousActiveElement = document.activeElement\n    this.bringFocusInsideOverlay()\n    this.props.onEntered(node)\n  }\n\n  handleExit = () => {\n    this.handleBodyScroll(false)\n    safeInvoke(this.props.onExit)\n  }\n\n  handleExiting = node => {\n    document.body.removeEventListener('keydown', this.onEsc, false)\n    this.bringFocusBackToTarget()\n    this.props.onExiting(node)\n  }\n\n  handleExited = node => {\n    this.setState({ exiting: false, exited: true })\n    this.props.onExited(node)\n  }\n\n  handleBackdropClick = e => {\n    if (e.target !== e.currentTarget || !this.props.shouldCloseOnClick) {\n      return\n    }\n\n    this.close()\n  }\n\n  onContainerRef = ref => {\n    this.containerElement = ref\n  }\n\n  render() {\n    const {\n      theme,\n\n      containerProps = {},\n      isShown,\n      children\n    } = this.props\n\n    const { exiting, exited } = this.state\n\n    if (exited) return null\n\n    return (\n      <Stack value={StackingOrder.OVERLAY}>\n        {zIndex => (\n          <Portal>\n            <Transition\n              appear\n              unmountOnExit\n              timeout={ANIMATION_DURATION}\n              in={isShown && !exiting}\n              onExit={this.handleExit}\n              onExiting={this.handleExiting}\n              onExited={this.handleExited}\n              onEnter={this.handleEnter}\n              onEntering={this.handleEntering}\n              onEntered={this.handleEntered}\n            >\n              {state => (\n                <Box\n                  onClick={this.handleBackdropClick}\n                  innerRef={this.onContainerRef}\n                  position=\"fixed\"\n                  top={0}\n                  left={0}\n                  right={0}\n                  bottom={0}\n                  zIndex={zIndex}\n                  data-state={state}\n                  {...containerProps}\n                  className={cx(\n                    containerProps.className,\n                    css(animationStyles(theme.overlayBackgroundColor)).toString()\n                  )}\n                >\n                  {typeof children === 'function'\n                    ? children({\n                        state,\n                        close: this.close\n                      })\n                    : children}\n                </Box>\n              )}\n            </Transition>\n          </Portal>\n        )}\n      </Stack>\n    )\n  }\n}\n\nexport default withTheme(Overlay)\n"]},"metadata":{},"sourceType":"module"}