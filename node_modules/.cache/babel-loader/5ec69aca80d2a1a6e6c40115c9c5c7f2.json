{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport { Paragraph } from '../../typography';\n\nvar FormFieldHint = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormFieldHint, _PureComponent);\n\n  function FormFieldHint() {\n    _classCallCheck(this, FormFieldHint);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormFieldHint).apply(this, arguments));\n  }\n\n  _createClass(FormFieldHint, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Paragraph, _extends({\n        marginTop: 0,\n        size: 300,\n        color: \"muted\"\n      }, this.props));\n    }\n  }]);\n\n  return FormFieldHint;\n}(PureComponent);\n\nFormFieldHint.displayName = \"FormFieldHint\";\n\n_defineProperty(FormFieldHint, \"propTypes\", _objectSpread({}, Paragraph.propTypes));\n\nexport { FormFieldHint as default };","map":{"version":3,"sources":["../../../src/form-field/src/FormFieldHint.js"],"names":["FormFieldHint","PureComponent","Paragraph","propTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,SAAA,SAAA,QAAA,kBAAA;;IAEqBA,a;;;;;;;;;;;6BAQV;AACP,aAAO,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AAAW,QAAA,SAAS,EAApB,CAAA;AAAyB,QAAA,IAAI,EAA7B,GAAA;AAAoC,QAAA,KAAK,EAAC;AAA1C,OAAA,EAAsD,KAA7D,KAAO,CAAA,CAAP;AACD;;;;EAVwCC,a;;AAAtBD,a,YAAAA,G,eAAAA;;gBAAAA,a,iCAKdE,SAAS,CAACC,S;;SALIH,a","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Paragraph } from '../../typography'\n\nexport default class FormFieldHint extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the Paragraph component as the base.\n     */\n    ...Paragraph.propTypes\n  }\n\n  render() {\n    return <Paragraph marginTop={0} size={300} color=\"muted\" {...this.props} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}