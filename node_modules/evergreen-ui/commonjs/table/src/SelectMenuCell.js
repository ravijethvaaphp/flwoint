"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = _interopRequireDefault(require("lodash.debounce"));

var _theme = require("../../theme");

var _selectMenu = require("../../select-menu");

var _icons = require("../../icons");

var _TextTableCell = _interopRequireDefault(require("./TextTableCell"));

var _TableCell = _interopRequireDefault(require("./TableCell"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var MIN_SELECT_MENU_WIDTH = 240;

var SelectMenuCell =
/*#__PURE__*/
function (_React$PureComponent) {
  (0, _inherits2["default"])(SelectMenuCell, _React$PureComponent);

  function SelectMenuCell(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, SelectMenuCell);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(SelectMenuCell).call(this, props));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      targetWidth: MIN_SELECT_MENU_WIDTH,
      shouldClickToggle: false,
      isFocused: false
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onResize", function () {
      _this.updateOnResize();
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "updateOnResize", function () {
      if (!_this.mainRef) return;
      var targetWidth = _this.mainRef.offsetWidth;

      _this.setState({
        targetWidth: Math.max(MIN_SELECT_MENU_WIDTH, targetWidth)
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onMainRef", function (getRef, ref) {
      _this.mainRef = ref;
      getRef(ref);
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "onOverlayRef", function (ref) {
      _this.overlayRef = ref;
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleKeyDown", function (toggle, isShown, e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        e.stopPropagation();

        if (!isShown && _this.props.isSelectable && !_this.props.disabled) {
          toggle();
        }
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleDoubleClick", function (toggle, isShown) {
      if (!isShown && _this.props.isSelectable && !_this.props.disabled) {
        toggle();
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (toggle, isShown) {
      var shouldClickToggle = _this.state.shouldClickToggle;

      if (!shouldClickToggle && !isShown) {
        _this.setState({
          shouldClickToggle: true
        });

        return;
      }

      if (_this.props.isSelectable && !_this.props.disabled) {
        toggle();

        _this.setState({
          shouldClickToggle: true
        });
      }
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleFocus", function () {
      _this.setState({
        isFocused: true
      });
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleBlur", function () {
      _this.setState({
        shouldClickToggle: false,
        isFocused: false
      });
    });
    _this.onResize = (0, _lodash["default"])(_this.onResize, 200);
    return _this;
  }

  (0, _createClass2["default"])(SelectMenuCell, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // Call this to initialize and set
      this.updateOnResize();
      window.addEventListener('resize', this.onResize, false);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.onResize);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          children = _this$props.children,
          theme = _this$props.theme,
          size = _this$props.size,
          selectMenuProps = _this$props.selectMenuProps,
          disabled = _this$props.disabled,
          placeholder = _this$props.placeholder,
          isSelectable = _this$props.isSelectable,
          _this$props$textProps = _this$props.textProps,
          textProps = _this$props$textProps === void 0 ? {} : _this$props$textProps,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["children", "theme", "size", "selectMenuProps", "disabled", "placeholder", "isSelectable", "textProps"]);
      var _this$state = this.state,
          targetWidth = _this$state.targetWidth,
          isFocused = _this$state.isFocused;
      var cursor = 'default';

      if (disabled) {
        cursor = 'not-allowed';
      } else if (isSelectable) {
        if (isFocused) {
          cursor = 'pointer';
        } else {
          cursor = 'default';
        }
      } else {
        cursor = 'text';
      }

      return _react["default"].createElement(_selectMenu.SelectMenu, (0, _extends2["default"])({
        width: targetWidth
      }, selectMenuProps), function (_ref) {
        var toggle = _ref.toggle,
            getRef = _ref.getRef,
            isShown = _ref.isShown;
        return _react["default"].createElement(_TextTableCell["default"], (0, _extends2["default"])({
          innerRef: _this2.onMainRef.bind(null, getRef),
          onClick: _this2.handleClick.bind(null, toggle, isShown),
          onFocus: _this2.handleFocus.bind(null, toggle, isShown),
          onBlur: _this2.handleBlur,
          isSelectable: isSelectable && !disabled,
          rightView: isSelectable ? _react["default"].createElement(_icons.CaretDownIcon, {
            color: "muted"
          }) : null,
          "aria-haspopup": true,
          "aria-expanded": isShown,
          cursor: isShown ? 'pointer' : cursor,
          textProps: _objectSpread({
            size: size,
            opacity: disabled || !children && placeholder ? 0.5 : 1
          }, textProps),
          onKeyDown: _this2.handleKeyDown.bind(null, toggle, isShown),
          onDoubleClick: _this2.handleDoubleClick.bind(null, toggle, isShown)
        }, props), children ? children : placeholder);
      });
    }
  }]);
  return SelectMenuCell;
}(_react["default"].PureComponent);

SelectMenuCell.displayName = "SelectMenuCell";
(0, _defineProperty2["default"])(SelectMenuCell, "propTypes", _objectSpread({}, _TableCell["default"].propTypes, {
  /*
   * Makes the TableCell focusable.
   * Will add tabIndex={-1 || this.props.tabIndex}.
   */
  isSelectable: _propTypes["default"].bool.isRequired,

  /**
   * When true, the cell can't be edited.
   */
  disabled: _propTypes["default"].bool,

  /**
   * Optional placeholder when children is falsy.
   */
  placeholder: _propTypes["default"].node,

  /**
   * The size used for the TextTableCell and Textarea.
   */
  size: _propTypes["default"].oneOf([300, 400]).isRequired,
  selectMenuProps: _propTypes["default"].object
}));
(0, _defineProperty2["default"])(SelectMenuCell, "defaultProps", {
  size: 300,
  isSelectable: true
});

var _default = (0, _theme.withTheme)(SelectMenuCell);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvU2VsZWN0TWVudUNlbGwuanMiXSwibmFtZXMiOlsiTUlOX1NFTEVDVF9NRU5VX1dJRFRIIiwiU2VsZWN0TWVudUNlbGwiLCJwcm9wcyIsInRhcmdldFdpZHRoIiwic2hvdWxkQ2xpY2tUb2dnbGUiLCJpc0ZvY3VzZWQiLCJ1cGRhdGVPblJlc2l6ZSIsIm1haW5SZWYiLCJvZmZzZXRXaWR0aCIsInNldFN0YXRlIiwiTWF0aCIsIm1heCIsImdldFJlZiIsInJlZiIsIm92ZXJsYXlSZWYiLCJ0b2dnbGUiLCJpc1Nob3duIiwiZSIsImtleSIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiaXNTZWxlY3RhYmxlIiwiZGlzYWJsZWQiLCJzdGF0ZSIsIm9uUmVzaXplIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjaGlsZHJlbiIsInRoZW1lIiwic2l6ZSIsInNlbGVjdE1lbnVQcm9wcyIsInBsYWNlaG9sZGVyIiwidGV4dFByb3BzIiwiY3Vyc29yIiwib25NYWluUmVmIiwiYmluZCIsImhhbmRsZUNsaWNrIiwiaGFuZGxlRm9jdXMiLCJoYW5kbGVCbHVyIiwib3BhY2l0eSIsImhhbmRsZUtleURvd24iLCJoYW5kbGVEb3VibGVDbGljayIsIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlRhYmxlQ2VsbCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImJvb2wiLCJpc1JlcXVpcmVkIiwibm9kZSIsIm9uZU9mIiwib2JqZWN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEscUJBQXFCLEdBQUcsR0FBOUI7O0lBRU1DLGM7Ozs7O0FBMENKLDBCQUFZQyxLQUFaLEVBQW1CO0FBQUE7O0FBQUE7QUFDakIsMEhBQU1BLEtBQU47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QUViOzs7O0FBSUF6QixFQUFBQSxZQUFZLEVBQUUwQixzQkFBVUMsSUFBVixDQUFlQyxVOztBQUU3Qjs7O0FBR0EzQixFQUFBQSxRQUFRLEVBQUV5QixzQkFBVUMsSTs7QUFFcEI7OztBQUdBaEIsRUFBQUEsV0FBVyxFQUFFZSxzQkFBVUcsSTs7QUFFdkI7OztBQUdBcEIsRUFBQUEsSUFBSSxFQUFFaUIsc0JBQVVJLEtBQVYsQ0FBZ0IsQ0FBQyxHQUFELEVBQU0sR0FBTixDQUFoQixFQUE0QkYsVTtBQUVsQ2xCLEVBQUFBLGVBQWUsRUFBRWdCLHNCQUFVSzs7aUNBNUJ6Qm5ELGMsa0JBK0JrQjtBQUNwQjZCLEVBQUFBLElBQUksRUFBRSxHQURjO0FBRXBCVCxFQUFBQSxZQUFZLEVBQUU7QUFGTSxDOztlQTBKVCxzQkFBVXBCLGNBQVYsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2guZGVib3VuY2UnXG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi90aGVtZSdcbmltcG9ydCB7IFNlbGVjdE1lbnUgfSBmcm9tICcuLi8uLi9zZWxlY3QtbWVudSdcbmltcG9ydCB7IENhcmV0RG93bkljb24gfSBmcm9tICcuLi8uLi9pY29ucydcbmltcG9ydCBUZXh0VGFibGVDZWxsIGZyb20gJy4vVGV4dFRhYmxlQ2VsbCdcbmltcG9ydCBUYWJsZUNlbGwgZnJvbSAnLi9UYWJsZUNlbGwnXG5cbmNvbnN0IE1JTl9TRUxFQ1RfTUVOVV9XSURUSCA9IDI0MFxuXG5jbGFzcyBTZWxlY3RNZW51Q2VsbCBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIENvbXBvc2VzIHRoZSBUYWJsZUNlbGwgY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgICAqL1xuICAgIC4uLlRhYmxlQ2VsbC5wcm9wVHlwZXMsXG5cbiAgICAvKlxuICAgICAqIE1ha2VzIHRoZSBUYWJsZUNlbGwgZm9jdXNhYmxlLlxuICAgICAqIFdpbGwgYWRkIHRhYkluZGV4PXstMSB8fCB0aGlzLnByb3BzLnRhYkluZGV4fS5cbiAgICAgKi9cbiAgICBpc1NlbGVjdGFibGU6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHRydWUsIHRoZSBjZWxsIGNhbid0IGJlIGVkaXRlZC5cbiAgICAgKi9cbiAgICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBPcHRpb25hbCBwbGFjZWhvbGRlciB3aGVuIGNoaWxkcmVuIGlzIGZhbHN5LlxuICAgICAqL1xuICAgIHBsYWNlaG9sZGVyOiBQcm9wVHlwZXMubm9kZSxcblxuICAgIC8qKlxuICAgICAqIFRoZSBzaXplIHVzZWQgZm9yIHRoZSBUZXh0VGFibGVDZWxsIGFuZCBUZXh0YXJlYS5cbiAgICAgKi9cbiAgICBzaXplOiBQcm9wVHlwZXMub25lT2YoWzMwMCwgNDAwXSkuaXNSZXF1aXJlZCxcblxuICAgIHNlbGVjdE1lbnVQcm9wczogUHJvcFR5cGVzLm9iamVjdFxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzaXplOiAzMDAsXG4gICAgaXNTZWxlY3RhYmxlOiB0cnVlXG4gIH1cblxuICBzdGF0ZSA9IHtcbiAgICB0YXJnZXRXaWR0aDogTUlOX1NFTEVDVF9NRU5VX1dJRFRILFxuICAgIHNob3VsZENsaWNrVG9nZ2xlOiBmYWxzZSxcbiAgICBpc0ZvY3VzZWQ6IGZhbHNlXG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKVxuICAgIHRoaXMub25SZXNpemUgPSBkZWJvdW5jZSh0aGlzLm9uUmVzaXplLCAyMDApXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAvLyBDYWxsIHRoaXMgdG8gaW5pdGlhbGl6ZSBhbmQgc2V0XG4gICAgdGhpcy51cGRhdGVPblJlc2l6ZSgpXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMub25SZXNpemUsIGZhbHNlKVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMub25SZXNpemUpXG4gIH1cblxuICBvblJlc2l6ZSA9ICgpID0+IHtcbiAgICB0aGlzLnVwZGF0ZU9uUmVzaXplKClcbiAgfVxuXG4gIHVwZGF0ZU9uUmVzaXplID0gKCkgPT4ge1xuICAgIGlmICghdGhpcy5tYWluUmVmKSByZXR1cm5cbiAgICBjb25zdCB0YXJnZXRXaWR0aCA9IHRoaXMubWFpblJlZi5vZmZzZXRXaWR0aFxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgdGFyZ2V0V2lkdGg6IE1hdGgubWF4KE1JTl9TRUxFQ1RfTUVOVV9XSURUSCwgdGFyZ2V0V2lkdGgpXG4gICAgfSlcbiAgfVxuXG4gIG9uTWFpblJlZiA9IChnZXRSZWYsIHJlZikgPT4ge1xuICAgIHRoaXMubWFpblJlZiA9IHJlZlxuICAgIGdldFJlZihyZWYpXG4gIH1cblxuICBvbk92ZXJsYXlSZWYgPSByZWYgPT4ge1xuICAgIHRoaXMub3ZlcmxheVJlZiA9IHJlZlxuICB9XG5cbiAgaGFuZGxlS2V5RG93biA9ICh0b2dnbGUsIGlzU2hvd24sIGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuXG4gICAgICBpZiAoIWlzU2hvd24gJiYgdGhpcy5wcm9wcy5pc1NlbGVjdGFibGUgJiYgIXRoaXMucHJvcHMuZGlzYWJsZWQpIHtcbiAgICAgICAgdG9nZ2xlKClcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBoYW5kbGVEb3VibGVDbGljayA9ICh0b2dnbGUsIGlzU2hvd24pID0+IHtcbiAgICBpZiAoIWlzU2hvd24gJiYgdGhpcy5wcm9wcy5pc1NlbGVjdGFibGUgJiYgIXRoaXMucHJvcHMuZGlzYWJsZWQpIHtcbiAgICAgIHRvZ2dsZSgpXG4gICAgfVxuICB9XG5cbiAgaGFuZGxlQ2xpY2sgPSAodG9nZ2xlLCBpc1Nob3duKSA9PiB7XG4gICAgY29uc3QgeyBzaG91bGRDbGlja1RvZ2dsZSB9ID0gdGhpcy5zdGF0ZVxuXG4gICAgaWYgKCFzaG91bGRDbGlja1RvZ2dsZSAmJiAhaXNTaG93bikge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHNob3VsZENsaWNrVG9nZ2xlOiB0cnVlXG4gICAgICB9KVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMuaXNTZWxlY3RhYmxlICYmICF0aGlzLnByb3BzLmRpc2FibGVkKSB7XG4gICAgICB0b2dnbGUoKVxuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHNob3VsZENsaWNrVG9nZ2xlOiB0cnVlXG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIGhhbmRsZUZvY3VzID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgaXNGb2N1c2VkOiB0cnVlXG4gICAgfSlcbiAgfVxuXG4gIGhhbmRsZUJsdXIgPSAoKSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzaG91bGRDbGlja1RvZ2dsZTogZmFsc2UsXG4gICAgICBpc0ZvY3VzZWQ6IGZhbHNlXG4gICAgfSlcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjaGlsZHJlbixcbiAgICAgIHRoZW1lLFxuICAgICAgc2l6ZSxcbiAgICAgIHNlbGVjdE1lbnVQcm9wcyxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICBpc1NlbGVjdGFibGUsXG4gICAgICB0ZXh0UHJvcHMgPSB7fSxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcbiAgICBjb25zdCB7IHRhcmdldFdpZHRoLCBpc0ZvY3VzZWQgfSA9IHRoaXMuc3RhdGVcblxuICAgIGxldCBjdXJzb3IgPSAnZGVmYXVsdCdcbiAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgIGN1cnNvciA9ICdub3QtYWxsb3dlZCdcbiAgICB9IGVsc2UgaWYgKGlzU2VsZWN0YWJsZSkge1xuICAgICAgaWYgKGlzRm9jdXNlZCkge1xuICAgICAgICBjdXJzb3IgPSAncG9pbnRlcidcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnNvciA9ICdkZWZhdWx0J1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjdXJzb3IgPSAndGV4dCdcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFNlbGVjdE1lbnUgd2lkdGg9e3RhcmdldFdpZHRofSB7Li4uc2VsZWN0TWVudVByb3BzfT5cbiAgICAgICAgeyh7IHRvZ2dsZSwgZ2V0UmVmLCBpc1Nob3duIH0pID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRleHRUYWJsZUNlbGxcbiAgICAgICAgICAgICAgaW5uZXJSZWY9e3RoaXMub25NYWluUmVmLmJpbmQobnVsbCwgZ2V0UmVmKX1cbiAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5oYW5kbGVDbGljay5iaW5kKG51bGwsIHRvZ2dsZSwgaXNTaG93bil9XG4gICAgICAgICAgICAgIG9uRm9jdXM9e3RoaXMuaGFuZGxlRm9jdXMuYmluZChudWxsLCB0b2dnbGUsIGlzU2hvd24pfVxuICAgICAgICAgICAgICBvbkJsdXI9e3RoaXMuaGFuZGxlQmx1cn1cbiAgICAgICAgICAgICAgaXNTZWxlY3RhYmxlPXtpc1NlbGVjdGFibGUgJiYgIWRpc2FibGVkfVxuICAgICAgICAgICAgICByaWdodFZpZXc9e2lzU2VsZWN0YWJsZSA/IDxDYXJldERvd25JY29uIGNvbG9yPVwibXV0ZWRcIiAvPiA6IG51bGx9XG4gICAgICAgICAgICAgIGFyaWEtaGFzcG9wdXBcbiAgICAgICAgICAgICAgYXJpYS1leHBhbmRlZD17aXNTaG93bn1cbiAgICAgICAgICAgICAgY3Vyc29yPXtpc1Nob3duID8gJ3BvaW50ZXInIDogY3Vyc29yfVxuICAgICAgICAgICAgICB0ZXh0UHJvcHM9e3tcbiAgICAgICAgICAgICAgICBzaXplLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IGRpc2FibGVkIHx8ICghY2hpbGRyZW4gJiYgcGxhY2Vob2xkZXIpID8gMC41IDogMSxcbiAgICAgICAgICAgICAgICAuLi50ZXh0UHJvcHNcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgb25LZXlEb3duPXt0aGlzLmhhbmRsZUtleURvd24uYmluZChudWxsLCB0b2dnbGUsIGlzU2hvd24pfVxuICAgICAgICAgICAgICBvbkRvdWJsZUNsaWNrPXt0aGlzLmhhbmRsZURvdWJsZUNsaWNrLmJpbmQobnVsbCwgdG9nZ2xlLCBpc1Nob3duKX1cbiAgICAgICAgICAgICAgey4uLnByb3BzfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7Y2hpbGRyZW4gPyBjaGlsZHJlbiA6IHBsYWNlaG9sZGVyfVxuICAgICAgICAgICAgPC9UZXh0VGFibGVDZWxsPlxuICAgICAgICAgIClcbiAgICAgICAgfX1cbiAgICAgIDwvU2VsZWN0TWVudT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKFNlbGVjdE1lbnVDZWxsKVxuIl19