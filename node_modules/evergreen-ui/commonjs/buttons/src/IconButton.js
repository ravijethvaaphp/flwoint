"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = require("ui-box");

var _icon = require("../../icon");

var _theme = require("../../theme");

var _Button = _interopRequireDefault(require("./Button"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var IconButton =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2["default"])(IconButton, _PureComponent);

  function IconButton() {
    (0, _classCallCheck2["default"])(this, IconButton);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(IconButton).apply(this, arguments));
  }

  (0, _createClass2["default"])(IconButton, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          icon = _this$props.icon,
          iconSize = _this$props.iconSize,
          height = _this$props.height,
          intent = _this$props.intent,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["theme", "icon", "iconSize", "height", "intent"]);
      var size = iconSize || theme.getIconSizeForIconButton(height);
      return _react["default"].createElement(_Button["default"], (0, _extends2["default"])({
        intent: intent,
        height: height,
        width: height,
        paddingLeft: 0,
        paddingRight: 0,
        display: "flex",
        justifyContent: "center"
      }, props), _react["default"].createElement(_icon.Icon, {
        icon: icon,
        size: size,
        color: intent === 'none' ? 'default' : 'currentColor'
      }));
    }
  }]);
  return IconButton;
}(_react.PureComponent);

IconButton.displayName = "IconButton";
(0, _defineProperty2["default"])(IconButton, "propTypes", _objectSpread({}, _uiBox.dimensions.propTypes, {}, _uiBox.spacing.propTypes, {}, _uiBox.position.propTypes, {}, _uiBox.layout.propTypes, {
  /**
   * Name of the icon, or an icon element to render.
   * This prop is required because it determines the content of the component, but it can
   * be explicitly set to falsy values to render nothing.
   *
   * - If `null` or `undefined` or `false`, this component will render nothing.
   * - If given an IconName string literal, it will render the corresponding Evergreen icon
   * - If given a valid React element reference, it will be rendered with the other icon props
   * - Any other value will be returned as a pass-through (as if you didn't use `<Icon />`)
   */
  icon: _propTypes["default"].oneOfType([_propTypes["default"].elementType, _propTypes["default"].element, _propTypes["default"].string]),

  /**
   * Specifies an explicit icon size instead of the default value
   */
  iconSize: _propTypes["default"].number,

  /**
   * The intent of the button.
   */
  intent: _propTypes["default"].oneOf(['none', 'success', 'warning', 'danger']).isRequired,

  /**
   * The appearance of the button.
   */
  appearance: _propTypes["default"].oneOf(['default', 'minimal', 'primary']).isRequired,

  /**
   * Forcefully set the active state of a button.
   * Useful in conjuction with a Popover.
   */
  isActive: _propTypes["default"].bool,

  /**
   * When true, the button is disabled.
   * isLoading also sets the button to disabled.
   */
  disabled: _propTypes["default"].bool,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: _propTypes["default"].object.isRequired,

  /**
   * Class name passed to the button.
   * Only use if you know what you are doing.
   */
  className: _propTypes["default"].string
}));
(0, _defineProperty2["default"])(IconButton, "defaultProps", {
  intent: 'none',
  appearance: 'default',
  height: 32
});

var _default = (0, _theme.withTheme)(IconButton);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idXR0b25zL3NyYy9JY29uQnV0dG9uLmpzIl0sIm5hbWVzIjpbIkljb25CdXR0b24iLCJwcm9wcyIsInRoZW1lIiwiaWNvbiIsImljb25TaXplIiwiaGVpZ2h0IiwiaW50ZW50Iiwic2l6ZSIsImdldEljb25TaXplRm9ySWNvbkJ1dHRvbiIsIlB1cmVDb21wb25lbnQiLCJkaW1lbnNpb25zIiwicHJvcFR5cGVzIiwic3BhY2luZyIsInBvc2l0aW9uIiwibGF5b3V0IiwiUHJvcFR5cGVzIiwib25lT2ZUeXBlIiwiZWxlbWVudFR5cGUiLCJlbGVtZW50Iiwic3RyaW5nIiwibnVtYmVyIiwib25lT2YiLCJpc1JlcXVpcmVkIiwiYXBwZWFyYW5jZSIsImlzQWN0aXZlIiwiYm9vbCIsImRpc2FibGVkIiwib2JqZWN0IiwiY2xhc3NOYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0lBRU1BLFU7Ozs7Ozs7Ozs7Ozs2QkFvRks7QUFBQSx3QkFDcUQsS0FBS0MsS0FEMUQ7QUFBQSxVQUNDQyxLQURELGVBQ0NBLEtBREQ7QUFBQSxVQUNRQyxJQURSLGVBQ1FBLElBRFI7QUFBQSxVQUNjQyxRQURkLGVBQ2NBLFFBRGQ7QUFBQSxVQUN3QkMsTUFEeEIsZUFDd0JBLE1BRHhCO0FBQUEsVUFDZ0NDLE1BRGhDLGVBQ2dDQSxNQURoQztBQUFBLFVBQzJDTCxLQUQzQztBQUVQLFVBQU1NLElBQUksR0FBR0gsUUFBUSxJQUFJRixLQUFLLENBQUNNLHdCQUFOLENBQStCSCxNQUEvQixDQUF6QjtBQUVBLGFBQ0UsZ0NBQUMsa0JBQUQ7QUFDRSxRQUFBLE1BQU0sRUFBRUMsTUFEVjtBQUVFLFFBQUEsTUFBTSxFQUFFRCxNQUZWO0FBR0UsUUFBQSxLQUFLLEVBQUVBLE1BSFQ7QUFJRSxRQUFBLFdBQVcsRUFBRSxDQUpmO0FBS0UsUUFBQSxZQUFZLEVBQUUsQ0FMaEI7QUFNRSxRQUFBLE9BQU8sRUFBQyxNQU5WO0FBT0UsUUFBQSxjQUFjLEVBQUM7QUFQakIsU0FRTUosS0FSTixHQVVFLGdDQUFDLFVBQUQ7QUFDRSxRQUFBLElBQUksRUFBRUUsSUFEUjtBQUVFLFFBQUEsSUFBSSxFQUFFSSxJQUZSO0FBR0UsUUFBQSxLQUFLLEVBQUVELE1BQU0sS0FBSyxNQUFYLEdBQW9CLFNBQXBCLEdBQWdDO0FBSHpDLFFBVkYsQ0FERjtBQWtCRDs7O0VBMUdzQkcsb0I7O0FBQW5CVCxVO2lDQUFBQSxVLGlDQUtDVSxrQkFBV0MsUyxNQUtYQyxlQUFRRCxTLE1BS1JFLGdCQUFTRixTLE1BS1RHLGNBQU9ILFM7QUFFVjs7Ozs7Ozs7OztBQVVBUixFQUFBQSxJQUFJLEVBQUVZLHNCQUFVQyxTQUFWLENBQW9CLENBQ3hCRCxzQkFBVUUsV0FEYyxFQUV4QkYsc0JBQVVHLE9BRmMsRUFHeEJILHNCQUFVSSxNQUhjLENBQXBCLEM7O0FBTU47OztBQUdBZixFQUFBQSxRQUFRLEVBQUVXLHNCQUFVSyxNOztBQUVwQjs7O0FBR0FkLEVBQUFBLE1BQU0sRUFBRVMsc0JBQVVNLEtBQVYsQ0FBZ0IsQ0FBQyxNQUFELEVBQVMsU0FBVCxFQUFvQixTQUFwQixFQUErQixRQUEvQixDQUFoQixFQUNMQyxVOztBQUVIOzs7QUFHQUMsRUFBQUEsVUFBVSxFQUFFUixzQkFBVU0sS0FBVixDQUFnQixDQUFDLFNBQUQsRUFBWSxTQUFaLEVBQXVCLFNBQXZCLENBQWhCLEVBQW1EQyxVOztBQUUvRDs7OztBQUlBRSxFQUFBQSxRQUFRLEVBQUVULHNCQUFVVSxJOztBQUVwQjs7OztBQUlBQyxFQUFBQSxRQUFRLEVBQUVYLHNCQUFVVSxJOztBQUVwQjs7O0FBR0F2QixFQUFBQSxLQUFLLEVBQUVhLHNCQUFVWSxNQUFWLENBQWlCTCxVOztBQUV4Qjs7OztBQUlBTSxFQUFBQSxTQUFTLEVBQUViLHNCQUFVSTs7aUNBM0VuQm5CLFUsa0JBOEVrQjtBQUNwQk0sRUFBQUEsTUFBTSxFQUFFLE1BRFk7QUFFcEJpQixFQUFBQSxVQUFVLEVBQUUsU0FGUTtBQUdwQmxCLEVBQUFBLE1BQU0sRUFBRTtBQUhZLEM7O2VBK0JULHNCQUFVTCxVQUFWLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgZGltZW5zaW9ucywgc3BhY2luZywgcG9zaXRpb24sIGxheW91dCB9IGZyb20gJ3VpLWJveCdcbmltcG9ydCB7IEljb24gfSBmcm9tICcuLi8uLi9pY29uJ1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUnXG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJ1xuXG5jbGFzcyBJY29uQnV0dG9uIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIGRpbWVuc2lvbnMgc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgICAqL1xuICAgIC4uLmRpbWVuc2lvbnMucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIHNwYWNpbmcgc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgICAqL1xuICAgIC4uLnNwYWNpbmcucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIHBvc2l0aW9uIHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICAgKi9cbiAgICAuLi5wb3NpdGlvbi5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyB0aGUgbGF5b3V0IHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICAgKi9cbiAgICAuLi5sYXlvdXQucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogTmFtZSBvZiB0aGUgaWNvbiwgb3IgYW4gaWNvbiBlbGVtZW50IHRvIHJlbmRlci5cbiAgICAgKiBUaGlzIHByb3AgaXMgcmVxdWlyZWQgYmVjYXVzZSBpdCBkZXRlcm1pbmVzIHRoZSBjb250ZW50IG9mIHRoZSBjb21wb25lbnQsIGJ1dCBpdCBjYW5cbiAgICAgKiBiZSBleHBsaWNpdGx5IHNldCB0byBmYWxzeSB2YWx1ZXMgdG8gcmVuZGVyIG5vdGhpbmcuXG4gICAgICpcbiAgICAgKiAtIElmIGBudWxsYCBvciBgdW5kZWZpbmVkYCBvciBgZmFsc2VgLCB0aGlzIGNvbXBvbmVudCB3aWxsIHJlbmRlciBub3RoaW5nLlxuICAgICAqIC0gSWYgZ2l2ZW4gYW4gSWNvbk5hbWUgc3RyaW5nIGxpdGVyYWwsIGl0IHdpbGwgcmVuZGVyIHRoZSBjb3JyZXNwb25kaW5nIEV2ZXJncmVlbiBpY29uXG4gICAgICogLSBJZiBnaXZlbiBhIHZhbGlkIFJlYWN0IGVsZW1lbnQgcmVmZXJlbmNlLCBpdCB3aWxsIGJlIHJlbmRlcmVkIHdpdGggdGhlIG90aGVyIGljb24gcHJvcHNcbiAgICAgKiAtIEFueSBvdGhlciB2YWx1ZSB3aWxsIGJlIHJldHVybmVkIGFzIGEgcGFzcy10aHJvdWdoIChhcyBpZiB5b3UgZGlkbid0IHVzZSBgPEljb24gLz5gKVxuICAgICAqL1xuICAgIGljb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgUHJvcFR5cGVzLmVsZW1lbnRUeXBlLFxuICAgICAgUHJvcFR5cGVzLmVsZW1lbnQsXG4gICAgICBQcm9wVHlwZXMuc3RyaW5nXG4gICAgXSksXG5cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgYW4gZXhwbGljaXQgaWNvbiBzaXplIGluc3RlYWQgb2YgdGhlIGRlZmF1bHQgdmFsdWVcbiAgICAgKi9cbiAgICBpY29uU2l6ZTogUHJvcFR5cGVzLm51bWJlcixcblxuICAgIC8qKlxuICAgICAqIFRoZSBpbnRlbnQgb2YgdGhlIGJ1dHRvbi5cbiAgICAgKi9cbiAgICBpbnRlbnQ6IFByb3BUeXBlcy5vbmVPZihbJ25vbmUnLCAnc3VjY2VzcycsICd3YXJuaW5nJywgJ2RhbmdlciddKVxuICAgICAgLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgYXBwZWFyYW5jZSBvZiB0aGUgYnV0dG9uLlxuICAgICAqL1xuICAgIGFwcGVhcmFuY2U6IFByb3BUeXBlcy5vbmVPZihbJ2RlZmF1bHQnLCAnbWluaW1hbCcsICdwcmltYXJ5J10pLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBGb3JjZWZ1bGx5IHNldCB0aGUgYWN0aXZlIHN0YXRlIG9mIGEgYnV0dG9uLlxuICAgICAqIFVzZWZ1bCBpbiBjb25qdWN0aW9uIHdpdGggYSBQb3BvdmVyLlxuICAgICAqL1xuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIFdoZW4gdHJ1ZSwgdGhlIGJ1dHRvbiBpcyBkaXNhYmxlZC5cbiAgICAgKiBpc0xvYWRpbmcgYWxzbyBzZXRzIHRoZSBidXR0b24gdG8gZGlzYWJsZWQuXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBwYXNzZWQgdG8gdGhlIGJ1dHRvbi5cbiAgICAgKiBPbmx5IHVzZSBpZiB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuXG4gICAgICovXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGludGVudDogJ25vbmUnLFxuICAgIGFwcGVhcmFuY2U6ICdkZWZhdWx0JyxcbiAgICBoZWlnaHQ6IDMyXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyB0aGVtZSwgaWNvbiwgaWNvblNpemUsIGhlaWdodCwgaW50ZW50LCAuLi5wcm9wcyB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IHNpemUgPSBpY29uU2l6ZSB8fCB0aGVtZS5nZXRJY29uU2l6ZUZvckljb25CdXR0b24oaGVpZ2h0KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxCdXR0b25cbiAgICAgICAgaW50ZW50PXtpbnRlbnR9XG4gICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICB3aWR0aD17aGVpZ2h0fVxuICAgICAgICBwYWRkaW5nTGVmdD17MH1cbiAgICAgICAgcGFkZGluZ1JpZ2h0PXswfVxuICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCJcbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgPlxuICAgICAgICA8SWNvblxuICAgICAgICAgIGljb249e2ljb259XG4gICAgICAgICAgc2l6ZT17c2l6ZX1cbiAgICAgICAgICBjb2xvcj17aW50ZW50ID09PSAnbm9uZScgPyAnZGVmYXVsdCcgOiAnY3VycmVudENvbG9yJ31cbiAgICAgICAgLz5cbiAgICAgIDwvQnV0dG9uPlxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoSWNvbkJ1dHRvbilcbiJdfQ==