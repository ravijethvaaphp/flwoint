"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = require("ui-box");

var _typography = require("../../typography");

var _icon = require("../../icon");

var _spinner = require("../../spinner");

var _theme = require("../../theme");

var _icons = require("../../icons");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var TextDropdownButton =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2["default"])(TextDropdownButton, _PureComponent);

  function TextDropdownButton() {
    (0, _classCallCheck2["default"])(this, TextDropdownButton);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(TextDropdownButton).apply(this, arguments));
  }

  (0, _createClass2["default"])(TextDropdownButton, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          className = _this$props.className,
          intent = _this$props.intent,
          height = _this$props.height,
          isActive = _this$props.isActive,
          children = _this$props.children,
          disabled = _this$props.disabled,
          appearance = _this$props.appearance,
          isLoading = _this$props.isLoading,
          paddingRight = _this$props.paddingRight,
          paddingLeft = _this$props.paddingLeft,
          paddingTop = _this$props.paddingTop,
          paddingBottom = _this$props.paddingBottom,
          icon = _this$props.icon,
          props = (0, _objectWithoutProperties2["default"])(_this$props, ["theme", "className", "intent", "height", "isActive", "children", "disabled", "appearance", "isLoading", "paddingRight", "paddingLeft", "paddingTop", "paddingBottom", "icon"]);
      var themedClassName = theme.getTextDropdownButtonClassName();
      return _react["default"].createElement(_typography.Text, (0, _extends2["default"])({
        is: "button",
        className: themedClassName,
        paddingX: 4,
        marginX: -4,
        paddingY: 2,
        marginY: -2,
        size: 300,
        "data-active": isActive
      }, TextDropdownButton.styles, props, {
        disabled: disabled
      }), isLoading && _react["default"].createElement(_spinner.Spinner, {
        marginLeft: -Math.round(height / 8),
        marginRight: Math.round(height / 4),
        size: Math.round(height / 2)
      }), children, _react["default"].createElement(_icon.Icon, {
        color: "default",
        icon: icon,
        size: 12,
        marginLeft: 2
      }));
    }
  }]);
  return TextDropdownButton;
}(_react.PureComponent);

TextDropdownButton.displayName = "TextDropdownButton";
(0, _defineProperty2["default"])(TextDropdownButton, "propTypes", _objectSpread({}, _uiBox.dimensions.propTypes, {}, _uiBox.spacing.propTypes, {}, _uiBox.position.propTypes, {}, _uiBox.layout.propTypes, {
  /**
   * Forcefully set the active state of a button.
   * Useful in conjuction with a Popover.
   */
  isActive: _propTypes["default"].bool,

  /**
   * When true, the button is disabled.
   * isLoading also sets the button to disabled.
   */
  disabled: _propTypes["default"].bool,

  /**
   * Name of the icon, or an icon element to render.
   * This prop is required because it determines the content of the component, but it can
   * be explicitly set to falsy values to render nothing.
   *
   * - If `null` or `undefined` or `false`, this component will render nothing.
   * - If given an IconName string literal, it will render the corresponding Evergreen icon
   * - If given a valid React element reference, it will be rendered with the other icon props
   * - Any other value will be returned as a pass-through (as if you didn't use `<Icon />`)
   */
  icon: _propTypes["default"].oneOfType([_propTypes["default"].elementType, _propTypes["default"].element, _propTypes["default"].string]),

  /**
   * Theme provided by ThemeProvider.
   */
  theme: _propTypes["default"].object.isRequired,

  /**
   * Class name passed to the button.
   * Only use if you know what you are doing.
   */
  className: _propTypes["default"].string
}));
(0, _defineProperty2["default"])(TextDropdownButton, "defaultProps", {
  isActive: false,
  icon: _icons.CaretDownIcon
});
(0, _defineProperty2["default"])(TextDropdownButton, "styles", {
  position: 'relative',
  fontFamily: 'ui',
  fontWeight: 500,
  display: 'inline-flex',
  alignItems: 'center',
  flexWrap: 'nowrap'
});

var _default = (0, _theme.withTheme)(TextDropdownButton);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idXR0b25zL3NyYy9UZXh0RHJvcGRvd25CdXR0b24uanMiXSwibmFtZXMiOlsiVGV4dERyb3Bkb3duQnV0dG9uIiwicHJvcHMiLCJ0aGVtZSIsImNsYXNzTmFtZSIsImludGVudCIsImhlaWdodCIsImlzQWN0aXZlIiwiY2hpbGRyZW4iLCJkaXNhYmxlZCIsImFwcGVhcmFuY2UiLCJpc0xvYWRpbmciLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIiwiaWNvbiIsInRoZW1lZENsYXNzTmFtZSIsImdldFRleHREcm9wZG93bkJ1dHRvbkNsYXNzTmFtZSIsInN0eWxlcyIsIk1hdGgiLCJyb3VuZCIsIlB1cmVDb21wb25lbnQiLCJkaW1lbnNpb25zIiwicHJvcFR5cGVzIiwic3BhY2luZyIsInBvc2l0aW9uIiwibGF5b3V0IiwiUHJvcFR5cGVzIiwiYm9vbCIsIm9uZU9mVHlwZSIsImVsZW1lbnRUeXBlIiwiZWxlbWVudCIsInN0cmluZyIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJDYXJldERvd25JY29uIiwiZm9udEZhbWlseSIsImZvbnRXZWlnaHQiLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImZsZXhXcmFwIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0lBRU1BLGtCOzs7Ozs7Ozs7Ozs7NkJBNEVLO0FBQUEsd0JBdUJILEtBQUtDLEtBdkJGO0FBQUEsVUFFTEMsS0FGSyxlQUVMQSxLQUZLO0FBQUEsVUFHTEMsU0FISyxlQUdMQSxTQUhLO0FBQUEsVUFLTEMsTUFMSyxlQUtMQSxNQUxLO0FBQUEsVUFNTEMsTUFOSyxlQU1MQSxNQU5LO0FBQUEsVUFPTEMsUUFQSyxlQU9MQSxRQVBLO0FBQUEsVUFRTEMsUUFSSyxlQVFMQSxRQVJLO0FBQUEsVUFTTEMsUUFUSyxlQVNMQSxRQVRLO0FBQUEsVUFVTEMsVUFWSyxlQVVMQSxVQVZLO0FBQUEsVUFXTEMsU0FYSyxlQVdMQSxTQVhLO0FBQUEsVUFjTEMsWUFkSyxlQWNMQSxZQWRLO0FBQUEsVUFlTEMsV0FmSyxlQWVMQSxXQWZLO0FBQUEsVUFnQkxDLFVBaEJLLGVBZ0JMQSxVQWhCSztBQUFBLFVBaUJMQyxhQWpCSyxlQWlCTEEsYUFqQks7QUFBQSxVQW9CTEMsSUFwQkssZUFvQkxBLElBcEJLO0FBQUEsVUFzQkZkLEtBdEJFO0FBeUJQLFVBQU1lLGVBQWUsR0FBR2QsS0FBSyxDQUFDZSw4QkFBTixFQUF4QjtBQUVBLGFBQ0UsZ0NBQUMsZ0JBQUQ7QUFDRSxRQUFBLEVBQUUsRUFBQyxRQURMO0FBRUUsUUFBQSxTQUFTLEVBQUVELGVBRmI7QUFHRSxRQUFBLFFBQVEsRUFBRSxDQUhaO0FBSUUsUUFBQSxPQUFPLEVBQUUsQ0FBQyxDQUpaO0FBS0UsUUFBQSxRQUFRLEVBQUUsQ0FMWjtBQU1FLFFBQUEsT0FBTyxFQUFFLENBQUMsQ0FOWjtBQU9FLFFBQUEsSUFBSSxFQUFFLEdBUFI7QUFRRSx1QkFBYVY7QUFSZixTQVNNTixrQkFBa0IsQ0FBQ2tCLE1BVHpCLEVBVU1qQixLQVZOO0FBV0UsUUFBQSxRQUFRLEVBQUVPO0FBWFosVUFhR0UsU0FBUyxJQUNSLGdDQUFDLGdCQUFEO0FBQ0UsUUFBQSxVQUFVLEVBQUUsQ0FBQ1MsSUFBSSxDQUFDQyxLQUFMLENBQVdmLE1BQU0sR0FBRyxDQUFwQixDQURmO0FBRUUsUUFBQSxXQUFXLEVBQUVjLElBQUksQ0FBQ0MsS0FBTCxDQUFXZixNQUFNLEdBQUcsQ0FBcEIsQ0FGZjtBQUdFLFFBQUEsSUFBSSxFQUFFYyxJQUFJLENBQUNDLEtBQUwsQ0FBV2YsTUFBTSxHQUFHLENBQXBCO0FBSFIsUUFkSixFQW9CR0UsUUFwQkgsRUFxQkUsZ0NBQUMsVUFBRDtBQUFNLFFBQUEsS0FBSyxFQUFDLFNBQVo7QUFBc0IsUUFBQSxJQUFJLEVBQUVRLElBQTVCO0FBQWtDLFFBQUEsSUFBSSxFQUFFLEVBQXhDO0FBQTRDLFFBQUEsVUFBVSxFQUFFO0FBQXhELFFBckJGLENBREY7QUF5QkQ7OztFQWhJOEJNLG9COztBQUEzQnJCLGtCO2lDQUFBQSxrQixpQ0FLQ3NCLGtCQUFXQyxTLE1BS1hDLGVBQVFELFMsTUFLUkUsZ0JBQVNGLFMsTUFLVEcsY0FBT0gsUztBQUVWOzs7O0FBSUFqQixFQUFBQSxRQUFRLEVBQUVxQixzQkFBVUMsSTs7QUFFcEI7Ozs7QUFJQXBCLEVBQUFBLFFBQVEsRUFBRW1CLHNCQUFVQyxJOztBQUVwQjs7Ozs7Ozs7OztBQVVBYixFQUFBQSxJQUFJLEVBQUVZLHNCQUFVRSxTQUFWLENBQW9CLENBQ3hCRixzQkFBVUcsV0FEYyxFQUV4Qkgsc0JBQVVJLE9BRmMsRUFHeEJKLHNCQUFVSyxNQUhjLENBQXBCLEM7O0FBTU47OztBQUdBOUIsRUFBQUEsS0FBSyxFQUFFeUIsc0JBQVVNLE1BQVYsQ0FBaUJDLFU7O0FBRXhCOzs7O0FBSUEvQixFQUFBQSxTQUFTLEVBQUV3QixzQkFBVUs7O2lDQTNEbkJoQyxrQixrQkE4RGtCO0FBQ3BCTSxFQUFBQSxRQUFRLEVBQUUsS0FEVTtBQUVwQlMsRUFBQUEsSUFBSSxFQUFFb0I7QUFGYyxDO2lDQTlEbEJuQyxrQixZQW1FWTtBQUNkeUIsRUFBQUEsUUFBUSxFQUFFLFVBREk7QUFFZFcsRUFBQUEsVUFBVSxFQUFFLElBRkU7QUFHZEMsRUFBQUEsVUFBVSxFQUFFLEdBSEU7QUFJZEMsRUFBQUEsT0FBTyxFQUFFLGFBSks7QUFLZEMsRUFBQUEsVUFBVSxFQUFFLFFBTEU7QUFNZEMsRUFBQUEsUUFBUSxFQUFFO0FBTkksQzs7ZUFnRUgsc0JBQVV4QyxrQkFBVixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IGRpbWVuc2lvbnMsIHNwYWNpbmcsIHBvc2l0aW9uLCBsYXlvdXQgfSBmcm9tICd1aS1ib3gnXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vdHlwb2dyYXBoeSdcbmltcG9ydCB7IEljb24gfSBmcm9tICcuLi8uLi9pY29uJ1xuaW1wb3J0IHsgU3Bpbm5lciB9IGZyb20gJy4uLy4uL3NwaW5uZXInXG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi90aGVtZSdcbmltcG9ydCB7IENhcmV0RG93bkljb24gfSBmcm9tICcuLi8uLi9pY29ucydcblxuY2xhc3MgVGV4dERyb3Bkb3duQnV0dG9uIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIGRpbWVuc2lvbnMgc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgICAqL1xuICAgIC4uLmRpbWVuc2lvbnMucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIHNwYWNpbmcgc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgICAqL1xuICAgIC4uLnNwYWNpbmcucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIHBvc2l0aW9uIHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICAgKi9cbiAgICAuLi5wb3NpdGlvbi5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyB0aGUgbGF5b3V0IHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICAgKi9cbiAgICAuLi5sYXlvdXQucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogRm9yY2VmdWxseSBzZXQgdGhlIGFjdGl2ZSBzdGF0ZSBvZiBhIGJ1dHRvbi5cbiAgICAgKiBVc2VmdWwgaW4gY29uanVjdGlvbiB3aXRoIGEgUG9wb3Zlci5cbiAgICAgKi9cbiAgICBpc0FjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHRydWUsIHRoZSBidXR0b24gaXMgZGlzYWJsZWQuXG4gICAgICogaXNMb2FkaW5nIGFsc28gc2V0cyB0aGUgYnV0dG9uIHRvIGRpc2FibGVkLlxuICAgICAqL1xuICAgIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIE5hbWUgb2YgdGhlIGljb24sIG9yIGFuIGljb24gZWxlbWVudCB0byByZW5kZXIuXG4gICAgICogVGhpcyBwcm9wIGlzIHJlcXVpcmVkIGJlY2F1c2UgaXQgZGV0ZXJtaW5lcyB0aGUgY29udGVudCBvZiB0aGUgY29tcG9uZW50LCBidXQgaXQgY2FuXG4gICAgICogYmUgZXhwbGljaXRseSBzZXQgdG8gZmFsc3kgdmFsdWVzIHRvIHJlbmRlciBub3RoaW5nLlxuICAgICAqXG4gICAgICogLSBJZiBgbnVsbGAgb3IgYHVuZGVmaW5lZGAgb3IgYGZhbHNlYCwgdGhpcyBjb21wb25lbnQgd2lsbCByZW5kZXIgbm90aGluZy5cbiAgICAgKiAtIElmIGdpdmVuIGFuIEljb25OYW1lIHN0cmluZyBsaXRlcmFsLCBpdCB3aWxsIHJlbmRlciB0aGUgY29ycmVzcG9uZGluZyBFdmVyZ3JlZW4gaWNvblxuICAgICAqIC0gSWYgZ2l2ZW4gYSB2YWxpZCBSZWFjdCBlbGVtZW50IHJlZmVyZW5jZSwgaXQgd2lsbCBiZSByZW5kZXJlZCB3aXRoIHRoZSBvdGhlciBpY29uIHByb3BzXG4gICAgICogLSBBbnkgb3RoZXIgdmFsdWUgd2lsbCBiZSByZXR1cm5lZCBhcyBhIHBhc3MtdGhyb3VnaCAoYXMgaWYgeW91IGRpZG4ndCB1c2UgYDxJY29uIC8+YClcbiAgICAgKi9cbiAgICBpY29uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICAgIFByb3BUeXBlcy5lbGVtZW50LFxuICAgICAgUHJvcFR5cGVzLnN0cmluZ1xuICAgIF0pLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBwYXNzZWQgdG8gdGhlIGJ1dHRvbi5cbiAgICAgKiBPbmx5IHVzZSBpZiB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuXG4gICAgICovXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGlzQWN0aXZlOiBmYWxzZSxcbiAgICBpY29uOiBDYXJldERvd25JY29uXG4gIH1cblxuICBzdGF0aWMgc3R5bGVzID0ge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIGZvbnRGYW1pbHk6ICd1aScsXG4gICAgZm9udFdlaWdodDogNTAwLFxuICAgIGRpc3BsYXk6ICdpbmxpbmUtZmxleCcsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgZmxleFdyYXA6ICdub3dyYXAnXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgdGhlbWUsXG4gICAgICBjbGFzc05hbWUsXG5cbiAgICAgIGludGVudCxcbiAgICAgIGhlaWdodCxcbiAgICAgIGlzQWN0aXZlLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIGFwcGVhcmFuY2UsXG4gICAgICBpc0xvYWRpbmcsXG5cbiAgICAgIC8vIFBhZGRpbmdzXG4gICAgICBwYWRkaW5nUmlnaHQsXG4gICAgICBwYWRkaW5nTGVmdCxcbiAgICAgIHBhZGRpbmdUb3AsXG4gICAgICBwYWRkaW5nQm90dG9tLFxuXG4gICAgICAvLyBJY29uc1xuICAgICAgaWNvbixcblxuICAgICAgLi4ucHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wc1xuXG4gICAgY29uc3QgdGhlbWVkQ2xhc3NOYW1lID0gdGhlbWUuZ2V0VGV4dERyb3Bkb3duQnV0dG9uQ2xhc3NOYW1lKClcblxuICAgIHJldHVybiAoXG4gICAgICA8VGV4dFxuICAgICAgICBpcz1cImJ1dHRvblwiXG4gICAgICAgIGNsYXNzTmFtZT17dGhlbWVkQ2xhc3NOYW1lfVxuICAgICAgICBwYWRkaW5nWD17NH1cbiAgICAgICAgbWFyZ2luWD17LTR9XG4gICAgICAgIHBhZGRpbmdZPXsyfVxuICAgICAgICBtYXJnaW5ZPXstMn1cbiAgICAgICAgc2l6ZT17MzAwfVxuICAgICAgICBkYXRhLWFjdGl2ZT17aXNBY3RpdmV9XG4gICAgICAgIHsuLi5UZXh0RHJvcGRvd25CdXR0b24uc3R5bGVzfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgID5cbiAgICAgICAge2lzTG9hZGluZyAmJiAoXG4gICAgICAgICAgPFNwaW5uZXJcbiAgICAgICAgICAgIG1hcmdpbkxlZnQ9ey1NYXRoLnJvdW5kKGhlaWdodCAvIDgpfVxuICAgICAgICAgICAgbWFyZ2luUmlnaHQ9e01hdGgucm91bmQoaGVpZ2h0IC8gNCl9XG4gICAgICAgICAgICBzaXplPXtNYXRoLnJvdW5kKGhlaWdodCAvIDIpfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgPEljb24gY29sb3I9XCJkZWZhdWx0XCIgaWNvbj17aWNvbn0gc2l6ZT17MTJ9IG1hcmdpbkxlZnQ9ezJ9IC8+XG4gICAgICA8L1RleHQ+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShUZXh0RHJvcGRvd25CdXR0b24pXG4iXX0=