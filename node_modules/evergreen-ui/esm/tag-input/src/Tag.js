import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

/**
 * @overview TagInput accepts multiple values that can be individually removed
 */
import React from 'react';
import PropTypes from 'prop-types';
import { Badge } from '../../badges';
import { CrossIcon } from '../../icons';
import { minorScale } from '../../scales';

var Tag =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(Tag, _React$PureComponent);

  function Tag() {
    _classCallCheck(this, Tag);

    return _possibleConstructorReturn(this, _getPrototypeOf(Tag).apply(this, arguments));
  }

  _createClass(Tag, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          onRemove = _this$props.onRemove,
          isRemovable = _this$props.isRemovable,
          props = _objectWithoutProperties(_this$props, ["children", "onRemove", "isRemovable"]);

      var badgeStyles = {
        alignItems: 'center',
        display: 'inline-flex',
        fontWeight: 400,
        textTransform: 'none'
      };

      if (isRemovable) {
        badgeStyles.paddingRight = minorScale(1);
      }

      return React.createElement(Badge, _extends({
        isInteractive: true
      }, badgeStyles, props), children, isRemovable && React.createElement(CrossIcon, {
        marginLeft: minorScale(1),
        onClick: onRemove,
        size: minorScale(3)
      }));
    }
  }]);

  return Tag;
}(React.PureComponent);

Tag.displayName = "Tag";

_defineProperty(Tag, "propTypes", {
  /** The badge content */
  children: PropTypes.node,

  /**
   * Callback invoked when the removal icon is clicked.
   * (event) => void
   */
  onRemove: PropTypes.func,

  /** Whether or not the tag can be removed. */
  isRemovable: PropTypes.bool
});

export default Tag;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWctaW5wdXQvc3JjL1RhZy5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlByb3BUeXBlcyIsIkJhZGdlIiwiQ3Jvc3NJY29uIiwibWlub3JTY2FsZSIsIlRhZyIsInByb3BzIiwiY2hpbGRyZW4iLCJvblJlbW92ZSIsImlzUmVtb3ZhYmxlIiwiYmFkZ2VTdHlsZXMiLCJhbGlnbkl0ZW1zIiwiZGlzcGxheSIsImZvbnRXZWlnaHQiLCJ0ZXh0VHJhbnNmb3JtIiwicGFkZGluZ1JpZ2h0IiwiUHVyZUNvbXBvbmVudCIsIm5vZGUiLCJmdW5jIiwiYm9vbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7OztBQUlBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsS0FBVCxRQUFzQixjQUF0QjtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsYUFBMUI7QUFDQSxTQUFTQyxVQUFULFFBQTJCLGNBQTNCOztJQUVNQyxHOzs7Ozs7Ozs7Ozs7OzZCQWFLO0FBQUEsd0JBQytDLEtBQUtDLEtBRHBEO0FBQUEsVUFDQ0MsUUFERCxlQUNDQSxRQUREO0FBQUEsVUFDV0MsUUFEWCxlQUNXQSxRQURYO0FBQUEsVUFDcUJDLFdBRHJCLGVBQ3FCQSxXQURyQjtBQUFBLFVBQ3FDSCxLQURyQzs7QUFHUCxVQUFNSSxXQUFXLEdBQUc7QUFDbEJDLFFBQUFBLFVBQVUsRUFBRSxRQURNO0FBRWxCQyxRQUFBQSxPQUFPLEVBQUUsYUFGUztBQUdsQkMsUUFBQUEsVUFBVSxFQUFFLEdBSE07QUFJbEJDLFFBQUFBLGFBQWEsRUFBRTtBQUpHLE9BQXBCOztBQU9BLFVBQUlMLFdBQUosRUFBaUI7QUFDZkMsUUFBQUEsV0FBVyxDQUFDSyxZQUFaLEdBQTJCWCxVQUFVLENBQUMsQ0FBRCxDQUFyQztBQUNEOztBQUVELGFBQ0Usb0JBQUMsS0FBRDtBQUFPLFFBQUEsYUFBYTtBQUFwQixTQUF5Qk0sV0FBekIsRUFBMENKLEtBQTFDLEdBQ0dDLFFBREgsRUFFR0UsV0FBVyxJQUNWLG9CQUFDLFNBQUQ7QUFDRSxRQUFBLFVBQVUsRUFBRUwsVUFBVSxDQUFDLENBQUQsQ0FEeEI7QUFFRSxRQUFBLE9BQU8sRUFBRUksUUFGWDtBQUdFLFFBQUEsSUFBSSxFQUFFSixVQUFVLENBQUMsQ0FBRDtBQUhsQixRQUhKLENBREY7QUFZRDs7OztFQXZDZUosS0FBSyxDQUFDZ0IsYTs7QUFBbEJYLEc7O2dCQUFBQSxHLGVBQ2U7QUFDakI7QUFDQUUsRUFBQUEsUUFBUSxFQUFFTixTQUFTLENBQUNnQixJQUZIOztBQUdqQjs7OztBQUlBVCxFQUFBQSxRQUFRLEVBQUVQLFNBQVMsQ0FBQ2lCLElBUEg7O0FBUWpCO0FBQ0FULEVBQUFBLFdBQVcsRUFBRVIsU0FBUyxDQUFDa0I7QUFUTixDOztBQXlDckIsZUFBZWQsR0FBZiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG92ZXJ2aWV3IFRhZ0lucHV0IGFjY2VwdHMgbXVsdGlwbGUgdmFsdWVzIHRoYXQgY2FuIGJlIGluZGl2aWR1YWxseSByZW1vdmVkXG4gKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICcuLi8uLi9iYWRnZXMnXG5pbXBvcnQgeyBDcm9zc0ljb24gfSBmcm9tICcuLi8uLi9pY29ucydcbmltcG9ydCB7IG1pbm9yU2NhbGUgfSBmcm9tICcuLi8uLi9zY2FsZXMnXG5cbmNsYXNzIFRhZyBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKiBUaGUgYmFkZ2UgY29udGVudCAqL1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICAvKipcbiAgICAgKiBDYWxsYmFjayBpbnZva2VkIHdoZW4gdGhlIHJlbW92YWwgaWNvbiBpcyBjbGlja2VkLlxuICAgICAqIChldmVudCkgPT4gdm9pZFxuICAgICAqL1xuICAgIG9uUmVtb3ZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICAvKiogV2hldGhlciBvciBub3QgdGhlIHRhZyBjYW4gYmUgcmVtb3ZlZC4gKi9cbiAgICBpc1JlbW92YWJsZTogUHJvcFR5cGVzLmJvb2xcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCBvblJlbW92ZSwgaXNSZW1vdmFibGUsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCBiYWRnZVN0eWxlcyA9IHtcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1mbGV4JyxcbiAgICAgIGZvbnRXZWlnaHQ6IDQwMCxcbiAgICAgIHRleHRUcmFuc2Zvcm06ICdub25lJ1xuICAgIH1cblxuICAgIGlmIChpc1JlbW92YWJsZSkge1xuICAgICAgYmFkZ2VTdHlsZXMucGFkZGluZ1JpZ2h0ID0gbWlub3JTY2FsZSgxKVxuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8QmFkZ2UgaXNJbnRlcmFjdGl2ZSB7Li4uYmFkZ2VTdHlsZXN9IHsuLi5wcm9wc30+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAge2lzUmVtb3ZhYmxlICYmIChcbiAgICAgICAgICA8Q3Jvc3NJY29uXG4gICAgICAgICAgICBtYXJnaW5MZWZ0PXttaW5vclNjYWxlKDEpfVxuICAgICAgICAgICAgb25DbGljaz17b25SZW1vdmV9XG4gICAgICAgICAgICBzaXplPXttaW5vclNjYWxlKDMpfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICA8L0JhZGdlPlxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUYWdcbiJdfQ==