import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _extends from "@babel/runtime/helpers/esm/extends";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { spacing, dimensions, position, layout } from 'ui-box';
import { withTheme } from '../../theme';
import { Pane } from '../../layers';
import { Heading, Paragraph } from '../../typography';
import { IconButton } from '../../buttons';
import { Icon } from '../../icon';
import { CrossIcon } from '../../icons';

var Alert =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Alert, _PureComponent);

  function Alert() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Alert);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Alert)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "getIconForIntent", function (intent) {
      var theme = _this.props.theme;
      return React.createElement(Icon, _extends({
        size: 14
      }, theme.getIconForIntent(intent)));
    });

    return _this;
  }

  _createClass(Alert, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          title = _this$props.title,
          intent = _this$props.intent,
          hasTrim = _this$props.hasTrim,
          hasIcon = _this$props.hasIcon,
          children = _this$props.children,
          appearance = _this$props.appearance,
          isRemoveable = _this$props.isRemoveable,
          onRemove = _this$props.onRemove,
          props = _objectWithoutProperties(_this$props, ["theme", "title", "intent", "hasTrim", "hasIcon", "children", "appearance", "isRemoveable", "onRemove"]);
      /**
       * Note that Alert return a className and additional properties.
       */


      var _theme$getAlertProps = theme.getAlertProps({
        appearance: appearance,
        intent: intent,
        hasTrim: hasTrim
      }),
          className = _theme$getAlertProps.className,
          themeProps = _objectWithoutProperties(_theme$getAlertProps, ["className"]);

      return React.createElement(Pane, _extends({
        className: className,
        role: "alert",
        backgroundColor: "white",
        overflow: "hidden",
        position: "relative",
        display: "flex",
        paddingY: 12,
        paddingX: 16
      }, themeProps, props), hasIcon && React.createElement(Pane, {
        marginRight: 10,
        marginLeft: 2,
        height: 20,
        display: "flex",
        alignItems: "center"
      }, this.getIconForIntent(intent)), React.createElement(Pane, {
        display: "flex",
        width: "100%"
      }, React.createElement(Pane, {
        flex: 1
      }, React.createElement(Heading, {
        is: "h4",
        fontWeight: 600,
        size: 400,
        marginTop: 0,
        marginBottom: 0
      }, title), typeof children === 'string' ? React.createElement(Paragraph, {
        size: 400,
        color: "muted"
      }, children) : children), isRemoveable && React.createElement(Pane, {
        marginLeft: 24,
        flexShrink: 0,
        marginBottom: -2,
        marginTop: -2,
        marginRight: -2
      }, React.createElement(IconButton, {
        icon: CrossIcon,
        appearance: "minimal",
        height: 24,
        onClick: onRemove
      }))));
    }
  }]);

  return Alert;
}(PureComponent);

Alert.displayName = "Alert";

_defineProperty(Alert, "propTypes", _objectSpread({}, spacing.propTypes, {}, position.propTypes, {}, layout.propTypes, {}, dimensions.propTypes, {
  /**
   * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.
   */
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),

  /**
   * The intent of the alert.
   */
  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']).isRequired,

  /**
   * The title of the alert.
   */
  title: PropTypes.node,

  /**
   * When true, show a border on the left matching the type.
   */
  hasTrim: PropTypes.bool,

  /**
   * When true, show a icon on the left matching the type,
   */
  hasIcon: PropTypes.bool,

  /**
   * When true, show a remove icon button.
   */
  isRemoveable: PropTypes.bool,

  /**
   * Function called when the remove button is clicked.
   */
  onRemove: PropTypes.func,

  /**
   * The appearance of the alert.
   */
  appearance: PropTypes.oneOf(['default', 'card']),

  /**
   * Theme provided by ThemeProvider.
   */
  theme: PropTypes.object.isRequired
}));

_defineProperty(Alert, "defaultProps", {
  intent: 'none',
  hasTrim: true,
  hasIcon: true,
  isRemoveable: false,
  appearance: 'default'
});

export default withTheme(Alert);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbGVydC9zcmMvQWxlcnQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQdXJlQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwic3BhY2luZyIsImRpbWVuc2lvbnMiLCJwb3NpdGlvbiIsImxheW91dCIsIndpdGhUaGVtZSIsIlBhbmUiLCJIZWFkaW5nIiwiUGFyYWdyYXBoIiwiSWNvbkJ1dHRvbiIsIkljb24iLCJDcm9zc0ljb24iLCJBbGVydCIsImludGVudCIsInRoZW1lIiwicHJvcHMiLCJnZXRJY29uRm9ySW50ZW50IiwidGl0bGUiLCJoYXNUcmltIiwiaGFzSWNvbiIsImNoaWxkcmVuIiwiYXBwZWFyYW5jZSIsImlzUmVtb3ZlYWJsZSIsIm9uUmVtb3ZlIiwiZ2V0QWxlcnRQcm9wcyIsImNsYXNzTmFtZSIsInRoZW1lUHJvcHMiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJub2RlIiwib25lT2YiLCJpc1JlcXVpcmVkIiwiYm9vbCIsImZ1bmMiLCJvYmplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsT0FBVCxFQUFrQkMsVUFBbEIsRUFBOEJDLFFBQTlCLEVBQXdDQyxNQUF4QyxRQUFzRCxRQUF0RDtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsYUFBMUI7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsU0FBU0MsT0FBVCxFQUFrQkMsU0FBbEIsUUFBbUMsa0JBQW5DO0FBQ0EsU0FBU0MsVUFBVCxRQUEyQixlQUEzQjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsWUFBckI7QUFDQSxTQUFTQyxTQUFULFFBQTBCLGFBQTFCOztJQUVNQyxLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7dUVBaUVlLFVBQUFDLE1BQU0sRUFBSTtBQUFBLFVBQ25CQyxLQURtQixHQUNULE1BQUtDLEtB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cG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBzcGFjaW5nLCBkaW1lbnNpb25zLCBwb3NpdGlvbiwgbGF5b3V0IH0gZnJvbSAndWktYm94J1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vdGhlbWUnXG5pbXBvcnQgeyBQYW5lIH0gZnJvbSAnLi4vLi4vbGF5ZXJzJ1xuaW1wb3J0IHsgSGVhZGluZywgUGFyYWdyYXBoIH0gZnJvbSAnLi4vLi4vdHlwb2dyYXBoeSdcbmltcG9ydCB7IEljb25CdXR0b24gfSBmcm9tICcuLi8uLi9idXR0b25zJ1xuaW1wb3J0IHsgSWNvbiB9IGZyb20gJy4uLy4uL2ljb24nXG5pbXBvcnQgeyBDcm9zc0ljb24gfSBmcm9tICcuLi8uLi9pY29ucydcblxuY2xhc3MgQWxlcnQgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyBzb21lIEJveCBBUElzLlxuICAgICAqL1xuICAgIC4uLnNwYWNpbmcucHJvcFR5cGVzLFxuICAgIC4uLnBvc2l0aW9uLnByb3BUeXBlcyxcbiAgICAuLi5sYXlvdXQucHJvcFR5cGVzLFxuICAgIC4uLmRpbWVuc2lvbnMucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGFsZXJ0LiBXaGVuIGEgc3RyaW5nIGlzIHBhc3NlZCBpdCBpcyB3cmFwcGVkIGluIGEgYDxUZXh0IHNpemU9ezQwMH0gLz5gIGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm5vZGVdKSxcblxuICAgIC8qKlxuICAgICAqIFRoZSBpbnRlbnQgb2YgdGhlIGFsZXJ0LlxuICAgICAqL1xuICAgIGludGVudDogUHJvcFR5cGVzLm9uZU9mKFsnbm9uZScsICdzdWNjZXNzJywgJ3dhcm5pbmcnLCAnZGFuZ2VyJ10pXG4gICAgICAuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIFRoZSB0aXRsZSBvZiB0aGUgYWxlcnQuXG4gICAgICovXG4gICAgdGl0bGU6IFByb3BUeXBlcy5ub2RlLFxuXG4gICAgLyoqXG4gICAgICogV2hlbiB0cnVlLCBzaG93IGEgYm9yZGVyIG9uIHRoZSBsZWZ0IG1hdGNoaW5nIHRoZSB0eXBlLlxuICAgICAqL1xuICAgIGhhc1RyaW06IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogV2hlbiB0cnVlLCBzaG93IGEgaWNvbiBvbiB0aGUgbGVmdCBtYXRjaGluZyB0aGUgdHlwZSxcbiAgICAgKi9cbiAgICBoYXNJY29uOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIFdoZW4gdHJ1ZSwgc2hvdyBhIHJlbW92ZSBpY29uIGJ1dHRvbi5cbiAgICAgKi9cbiAgICBpc1JlbW92ZWFibGU6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gY2FsbGVkIHdoZW4gdGhlIHJlbW92ZSBidXR0b24gaXMgY2xpY2tlZC5cbiAgICAgKi9cbiAgICBvblJlbW92ZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgYXBwZWFyYW5jZSBvZiB0aGUgYWxlcnQuXG4gICAgICovXG4gICAgYXBwZWFyYW5jZTogUHJvcFR5cGVzLm9uZU9mKFsnZGVmYXVsdCcsICdjYXJkJ10pLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGludGVudDogJ25vbmUnLFxuICAgIGhhc1RyaW06IHRydWUsXG4gICAgaGFzSWNvbjogdHJ1ZSxcbiAgICBpc1JlbW92ZWFibGU6IGZhbHNlLFxuICAgIGFwcGVhcmFuY2U6ICdkZWZhdWx0J1xuICB9XG5cbiAgZ2V0SWNvbkZvckludGVudCA9IGludGVudCA9PiB7XG4gICAgY29uc3QgeyB0aGVtZSB9ID0gdGhpcy5wcm9wc1xuXG4gICAgcmV0dXJuIDxJY29uIHNpemU9ezE0fSB7Li4udGhlbWUuZ2V0SWNvbkZvckludGVudChpbnRlbnQpfSAvPlxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHRoZW1lLFxuXG4gICAgICB0aXRsZSxcbiAgICAgIGludGVudCxcbiAgICAgIGhhc1RyaW0sXG4gICAgICBoYXNJY29uLFxuICAgICAgY2hpbGRyZW4sXG4gICAgICBhcHBlYXJhbmNlLFxuICAgICAgaXNSZW1vdmVhYmxlLFxuICAgICAgb25SZW1vdmUsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICAvKipcbiAgICAgKiBOb3RlIHRoYXQgQWxlcnQgcmV0dXJuIGEgY2xhc3NOYW1lIGFuZCBhZGRpdGlvbmFsIHByb3BlcnRpZXMuXG4gICAgICovXG4gICAgY29uc3QgeyBjbGFzc05hbWUsIC4uLnRoZW1lUHJvcHMgfSA9IHRoZW1lLmdldEFsZXJ0UHJvcHMoe1xuICAgICAgYXBwZWFyYW5jZSxcbiAgICAgIGludGVudCxcbiAgICAgIGhhc1RyaW1cbiAgICB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQYW5lXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lfVxuICAgICAgICByb2xlPVwiYWxlcnRcIlxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9XCJ3aGl0ZVwiXG4gICAgICAgIG92ZXJmbG93PVwiaGlkZGVuXCJcbiAgICAgICAgcG9zaXRpb249XCJyZWxhdGl2ZVwiXG4gICAgICAgIGRpc3BsYXk9XCJmbGV4XCJcbiAgICAgICAgcGFkZGluZ1k9ezEyfVxuICAgICAgICBwYWRkaW5nWD17MTZ9XG4gICAgICAgIHsuLi50aGVtZVByb3BzfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICA+XG4gICAgICAgIHtoYXNJY29uICYmIChcbiAgICAgICAgICA8UGFuZVxuICAgICAgICAgICAgbWFyZ2luUmlnaHQ9ezEwfVxuICAgICAgICAgICAgbWFyZ2luTGVmdD17Mn1cbiAgICAgICAgICAgIGhlaWdodD17MjB9XG4gICAgICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGhpcy5nZXRJY29uRm9ySW50ZW50KGludGVudCl9XG4gICAgICAgICAgPC9QYW5lPlxuICAgICAgICApfVxuICAgICAgICA8UGFuZSBkaXNwbGF5PVwiZmxleFwiIHdpZHRoPVwiMTAwJVwiPlxuICAgICAgICAgIDxQYW5lIGZsZXg9ezF9PlxuICAgICAgICAgICAgPEhlYWRpbmdcbiAgICAgICAgICAgICAgaXM9XCJoNFwiXG4gICAgICAgICAgICAgIGZvbnRXZWlnaHQ9ezYwMH1cbiAgICAgICAgICAgICAgc2l6ZT17NDAwfVxuICAgICAgICAgICAgICBtYXJnaW5Ub3A9ezB9XG4gICAgICAgICAgICAgIG1hcmdpbkJvdHRvbT17MH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgICAgPC9IZWFkaW5nPlxuICAgICAgICAgICAge3R5cGVvZiBjaGlsZHJlbiA9PT0gJ3N0cmluZycgPyAoXG4gICAgICAgICAgICAgIDxQYXJhZ3JhcGggc2l6ZT17NDAwfSBjb2xvcj1cIm11dGVkXCI+XG4gICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICA8L1BhcmFncmFwaD5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIGNoaWxkcmVuXG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvUGFuZT5cbiAgICAgICAgICB7aXNSZW1vdmVhYmxlICYmIChcbiAgICAgICAgICAgIDxQYW5lXG4gICAgICAgICAgICAgIG1hcmdpbkxlZnQ9ezI0fVxuICAgICAgICAgICAgICBmbGV4U2hyaW5rPXswfVxuICAgICAgICAgICAgICBtYXJnaW5Cb3R0b209ey0yfVxuICAgICAgICAgICAgICBtYXJnaW5Ub3A9ey0yfVxuICAgICAgICAgICAgICBtYXJnaW5SaWdodD17LTJ9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxJY29uQnV0dG9uXG4gICAgICAgICAgICAgICAgaWNvbj17Q3Jvc3NJY29ufVxuICAgICAgICAgICAgICAgIGFwcGVhcmFuY2U9XCJtaW5pbWFsXCJcbiAgICAgICAgICAgICAgICBoZWlnaHQ9ezI0fVxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e29uUmVtb3ZlfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9QYW5lPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvUGFuZT5cbiAgICAgIDwvUGFuZT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKEFsZXJ0KVxuIl19